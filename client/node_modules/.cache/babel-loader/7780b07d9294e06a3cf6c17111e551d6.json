{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { absGradConfig } from './gradients/Abs_grad';\nimport { acosGradConfig } from './gradients/Acos_grad';\nimport { acoshGradConfig } from './gradients/Acosh_grad';\nimport { addGradConfig } from './gradients/Add_grad';\nimport { addNGradConfig } from './gradients/AddN_grad';\nimport { argMaxGradConfig } from './gradients/ArgMax_grad';\nimport { argMinGradConfig } from './gradients/ArgMin_grad';\nimport { asinGradConfig } from './gradients/Asin_grad';\nimport { asinhGradConfig } from './gradients/Asinh_grad';\nimport { atan2GradConfig } from './gradients/Atan2_grad';\nimport { atanGradConfig } from './gradients/Atan_grad';\nimport { atanhGradConfig } from './gradients/Atanh_grad';\nimport { avgPool3DGradConfig } from './gradients/AvgPool3D_grad';\nimport { avgPoolGradConfig } from './gradients/AvgPool_grad';\nimport { batchMatMulGradConfig } from './gradients/BatchMatMul_grad';\nimport { batchToSpaceNDGradConfig } from './gradients/BatchToSpaceND_grad';\nimport { broadcastToGradConfig } from './gradients/BroadcastTo_grad';\nimport { castGradConfig } from './gradients/Cast_grad';\nimport { ceilGradConfig } from './gradients/Ceil_grad';\nimport { clipByValueGradConfig } from './gradients/ClipByValue_grad';\nimport { complexAbsGradConfig } from './gradients/ComplexAbs_grad';\nimport { concatGradConfig } from './gradients/Concat_grad';\nimport { conv2DGradConfig } from './gradients/Conv2D_grad';\nimport { conv2DBackpropInputGradConfig } from './gradients/Conv2DBackpropInput_grad';\nimport { conv3DGradConfig } from './gradients/Conv3D_grad';\nimport { cosGradConfig } from './gradients/Cos_grad';\nimport { coshGradConfig } from './gradients/Cosh_grad';\nimport { cumsumGradConfig } from './gradients/Cumsum_grad';\nimport { depthwiseConv2dNativeGradConfig } from './gradients/DepthwiseConv2dNative_grad';\nimport { dilation2dGradConfig } from './gradients/Dilation2D_grad';\nimport { eluGradConfig } from './gradients/Elu_grad';\nimport { erfGradConfig } from './gradients/Erf_grad';\nimport { expGradConfig } from './gradients/Exp_grad';\nimport { expandDimsGradConfig } from './gradients/ExpandDims_grad';\nimport { expm1GradConfig } from './gradients/Expm1_grad';\nimport { floorGradConfig } from './gradients/Floor_grad';\nimport { floorDivGradConfig } from './gradients/FloorDiv_grad';\nimport { fusedBatchNormGradConfig } from './gradients/FusedBatchNorm_grad';\nimport { gatherGradConfig } from './gradients/GatherV2_grad';\nimport { greaterEqualGradConfig } from './gradients/GreaterEqual_grad';\nimport { identityGradConfig } from './gradients/Identity_grad';\nimport { isFiniteGradConfig } from './gradients/IsFinite_grad';\nimport { isInfGradConfig } from './gradients/IsInf_grad';\nimport { isNanGradConfig } from './gradients/IsNan_grad';\nimport { leakyReluGradConfig } from './gradients/LeakyRelu_grad';\nimport { log1pGradConfig } from './gradients/Log1p_grad';\nimport { logGradConfig } from './gradients/Log_grad';\nimport { logSoftmaxGradConfig } from './gradients/LogSoftmax_grad';\nimport { lrnGradConfig } from './gradients/LRN_grad';\nimport { maxGradConfig } from './gradients/Max_grad';\nimport { maximumGradConfig } from './gradients/Maximum_grad';\nimport { maxPool3DGradConfig } from './gradients/MaxPool3D_grad';\nimport { maxPoolGradConfig } from './gradients/MaxPool_grad';\nimport { meanGradConfig } from './gradients/Mean_grad';\nimport { minGradConfig } from './gradients/Min_grad';\nimport { minimumGradConfig } from './gradients/Minimum_grad';\nimport { mirrorPadGradConfig } from './gradients/MirrorPad_grad';\nimport { modGradConfig } from './gradients/Mod_grad';\nimport { multiplyGradConfig } from './gradients/Multiply_grad';\nimport { negGradConfig } from './gradients/Neg_grad';\nimport { oneHotGradConfig } from './gradients/OneHot_grad';\nimport { onesLikeGradConfig } from './gradients/OnesLike_grad';\nimport { packGradConfig } from './gradients/Pack_grad';\nimport { padV2GradConfig } from './gradients/PadV2_grad';\nimport { powGradConfig } from './gradients/Pow_grad';\nimport { preluGradConfig } from './gradients/Prelu_grad';\nimport { divGradConfig } from './gradients/RealDiv_grad';\nimport { reciprocalGradConfig } from './gradients/Reciprocal_grad';\nimport { relu6GradConfig } from './gradients/Relu6_grad';\nimport { reluGradConfig } from './gradients/Relu_grad';\nimport { reshapeGradConfig } from './gradients/Reshape_grad';\nimport { resizeBilinearGradConfig } from './gradients/ResizeBilinear_grad';\nimport { resizeNearestNeighborGradConfig } from './gradients/ResizeNearestNeighbor_grad';\nimport { reverseGradConfig } from './gradients/Reverse_grad';\nimport { roundGradConfig } from './gradients/Round_grad';\nimport { rsqrtGradConfig } from './gradients/Rsqrt_grad';\nimport { selectGradConfig } from './gradients/Select_grad';\nimport { seluGradConfig } from './gradients/Selu_grad';\nimport { sigmoidGradConfig } from './gradients/Sigmoid_grad';\nimport { signGradConfig } from './gradients/Sign_grad';\nimport { sinGradConfig } from './gradients/Sin_grad';\nimport { sinhGradConfig } from './gradients/Sinh_grad';\nimport { sliceGradConfig } from './gradients/Slice_grad';\nimport { softmaxGradConfig } from './gradients/Softmax_grad';\nimport { softplusGradConfig } from './gradients/Softplus_grad';\nimport { spaceToBatchNDGradConfig } from './gradients/SpaceToBatchND_grad';\nimport { splitVGradConfig } from './gradients/SplitV_grad';\nimport { sqrtGradConfig } from './gradients/Sqrt_grad';\nimport { squareGradConfig } from './gradients/Square_grad';\nimport { squaredDifferenceGradConfig } from './gradients/SquaredDifference_grad';\nimport { stepGradConfig } from './gradients/Step_grad';\nimport { subGradConfig } from './gradients/Sub_grad';\nimport { sumGradConfig } from './gradients/Sum_grad';\nimport { tanGradConfig } from './gradients/Tan_grad';\nimport { tanhGradConfig } from './gradients/Tanh_grad';\nimport { tileGradConfig } from './gradients/Tile_grad';\nimport { transposeGradConfig } from './gradients/Transpose_grad';\nimport { unpackGradConfig } from './gradients/Unpack_grad';\nimport { unsortedSegmentSumGradConfig } from './gradients/UnsortedSegmentSum_grad';\nimport { zerosLikeGradConfig } from './gradients/ZerosLike_grad';\nimport { registerGradient } from './kernel_registry'; // Export all kernel configs here so that the package can auto register them\n\nconst gradConfigs = [absGradConfig, acosGradConfig, acoshGradConfig, addGradConfig, addNGradConfig, argMaxGradConfig, argMinGradConfig, asinGradConfig, asinhGradConfig, atan2GradConfig, atanGradConfig, atanhGradConfig, avgPool3DGradConfig, avgPoolGradConfig, batchMatMulGradConfig, batchToSpaceNDGradConfig, broadcastToGradConfig, castGradConfig, ceilGradConfig, clipByValueGradConfig, complexAbsGradConfig, concatGradConfig, conv2DBackpropInputGradConfig, conv2DGradConfig, conv3DGradConfig, cosGradConfig, coshGradConfig, cumsumGradConfig, depthwiseConv2dNativeGradConfig, dilation2dGradConfig, divGradConfig, eluGradConfig, erfGradConfig, expGradConfig, expandDimsGradConfig, expm1GradConfig, floorDivGradConfig, floorGradConfig, fusedBatchNormGradConfig, gatherGradConfig, greaterEqualGradConfig, identityGradConfig, isFiniteGradConfig, isInfGradConfig, isNanGradConfig, leakyReluGradConfig, log1pGradConfig, logGradConfig, logSoftmaxGradConfig, lrnGradConfig, maxGradConfig, maxGradConfig, maximumGradConfig, maxPool3DGradConfig, maxPoolGradConfig, meanGradConfig, minGradConfig, minimumGradConfig, mirrorPadGradConfig, modGradConfig, multiplyGradConfig, negGradConfig, oneHotGradConfig, onesLikeGradConfig, packGradConfig, padV2GradConfig, padV2GradConfig, powGradConfig, preluGradConfig, reciprocalGradConfig, relu6GradConfig, reluGradConfig, reshapeGradConfig, resizeBilinearGradConfig, resizeNearestNeighborGradConfig, reverseGradConfig, roundGradConfig, rsqrtGradConfig, selectGradConfig, seluGradConfig, sigmoidGradConfig, signGradConfig, sinGradConfig, sinhGradConfig, sliceGradConfig, softmaxGradConfig, softplusGradConfig, spaceToBatchNDGradConfig, spaceToBatchNDGradConfig, splitVGradConfig, splitVGradConfig, sqrtGradConfig, squaredDifferenceGradConfig, squareGradConfig, stepGradConfig, subGradConfig, sumGradConfig, tanGradConfig, tanhGradConfig, tileGradConfig, transposeGradConfig, unpackGradConfig, unsortedSegmentSumGradConfig, zerosLikeGradConfig];\n\nfor (const gradientConfig of gradConfigs) {\n  registerGradient(gradientConfig);\n}","map":{"version":3,"sources":["../src/register_all_gradients.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { absGradConfig } from './gradients/Abs_grad';\nimport { acosGradConfig } from './gradients/Acos_grad';\nimport { acoshGradConfig } from './gradients/Acosh_grad';\nimport { addGradConfig } from './gradients/Add_grad';\nimport { addNGradConfig } from './gradients/AddN_grad';\nimport { argMaxGradConfig } from './gradients/ArgMax_grad';\nimport { argMinGradConfig } from './gradients/ArgMin_grad';\nimport { asinGradConfig } from './gradients/Asin_grad';\nimport { asinhGradConfig } from './gradients/Asinh_grad';\nimport { atan2GradConfig } from './gradients/Atan2_grad';\nimport { atanGradConfig } from './gradients/Atan_grad';\nimport { atanhGradConfig } from './gradients/Atanh_grad';\nimport { avgPool3DGradConfig } from './gradients/AvgPool3D_grad';\nimport { avgPoolGradConfig } from './gradients/AvgPool_grad';\nimport { batchMatMulGradConfig } from './gradients/BatchMatMul_grad';\nimport { batchToSpaceNDGradConfig } from './gradients/BatchToSpaceND_grad';\nimport { broadcastToGradConfig } from './gradients/BroadcastTo_grad';\nimport { castGradConfig } from './gradients/Cast_grad';\nimport { ceilGradConfig } from './gradients/Ceil_grad';\nimport { clipByValueGradConfig } from './gradients/ClipByValue_grad';\nimport { complexAbsGradConfig } from './gradients/ComplexAbs_grad';\nimport { concatGradConfig } from './gradients/Concat_grad';\nimport { conv2DGradConfig } from './gradients/Conv2D_grad';\nimport { conv2DBackpropInputGradConfig } from './gradients/Conv2DBackpropInput_grad';\nimport { conv3DGradConfig } from './gradients/Conv3D_grad';\nimport { cosGradConfig } from './gradients/Cos_grad';\nimport { coshGradConfig } from './gradients/Cosh_grad';\nimport { cumsumGradConfig } from './gradients/Cumsum_grad';\nimport { depthwiseConv2dNativeGradConfig } from './gradients/DepthwiseConv2dNative_grad';\nimport { dilation2dGradConfig } from './gradients/Dilation2D_grad';\nimport { eluGradConfig } from './gradients/Elu_grad';\nimport { erfGradConfig } from './gradients/Erf_grad';\nimport { expGradConfig } from './gradients/Exp_grad';\nimport { expandDimsGradConfig } from './gradients/ExpandDims_grad';\nimport { expm1GradConfig } from './gradients/Expm1_grad';\nimport { floorGradConfig } from './gradients/Floor_grad';\nimport { floorDivGradConfig } from './gradients/FloorDiv_grad';\nimport { fusedBatchNormGradConfig } from './gradients/FusedBatchNorm_grad';\nimport { gatherGradConfig } from './gradients/GatherV2_grad';\nimport { greaterEqualGradConfig } from './gradients/GreaterEqual_grad';\nimport { identityGradConfig } from './gradients/Identity_grad';\nimport { isFiniteGradConfig } from './gradients/IsFinite_grad';\nimport { isInfGradConfig } from './gradients/IsInf_grad';\nimport { isNanGradConfig } from './gradients/IsNan_grad';\nimport { leakyReluGradConfig } from './gradients/LeakyRelu_grad';\nimport { log1pGradConfig } from './gradients/Log1p_grad';\nimport { logGradConfig } from './gradients/Log_grad';\nimport { logSoftmaxGradConfig } from './gradients/LogSoftmax_grad';\nimport { lrnGradConfig } from './gradients/LRN_grad';\nimport { maxGradConfig } from './gradients/Max_grad';\nimport { maximumGradConfig } from './gradients/Maximum_grad';\nimport { maxPool3DGradConfig } from './gradients/MaxPool3D_grad';\nimport { maxPoolGradConfig } from './gradients/MaxPool_grad';\nimport { meanGradConfig } from './gradients/Mean_grad';\nimport { minGradConfig } from './gradients/Min_grad';\nimport { minimumGradConfig } from './gradients/Minimum_grad';\nimport { mirrorPadGradConfig } from './gradients/MirrorPad_grad';\nimport { modGradConfig } from './gradients/Mod_grad';\nimport { multiplyGradConfig } from './gradients/Multiply_grad';\nimport { negGradConfig } from './gradients/Neg_grad';\nimport { oneHotGradConfig } from './gradients/OneHot_grad';\nimport { onesLikeGradConfig } from './gradients/OnesLike_grad';\nimport { packGradConfig } from './gradients/Pack_grad';\nimport { padV2GradConfig } from './gradients/PadV2_grad';\nimport { powGradConfig } from './gradients/Pow_grad';\nimport { preluGradConfig } from './gradients/Prelu_grad';\nimport { divGradConfig } from './gradients/RealDiv_grad';\nimport { reciprocalGradConfig } from './gradients/Reciprocal_grad';\nimport { relu6GradConfig } from './gradients/Relu6_grad';\nimport { reluGradConfig } from './gradients/Relu_grad';\nimport { reshapeGradConfig } from './gradients/Reshape_grad';\nimport { resizeBilinearGradConfig } from './gradients/ResizeBilinear_grad';\nimport { resizeNearestNeighborGradConfig } from './gradients/ResizeNearestNeighbor_grad';\nimport { reverseGradConfig } from './gradients/Reverse_grad';\nimport { roundGradConfig } from './gradients/Round_grad';\nimport { rsqrtGradConfig } from './gradients/Rsqrt_grad';\nimport { selectGradConfig } from './gradients/Select_grad';\nimport { seluGradConfig } from './gradients/Selu_grad';\nimport { sigmoidGradConfig } from './gradients/Sigmoid_grad';\nimport { signGradConfig } from './gradients/Sign_grad';\nimport { sinGradConfig } from './gradients/Sin_grad';\nimport { sinhGradConfig } from './gradients/Sinh_grad';\nimport { sliceGradConfig } from './gradients/Slice_grad';\nimport { softmaxGradConfig } from './gradients/Softmax_grad';\nimport { softplusGradConfig } from './gradients/Softplus_grad';\nimport { spaceToBatchNDGradConfig } from './gradients/SpaceToBatchND_grad';\nimport { splitVGradConfig } from './gradients/SplitV_grad';\nimport { sqrtGradConfig } from './gradients/Sqrt_grad';\nimport { squareGradConfig } from './gradients/Square_grad';\nimport { squaredDifferenceGradConfig } from './gradients/SquaredDifference_grad';\nimport { stepGradConfig } from './gradients/Step_grad';\nimport { subGradConfig } from './gradients/Sub_grad';\nimport { sumGradConfig } from './gradients/Sum_grad';\nimport { tanGradConfig } from './gradients/Tan_grad';\nimport { tanhGradConfig } from './gradients/Tanh_grad';\nimport { tileGradConfig } from './gradients/Tile_grad';\nimport { transposeGradConfig } from './gradients/Transpose_grad';\nimport { unpackGradConfig } from './gradients/Unpack_grad';\nimport { unsortedSegmentSumGradConfig } from './gradients/UnsortedSegmentSum_grad';\nimport { zerosLikeGradConfig } from './gradients/ZerosLike_grad';\nimport { registerGradient } from './kernel_registry';\n// Export all kernel configs here so that the package can auto register them\nconst gradConfigs = [\n    absGradConfig,\n    acosGradConfig,\n    acoshGradConfig,\n    addGradConfig,\n    addNGradConfig,\n    argMaxGradConfig,\n    argMinGradConfig,\n    asinGradConfig,\n    asinhGradConfig,\n    atan2GradConfig,\n    atanGradConfig,\n    atanhGradConfig,\n    avgPool3DGradConfig,\n    avgPoolGradConfig,\n    batchMatMulGradConfig,\n    batchToSpaceNDGradConfig,\n    broadcastToGradConfig,\n    castGradConfig,\n    ceilGradConfig,\n    clipByValueGradConfig,\n    complexAbsGradConfig,\n    concatGradConfig,\n    conv2DBackpropInputGradConfig,\n    conv2DGradConfig,\n    conv3DGradConfig,\n    cosGradConfig,\n    coshGradConfig,\n    cumsumGradConfig,\n    depthwiseConv2dNativeGradConfig,\n    dilation2dGradConfig,\n    divGradConfig,\n    eluGradConfig,\n    erfGradConfig,\n    expGradConfig,\n    expandDimsGradConfig,\n    expm1GradConfig,\n    floorDivGradConfig,\n    floorGradConfig,\n    fusedBatchNormGradConfig,\n    gatherGradConfig,\n    greaterEqualGradConfig,\n    identityGradConfig,\n    isFiniteGradConfig,\n    isInfGradConfig,\n    isNanGradConfig,\n    leakyReluGradConfig,\n    log1pGradConfig,\n    logGradConfig,\n    logSoftmaxGradConfig,\n    lrnGradConfig,\n    maxGradConfig,\n    maxGradConfig,\n    maximumGradConfig,\n    maxPool3DGradConfig,\n    maxPoolGradConfig,\n    meanGradConfig,\n    minGradConfig,\n    minimumGradConfig,\n    mirrorPadGradConfig,\n    modGradConfig,\n    multiplyGradConfig,\n    negGradConfig,\n    oneHotGradConfig,\n    onesLikeGradConfig,\n    packGradConfig,\n    padV2GradConfig,\n    padV2GradConfig,\n    powGradConfig,\n    preluGradConfig,\n    reciprocalGradConfig,\n    relu6GradConfig,\n    reluGradConfig,\n    reshapeGradConfig,\n    resizeBilinearGradConfig,\n    resizeNearestNeighborGradConfig,\n    reverseGradConfig,\n    roundGradConfig,\n    rsqrtGradConfig,\n    selectGradConfig,\n    seluGradConfig,\n    sigmoidGradConfig,\n    signGradConfig,\n    sinGradConfig,\n    sinhGradConfig,\n    sliceGradConfig,\n    softmaxGradConfig,\n    softplusGradConfig,\n    spaceToBatchNDGradConfig,\n    spaceToBatchNDGradConfig,\n    splitVGradConfig,\n    splitVGradConfig,\n    sqrtGradConfig,\n    squaredDifferenceGradConfig,\n    squareGradConfig,\n    stepGradConfig,\n    subGradConfig,\n    sumGradConfig,\n    tanGradConfig,\n    tanhGradConfig,\n    tileGradConfig,\n    transposeGradConfig,\n    unpackGradConfig,\n    unsortedSegmentSumGradConfig,\n    zerosLikeGradConfig\n];\nfor (const gradientConfig of gradConfigs) {\n    registerGradient(gradientConfig);\n}\n//# sourceMappingURL=register_all_gradients.js.map"]},"metadata":{},"sourceType":"module"}