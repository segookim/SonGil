{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'PlaceholderWithDefault',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'default',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'shape',\n    'name': 'shape',\n    'type': 'shape'\n  }, {\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'Placeholder',\n  'category': 'graph',\n  'attrs': [{\n    'tfName': 'shape',\n    'name': 'shape',\n    'type': 'shape'\n  }, {\n    'tfName': 'dtype',\n    'name': 'dtype',\n    'type': 'dtype'\n  }]\n}, {\n  'tfOpName': 'Const',\n  'category': 'graph'\n}, {\n  'tfOpName': 'Identity',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'IdentityN',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'x',\n    'type': 'tensors'\n  }]\n}, {\n  'tfOpName': 'Snapshot',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Rank',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Size',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'Shape',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'ShapeN',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'x',\n    'type': 'tensors'\n  }]\n}, {\n  'tfOpName': 'Print',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'data',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'message',\n    'name': 'message',\n    'type': 'string'\n  }, {\n    'tfName': 'first_n',\n    'name': 'firstN',\n    'type': 'number',\n    'notSupported': true\n  }, {\n    'tfName': 'summarize',\n    'name': 'summarize',\n    'type': 'number',\n    'defaultValue': 3\n  }]\n}, {\n  'tfOpName': 'NoOp',\n  'category': 'graph',\n  'inputs': []\n}, {\n  'tfOpName': 'StopGradient',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'FakeQuantWithMinMaxVars',\n  'category': 'graph',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'min',\n    'name': 'min',\n    'type': 'number'\n  }, {\n    'tfName': 'max',\n    'name': 'max',\n    'type': 'number'\n  }]\n}];","map":{"version":3,"sources":["../../../src/operations/op_list/graph.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'PlaceholderWithDefault',\n        'category': 'graph',\n        'inputs': [\n            { 'start': 0, 'name': 'default', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'shape', 'name': 'shape', 'type': 'shape' },\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' }\n        ]\n    },\n    {\n        'tfOpName': 'Placeholder',\n        'category': 'graph',\n        'attrs': [\n            { 'tfName': 'shape', 'name': 'shape', 'type': 'shape' },\n            { 'tfName': 'dtype', 'name': 'dtype', 'type': 'dtype' }\n        ]\n    },\n    { 'tfOpName': 'Const', 'category': 'graph' }, {\n        'tfOpName': 'Identity',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'IdentityN',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors' }]\n    },\n    {\n        'tfOpName': 'Snapshot',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'Rank',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'Size',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'Shape',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'ShapeN',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'end': 0, 'name': 'x', 'type': 'tensors' }]\n    },\n    {\n        'tfOpName': 'Print',\n        'category': 'graph',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'data', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'message', 'name': 'message', 'type': 'string' }, {\n                'tfName': 'first_n',\n                'name': 'firstN',\n                'type': 'number',\n                'notSupported': true\n            },\n            {\n                'tfName': 'summarize',\n                'name': 'summarize',\n                'type': 'number',\n                'defaultValue': 3\n            }\n        ]\n    },\n    { 'tfOpName': 'NoOp', 'category': 'graph', 'inputs': [] }, {\n        'tfOpName': 'StopGradient',\n        'category': 'graph',\n        'inputs': [{ 'start': 0, 'name': 'x', 'type': 'tensor' }]\n    },\n    {\n        'tfOpName': 'FakeQuantWithMinMaxVars',\n        'category': 'graph',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'min', 'name': 'min', 'type': 'number' },\n            { 'tfName': 'max', 'name': 'max', 'type': 'number' }\n        ]\n    }\n];\n//# sourceMappingURL=graph.js.map"]},"metadata":{},"sourceType":"module"}