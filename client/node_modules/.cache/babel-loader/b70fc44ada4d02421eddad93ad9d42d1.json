{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropFilter } from '../kernel_names';\nimport { op } from './operation';\nimport { reshape } from './reshape';\n\nfunction depthwiseConv2dNativeBackpropFilter_(x, dy, filterShape, strides, pad, dilations = [1, 1], dimRoundingMode) {\n  let x4D = x;\n\n  if (x.rank === 3) {\n    x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n  }\n\n  let dy4D = dy;\n\n  if (dy4D.rank === 3) {\n    dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n  }\n\n  const inputs = {\n    x: x4D,\n    dy: dy4D\n  };\n  const attrs = {\n    strides,\n    pad,\n    dimRoundingMode,\n    dilations,\n    filterShape\n  }; // tslint:disable-next-line: no-unnecessary-type-assertion\n\n  return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter, inputs, attrs);\n}\n\nexport const depthwiseConv2dNativeBackpropFilter = op({\n  depthwiseConv2dNativeBackpropFilter_\n});","map":{"version":3,"sources":["../../src/ops/depthwise_conv2d_native_backprop_filter.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,mCAAR,QAAuI,iBAAvI;AAKA,SAAQ,EAAR,QAAiB,aAAjB;AACA,SAAQ,OAAR,QAAsB,WAAtB;;AAEA,SAAS,oCAAT,CACI,CADJ,EACU,EADV,EACiB,WADjB,EAEI,OAFJ,EAEsC,GAFtC,EAGI,SAAA,GAAqC,CAAC,CAAD,EAAI,CAAJ,CAHzC,EAII,eAJJ,EAI4C;AAC1C,MAAI,GAAG,GAAG,CAAV;;AACA,MAAI,CAAC,CAAC,IAAF,KAAW,CAAf,EAAkB;AAChB,IAAA,GAAG,GAAG,OAAO,CAAC,CAAD,EAAI,CAAC,CAAD,EAAI,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAJ,EAAgB,CAAC,CAAC,KAAF,CAAQ,CAAR,CAAhB,EAA4B,CAAC,CAAC,KAAF,CAAQ,CAAR,CAA5B,CAAJ,CAAb;AACD;;AACD,MAAI,IAAI,GAAG,EAAX;;AACA,MAAI,IAAI,CAAC,IAAL,KAAc,CAAlB,EAAqB;AACnB,IAAA,IAAI,GAAG,OAAO,CAAC,EAAD,EAAK,CAAC,CAAD,EAAI,EAAE,CAAC,KAAH,CAAS,CAAT,CAAJ,EAAiB,EAAE,CAAC,KAAH,CAAS,CAAT,CAAjB,EAA8B,EAAE,CAAC,KAAH,CAAS,CAAT,CAA9B,CAAL,CAAd;AACD;;AAED,QAAM,MAAM,GAA8C;AAAC,IAAA,CAAC,EAAE,GAAJ;AAAS,IAAA,EAAE,EAAE;AAAb,GAA1D;AACA,QAAM,KAAK,GACP;AAAC,IAAA,OAAD;AAAU,IAAA,GAAV;AAAe,IAAA,eAAf;AAAgC,IAAA,SAAhC;AAA2C,IAAA;AAA3C,GADJ,CAX0C,CAc1C;;AACA,SAAO,MAAM,CAAC,SAAP,CACI,mCADJ,EAEI,MAFJ,EAEoC,KAFpC,CAAP;AAID;;AAED,OAAO,MAAM,mCAAmC,GAC5C,EAAE,CAAC;AAAC,EAAA;AAAD,CAAD,CADC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { DepthwiseConv2dNativeBackpropFilter } from '../kernel_names';\nimport { op } from './operation';\nimport { reshape } from './reshape';\nfunction depthwiseConv2dNativeBackpropFilter_(x, dy, filterShape, strides, pad, dilations = [1, 1], dimRoundingMode) {\n    let x4D = x;\n    if (x.rank === 3) {\n        x4D = reshape(x, [1, x.shape[0], x.shape[1], x.shape[2]]);\n    }\n    let dy4D = dy;\n    if (dy4D.rank === 3) {\n        dy4D = reshape(dy, [1, dy.shape[0], dy.shape[1], dy.shape[2]]);\n    }\n    const inputs = { x: x4D, dy: dy4D };\n    const attrs = { strides, pad, dimRoundingMode, dilations, filterShape };\n    // tslint:disable-next-line: no-unnecessary-type-assertion\n    return ENGINE.runKernel(DepthwiseConv2dNativeBackpropFilter, inputs, attrs);\n}\nexport const depthwiseConv2dNativeBackpropFilter = op({ depthwiseConv2dNativeBackpropFilter_ });\n//# sourceMappingURL=depthwise_conv2d_native_backprop_filter.js.map"]},"metadata":{},"sourceType":"module"}