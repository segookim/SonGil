{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n  constructor(destSize) {\n    this.variableNames = ['source'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    const dtype = getCoordsDataType(this.rank);\n    const coords = getChannels('coords', this.rank);\n    const sourceLoc = getChannels('sourceLoc', this.rank);\n    const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n    const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n    const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n    const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n    const sourceLocSetup = this.rank <= 4 ? `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` : destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`).join('\\n');\n    this.userCode = `\n      uniform int start[${this.rank}];\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n  }\n\n  getCustomSetupFunc(start) {\n    if (start.length !== this.rank) {\n      throw Error(`The rank (${this.rank}) of the program must match the ` + `length of start (${start.length})`);\n    }\n\n    return (gpgpu, webGLProgram) => {\n      if (this.startLoc == null) {\n        this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n\n        if (this.startLoc == null) {\n          // This means the compiler has optimized and realized it doesn't need\n          // the uniform.\n          return;\n        }\n      }\n\n      gpgpu.gl.uniform1iv(this.startLoc, start);\n    };\n  }\n\n}","map":{"version":3,"sources":["../src/slice_packed_gpu.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n    constructor(destSize) {\n        this.variableNames = ['source'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        const dtype = getCoordsDataType(this.rank);\n        const coords = getChannels('coords', this.rank);\n        const sourceLoc = getChannels('sourceLoc', this.rank);\n        const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n        const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n        const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n        const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n        const sourceLocSetup = this.rank <= 4 ?\n            `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n            destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n                .join('\\n');\n        this.userCode = `\n      uniform int start[${this.rank}];\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n    }\n    getCustomSetupFunc(start) {\n        if (start.length !== this.rank) {\n            throw Error(`The rank (${this.rank}) of the program must match the ` +\n                `length of start (${start.length})`);\n        }\n        return (gpgpu, webGLProgram) => {\n            if (this.startLoc == null) {\n                this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(this.startLoc, start);\n        };\n    }\n}\n//# sourceMappingURL=slice_packed_gpu.js.map"]},"metadata":{},"sourceType":"module"}