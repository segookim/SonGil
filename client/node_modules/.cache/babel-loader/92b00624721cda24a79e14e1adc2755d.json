{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nimport { FillProgram } from '../fill_gpu';\nexport function fill(args) {\n  var backend = args.backend,\n      attrs = args.attrs;\n  var shape = attrs.shape,\n      value = attrs.value;\n  var dtype = attrs.dtype;\n  dtype = dtype || util.inferDtype(value);\n\n  if (dtype === 'string') {\n    // String type should be handled in CPU memory.\n    var values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n    values.fill(value);\n    return backend.makeTensorInfo(shape, dtype, values);\n  } else {\n    var program = new FillProgram(shape, value);\n    var customSetup = program.getCustomSetupFunc(value);\n    return backend.runWebGLProgram(program, [], dtype, customSetup);\n  }\n}\nexport var fillConfig = {\n  kernelName: Fill,\n  backendName: 'webgl',\n  kernelFunc: fill\n};","map":{"version":3,"sources":["../../src/kernels/Fill.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,IAAR,EAA+D,IAA/D,QAA0E,uBAA1E;AAGA,SAAQ,WAAR,QAA0B,aAA1B;AAEA,OAAM,SAAU,IAAV,CAAe,IAAf,EAAkE;AAAA,MAE/D,OAF+D,GAE7C,IAF6C,CAE/D,OAF+D;AAAA,MAEtD,KAFsD,GAE7C,IAF6C,CAEtD,KAFsD;AAAA,MAG/D,KAH+D,GAG/C,KAH+C,CAG/D,KAH+D;AAAA,MAGxD,KAHwD,GAG/C,KAH+C,CAGxD,KAHwD;AAAA,MAIjE,KAJiE,GAIxD,KAJwD,CAIjE,KAJiE;AAMtE,EAAA,KAAK,GAAG,KAAK,IAAI,IAAI,CAAC,UAAL,CAAgB,KAAhB,CAAjB;;AAEA,MAAI,KAAK,KAAK,QAAd,EAAwB;AACtB;AACA,QAAM,MAAM,GAAG,IAAI,CAAC,iBAAL,CAAuB,KAAvB,EAA8B,IAAI,CAAC,aAAL,CAAmB,KAAnB,CAA9B,CAAf;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,KAAZ;AACA,WAAO,OAAO,CAAC,cAAR,CAAuB,KAAvB,EAA8B,KAA9B,EAAqC,MAArC,CAAP;AACD,GALD,MAKO;AACL,QAAM,OAAO,GAAG,IAAI,WAAJ,CAAgB,KAAhB,EAAuB,KAAvB,CAAhB;AACA,QAAM,WAAW,GAAG,OAAO,CAAC,kBAAR,CAA2B,KAA3B,CAApB;AACA,WAAO,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,EAAjC,EAAqC,KAArC,EAA4C,WAA5C,CAAP;AACD;AACF;AAED,OAAO,IAAM,UAAU,GAAiB;AACtC,EAAA,UAAU,EAAE,IAD0B;AAEtC,EAAA,WAAW,EAAE,OAFyB;AAGtC,EAAA,UAAU,EAAE;AAH0B,CAAjC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Fill, util } from '@tensorflow/tfjs-core';\nimport { FillProgram } from '../fill_gpu';\nexport function fill(args) {\n    const { backend, attrs } = args;\n    const { shape, value } = attrs;\n    let { dtype } = attrs;\n    dtype = dtype || util.inferDtype(value);\n    if (dtype === 'string') {\n        // String type should be handled in CPU memory.\n        const values = util.getArrayFromDType(dtype, util.sizeFromShape(shape));\n        values.fill(value);\n        return backend.makeTensorInfo(shape, dtype, values);\n    }\n    else {\n        const program = new FillProgram(shape, value);\n        const customSetup = program.getCustomSetupFunc(value);\n        return backend.runWebGLProgram(program, [], dtype, customSetup);\n    }\n}\nexport const fillConfig = {\n    kernelName: Fill,\n    backendName: 'webgl',\n    kernelFunc: fill\n};\n//# sourceMappingURL=Fill.js.map"]},"metadata":{},"sourceType":"module"}