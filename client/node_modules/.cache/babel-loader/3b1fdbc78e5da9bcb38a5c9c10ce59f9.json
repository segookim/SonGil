{"ast":null,"code":"var _jsxFileName = \"/Users/kimkiwoong/SonGil/client/src/layouts/Navbar/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { AppBar, makeStyles, Tabs, Toolbar, Tab, Typography, Button, Menu, MenuItem, useMediaQuery, useTheme } from '@material-ui/core';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport green from \"@material-ui/core/colors/green\";\nimport DrawerComponent from './DrawerComponent/DrawerComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    marginRight: theme.spacing(2, 'auto')\n  },\n  loginButton: {\n    marginLeft: 'auto'\n  },\n  title: {\n    flexGrow: 1\n  },\n  customColor: {\n    // or hex code, this is normal CSS background-color\n    backgroundColor: green[500]\n  },\n  customHeight: {\n    minHeight: 200\n  },\n  offset: theme.mixins.toolbar\n}));\nexport const Navbar = () => {\n  _s();\n\n  //Hooks\n  const [value, setValue] = useState(0);\n  const [anchorEl, setAnchorEl] = useState(null); //Boolean(anchorEl) This is use to convert a null value in to a boolean\n  //anchorEl Is us to set the position of the menu\n\n  const classes = useStyles();\n  const theme = useTheme(); //Get a copy of our default theme in our component so that we can access the breakpoints and pass the useMediaQuery\n\n  const isMatch = useMediaQuery(theme.breakpoints.down('sm')); //Functions\n\n  const handleClickTab = (e, newValue) => {\n    //The second value contains the current index\n    setValue(newValue);\n  };\n\n  const handleOpenMenu = e => {\n    setAnchorEl(e.currentTarget);\n  };\n\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      elevation: 0,\n      color: \"primary\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"start\",\n          className: classes.menuButton,\n          color: \"inherit\",\n          \"aria-label\": \"menu\",\n          children: /*#__PURE__*/_jsxDEV(DrawerComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          href: \"/\",\n          color: \"inherit\",\n          children: \"SonGil\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          edge: \"end\",\n          className: classes.loginButton,\n          href: \"/Account\",\n          color: \"inherit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Menu, {\n      style: {\n        marginTop: '50px'\n      },\n      id: \"menu\",\n      anchorEl: anchorEl,\n      open: Boolean(anchorEl),\n      onClose: handleCloseMenu,\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleCloseMenu,\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleCloseMenu,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleCloseMenu,\n        children: \"About\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        onClick: handleCloseMenu,\n        children: \"Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Navbar, \"SEhee4xO7/rJ8jUfFLBLTwbAagg=\", false, function () {\n  return [useStyles, useTheme, useMediaQuery];\n});\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/kimkiwoong/SonGil/client/src/layouts/Navbar/Navbar.js"],"names":["React","useState","AppBar","makeStyles","Tabs","Toolbar","Tab","Typography","Button","Menu","MenuItem","useMediaQuery","useTheme","IconButton","green","DrawerComponent","useStyles","theme","menuButton","marginRight","spacing","loginButton","marginLeft","title","flexGrow","customColor","backgroundColor","customHeight","minHeight","offset","mixins","toolbar","Navbar","value","setValue","anchorEl","setAnchorEl","classes","isMatch","breakpoints","down","handleClickTab","e","newValue","handleOpenMenu","currentTarget","handleCloseMenu","marginTop","Boolean"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  AppBar,\n  makeStyles,\n  Tabs,\n  Toolbar,\n  Tab,\n  Typography,\n  Button,\n  Menu,\n  MenuItem,\n  useMediaQuery,\n  useTheme,\n} from '@material-ui/core';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport green from \"@material-ui/core/colors/green\";\n\nimport DrawerComponent from './DrawerComponent/DrawerComponent';\n\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n      marginRight: theme.spacing(2, 'auto')\n    },\n    loginButton:{\n      marginLeft: 'auto'\n    },\n    title: {\n      flexGrow: 1\n    },\n    customColor: {\n      // or hex code, this is normal CSS background-color\n      backgroundColor: green[500]\n    },\n    customHeight: {\n      minHeight: 200\n    },\n    offset: theme.mixins.toolbar\n  }));\n\nexport const Navbar = () => {\n  //Hooks\n  const [value, setValue] = useState(0);\n  const [anchorEl, setAnchorEl] = useState(null);\n  //Boolean(anchorEl) This is use to convert a null value in to a boolean\n  //anchorEl Is us to set the position of the menu\n\n  const classes = useStyles();\n\n  const theme = useTheme(); //Get a copy of our default theme in our component so that we can access the breakpoints and pass the useMediaQuery\n\n  const isMatch = useMediaQuery(theme.breakpoints.down('sm'));\n\n  //Functions\n  const handleClickTab = (e, newValue) => {\n    //The second value contains the current index\n    setValue(newValue);\n  };\n\n  const handleOpenMenu = e => {\n    setAnchorEl(e.currentTarget);\n  };\n  const handleCloseMenu = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <>\n      <AppBar elevation={0} color='primary'>\n        <Toolbar>\n            <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"menu\"\n            >\n                <DrawerComponent />\n            </IconButton>\n            {/* <Typography variant=\"h6\" className={classes.title}>\n                SonGil\n            </Typography> */}\n            <IconButton \n              href=\"/\" \n              color=\"inherit\"\n            >\n                SonGil\n            </IconButton>\n            <IconButton\n              edge=\"end\" \n              className={classes.loginButton} \n              href=\"/Account\" \n              color=\"inherit\"\n            >\n                Login\n            </IconButton>\n        </Toolbar>\n      </AppBar>\n      {/* Menu */}\n      <Menu\n        style={{ marginTop: '50px' }}\n        id='menu'\n        anchorEl={anchorEl}\n        open={Boolean(anchorEl)}\n        onClose={handleCloseMenu}>\n        <MenuItem onClick={handleCloseMenu}>Home</MenuItem>\n        <MenuItem onClick={handleCloseMenu}>Start</MenuItem>\n        <MenuItem onClick={handleCloseMenu}>About</MenuItem>\n        <MenuItem onClick={handleCloseMenu}>Account</MenuItem>\n      </Menu>\n    </>\n  );\n};\n\nexport default Navbar;"]},"metadata":{},"sourceType":"module"}