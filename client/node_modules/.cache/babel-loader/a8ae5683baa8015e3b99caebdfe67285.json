{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedConv2D } from '@tensorflow/tfjs-core';\nimport { applyActivation } from '../utils/fused_utils';\nimport { add } from './Add';\nimport { conv2D } from './Conv2D';\nexport function fusedConv2D(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x,\n    filter,\n    bias,\n    preluActivationWeights\n  } = inputs;\n  const {\n    strides,\n    pad,\n    dataFormat,\n    dilations,\n    dimRoundingMode,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n  let result = conv2D({\n    inputs: {\n      x,\n      filter\n    },\n    backend,\n    attrs: {\n      strides,\n      pad,\n      dataFormat,\n      dilations,\n      dimRoundingMode\n    }\n  });\n\n  if (bias) {\n    const resultOld = result;\n    result = add({\n      inputs: {\n        a: result,\n        b: bias\n      },\n      backend\n    });\n    backend.disposeIntermediateTensorInfo(resultOld);\n  }\n\n  if (activation) {\n    const resultOld = result;\n    result = applyActivation(backend, result, activation, preluActivationWeights, leakyreluAlpha);\n    backend.disposeIntermediateTensorInfo(resultOld);\n  }\n\n  return result;\n}\nexport const fusedConv2DConfig = {\n  kernelName: FusedConv2D,\n  backendName: 'cpu',\n  kernelFunc: fusedConv2D\n};","map":{"version":3,"sources":["../../src/kernels/FusedConv2D.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,WAAR,QAAqG,uBAArG;AAGA,SAAQ,eAAR,QAA8B,sBAA9B;AACA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,MAAR,QAAqB,UAArB;AAEA,OAAM,SAAU,WAAV,CAAsB,IAAtB,EAIL;AACC,QAAM;AAAC,IAAA,MAAD;AAAS,IAAA,OAAT;AAAkB,IAAA;AAAlB,MAA2B,IAAjC;AACA,QAAM;AAAC,IAAA,CAAD;AAAI,IAAA,MAAJ;AAAY,IAAA,IAAZ;AAAkB,IAAA;AAAlB,MAA4C,MAAlD;AACA,QAAM;AACJ,IAAA,OADI;AAEJ,IAAA,GAFI;AAGJ,IAAA,UAHI;AAIJ,IAAA,SAJI;AAKJ,IAAA,eALI;AAMJ,IAAA,UANI;AAOJ,IAAA;AAPI,MAQF,KARJ;AAUA,MAAI,MAAM,GAAG,MAAM,CAAC;AAClB,IAAA,MAAM,EAAE;AAAC,MAAA,CAAD;AAAI,MAAA;AAAJ,KADU;AAElB,IAAA,OAFkB;AAGlB,IAAA,KAAK,EAAE;AAAC,MAAA,OAAD;AAAU,MAAA,GAAV;AAAe,MAAA,UAAf;AAA2B,MAAA,SAA3B;AAAsC,MAAA;AAAtC;AAHW,GAAD,CAAnB;;AAMA,MAAI,IAAJ,EAAU;AACR,UAAM,SAAS,GAAG,MAAlB;AACA,IAAA,MAAM,GAAG,GAAG,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,CAAC,EAAE,MAAJ;AAAY,QAAA,CAAC,EAAE;AAAf,OAAT;AAA+B,MAAA;AAA/B,KAAD,CAAZ;AACA,IAAA,OAAO,CAAC,6BAAR,CAAsC,SAAtC;AACD;;AAED,MAAI,UAAJ,EAAgB;AACd,UAAM,SAAS,GAAG,MAAlB;AACA,IAAA,MAAM,GAAG,eAAe,CACpB,OADoB,EACX,MADW,EACH,UADG,EACS,sBADT,EACiC,cADjC,CAAxB;AAEA,IAAA,OAAO,CAAC,6BAAR,CAAsC,SAAtC;AACD;;AAED,SAAO,MAAP;AACD;AAED,OAAO,MAAM,iBAAiB,GAAiB;AAC7C,EAAA,UAAU,EAAE,WADiC;AAE7C,EAAA,WAAW,EAAE,KAFgC;AAG7C,EAAA,UAAU,EAAE;AAHiC,CAAxC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { FusedConv2D } from '@tensorflow/tfjs-core';\nimport { applyActivation } from '../utils/fused_utils';\nimport { add } from './Add';\nimport { conv2D } from './Conv2D';\nexport function fusedConv2D(args) {\n    const { inputs, backend, attrs } = args;\n    const { x, filter, bias, preluActivationWeights } = inputs;\n    const { strides, pad, dataFormat, dilations, dimRoundingMode, activation, leakyreluAlpha } = attrs;\n    let result = conv2D({\n        inputs: { x, filter },\n        backend,\n        attrs: { strides, pad, dataFormat, dilations, dimRoundingMode }\n    });\n    if (bias) {\n        const resultOld = result;\n        result = add({ inputs: { a: result, b: bias }, backend });\n        backend.disposeIntermediateTensorInfo(resultOld);\n    }\n    if (activation) {\n        const resultOld = result;\n        result = applyActivation(backend, result, activation, preluActivationWeights, leakyreluAlpha);\n        backend.disposeIntermediateTensorInfo(resultOld);\n    }\n    return result;\n}\nexport const fusedConv2DConfig = {\n    kernelName: FusedConv2D,\n    backendName: 'cpu',\n    kernelFunc: fusedConv2D\n};\n//# sourceMappingURL=FusedConv2D.js.map"]},"metadata":{},"sourceType":"module"}