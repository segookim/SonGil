{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    x\n  } = inputs;\n  const {\n    numOrSizeSplits,\n    axis\n  } = attrs;\n  const $axis = util.parseAxisParam(axis, x.shape)[0];\n  const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n  const xRank = x.shape.length;\n  const begin = new Array(xRank).fill(0);\n  const size = x.shape.slice();\n  return splitSizes.map(s => {\n    const sliceSize = [...size];\n    sliceSize[$axis] = s;\n    const sliceT = slice({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        begin,\n        size: sliceSize\n      }\n    });\n    begin[$axis] += s;\n    return sliceT;\n  });\n}\nexport const splitVConfig = {\n  kernelName: SplitV,\n  backendName: 'webgl',\n  kernelFunc: splitV\n};","map":{"version":3,"sources":["../../src/kernels/SplitV.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAgD,MAAhD,EAA+F,IAA/F,QAA0G,uBAA1G;AAGA,SAAQ,KAAR,QAAoB,SAApB;AAEA,OAAM,SAAU,MAAV,CACF,IADE,EAEuE;AAE3E,QAAM;AAAC,IAAA,MAAD;AAAS,IAAA,OAAT;AAAkB,IAAA;AAAlB,MAA2B,IAAjC;AACA,QAAM;AAAC,IAAA;AAAD,MAAM,MAAZ;AACA,QAAM;AAAC,IAAA,eAAD;AAAkB,IAAA;AAAlB,MAA0B,KAAhC;AAEA,QAAM,KAAK,GAAG,IAAI,CAAC,cAAL,CAAoB,IAApB,EAA0B,CAAC,CAAC,KAA5B,EAAmC,CAAnC,CAAd;AACA,QAAM,UAAU,GAAG,YAAY,CAAC,gBAAb,CAA8B,CAA9B,EAAiC,eAAjC,EAAkD,KAAlD,CAAnB;AAEA,QAAM,KAAK,GAAG,CAAC,CAAC,KAAF,CAAQ,MAAtB;AACA,QAAM,KAAK,GAAG,IAAI,KAAJ,CAAU,KAAV,EAAiB,IAAjB,CAAsB,CAAtB,CAAd;AACA,QAAM,IAAI,GAAG,CAAC,CAAC,KAAF,CAAQ,KAAR,EAAb;AAEA,SAAO,UAAU,CAAC,GAAX,CAAe,CAAC,IAAG;AACxB,UAAM,SAAS,GAAG,CAAC,GAAG,IAAJ,CAAlB;AACA,IAAA,SAAS,CAAC,KAAD,CAAT,GAAmB,CAAnB;AACA,UAAM,MAAM,GACR,KAAK,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA;AAAD,OAAT;AAAc,MAAA,OAAd;AAAuB,MAAA,KAAK,EAAE;AAAC,QAAA,KAAD;AAAQ,QAAA,IAAI,EAAE;AAAd;AAA9B,KAAD,CADT;AAEA,IAAA,KAAK,CAAC,KAAD,CAAL,IAAgB,CAAhB;AACA,WAAO,MAAP;AACD,GAPM,CAAP;AAQD;AAED,OAAO,MAAM,YAAY,GAAiB;AACxC,EAAA,UAAU,EAAE,MAD4B;AAExC,EAAA,WAAW,EAAE,OAF2B;AAGxC,EAAA,UAAU,EAAE;AAH4B,CAAnC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SplitV, util } from '@tensorflow/tfjs-core';\nimport { slice } from './Slice';\nexport function splitV(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { numOrSizeSplits, axis } = attrs;\n    const $axis = util.parseAxisParam(axis, x.shape)[0];\n    const splitSizes = backend_util.prepareSplitSize(x, numOrSizeSplits, $axis);\n    const xRank = x.shape.length;\n    const begin = new Array(xRank).fill(0);\n    const size = x.shape.slice();\n    return splitSizes.map(s => {\n        const sliceSize = [...size];\n        sliceSize[$axis] = s;\n        const sliceT = slice({ inputs: { x }, backend, attrs: { begin, size: sliceSize } });\n        begin[$axis] += s;\n        return sliceT;\n    });\n}\nexport const splitVConfig = {\n    kernelName: SplitV,\n    backendName: 'webgl',\n    kernelFunc: splitV\n};\n//# sourceMappingURL=SplitV.js.map"]},"metadata":{},"sourceType":"module"}