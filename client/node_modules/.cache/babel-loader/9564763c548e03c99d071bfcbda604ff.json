{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mirrorPad } from '../../ops/mirror_pad';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.mirrorPad = function (paddings, mode) {\n  this.throwIfDisposed();\n  return mirrorPad(this, paddings, mode);\n};","map":{"version":3,"sources":["../../../src/public/chained_ops/mirror_pad.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,SAAR,QAAwB,sBAAxB;AACA,SAAQ,oBAAR,QAA2C,cAA3C;;AAUA,oBAAoB,GAAG,SAAvB,CAAiC,SAAjC,GAA6C,UAChC,QADgC,EAEzC,IAFyC,EAEd;AAC7B,OAAK,eAAL;AACA,SAAO,SAAS,CAAC,IAAD,EAAO,QAAP,EAAiB,IAAjB,CAAhB;AACD,CALD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { mirrorPad } from '../../ops/mirror_pad';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.mirrorPad = function (paddings, mode) {\n    this.throwIfDisposed();\n    return mirrorPad(this, paddings, mode);\n};\n//# sourceMappingURL=mirror_pad.js.map"]},"metadata":{},"sourceType":"module"}