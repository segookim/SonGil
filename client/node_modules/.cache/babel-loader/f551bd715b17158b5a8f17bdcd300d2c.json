{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { Dataset } from '../dataset';\n/**\n * Represents a potentially large collection of text lines.\n *\n * The results are not batched.\n */\n\nexport class TextLineDataset extends Dataset {\n  /**\n   * Create a `TextLineDataset`.\n   *\n   * @param input A `DataSource` providing a chunked, UTF8-encoded byte stream.\n   */\n  constructor(input) {\n    super();\n    this.input = input;\n  }\n\n  async iterator() {\n    const inputIterator = await this.input.iterator();\n    const utf8Iterator = inputIterator.decodeUTF8();\n    const lineIterator = utf8Iterator.split('\\n').map(line => {\n      // Windows/DOS format text file has extra line breaker at the end of line.\n      if (line.endsWith('\\r')) {\n        line = line.slice(0, -1);\n      }\n\n      return line;\n    });\n    return lineIterator;\n  }\n\n}","map":{"version":3,"sources":["../../src/datasets/text_line_dataset.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBG;AAEH,SAAQ,OAAR,QAAsB,YAAtB;AAIA;;;;AAIG;;AACH,OAAM,MAAO,eAAP,SAA+B,OAA/B,CAA8C;AAClD;;;;AAIG;AACH,EAAA,WAAA,CAA+B,KAA/B,EAAgD;AAC9C;AAD6B,SAAA,KAAA,GAAA,KAAA;AAE9B;;AAEa,QAAR,QAAQ,GAAA;AACZ,UAAM,aAAa,GAAG,MAAM,KAAK,KAAL,CAAW,QAAX,EAA5B;AACA,UAAM,YAAY,GAAG,aAAa,CAAC,UAAd,EAArB;AACA,UAAM,YAAY,GAAG,YAAY,CAAC,KAAb,CAAmB,IAAnB,EAAyB,GAAzB,CAA6B,IAAI,IAAG;AACvD;AACA,UAAI,IAAI,CAAC,QAAL,CAAc,IAAd,CAAJ,EAAyB;AACvB,QAAA,IAAI,GAAG,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KANoB,CAArB;AAOA,WAAO,YAAP;AACD;;AArBiD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * =============================================================================\n */\nimport { Dataset } from '../dataset';\n/**\n * Represents a potentially large collection of text lines.\n *\n * The results are not batched.\n */\nexport class TextLineDataset extends Dataset {\n    /**\n     * Create a `TextLineDataset`.\n     *\n     * @param input A `DataSource` providing a chunked, UTF8-encoded byte stream.\n     */\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    async iterator() {\n        const inputIterator = await this.input.iterator();\n        const utf8Iterator = inputIterator.decodeUTF8();\n        const lineIterator = utf8Iterator.split('\\n').map(line => {\n            // Windows/DOS format text file has extra line breaker at the end of line.\n            if (line.endsWith('\\r')) {\n                line = line.slice(0, -1);\n            }\n            return line;\n        });\n        return lineIterator;\n    }\n}\n//# sourceMappingURL=text_line_dataset.js.map"]},"metadata":{},"sourceType":"module"}