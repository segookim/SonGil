{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var PadPackedProgram = function PadPackedProgram(xShape, paddings, constantValue) {\n  _classCallCheck(this, PadPackedProgram);\n\n  this.variableNames = ['x'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  this.outputShape = paddings.map(function (p, i) {\n    return p[0]\n    /* beforePad */\n    + xShape[i] + p[1];\n  }\n  /* afterPad */\n  );\n  var rank = xShape.length;\n  var dtype = getCoordsDataType(rank);\n  var start = paddings.map(function (p) {\n    return p[0];\n  }).join(',');\n  var end = paddings.map(function (p, i) {\n    return p[0] + xShape[i];\n  }).join(',');\n  var coords = getChannels('rc', rank);\n  var source = getChannels('source', rank);\n  var cLimit = \"\".concat(coords[rank - 1], \" < \").concat(this.outputShape[rank - 1]);\n  var innerDims = rank === 1 ? 'source' : \"vec2(\".concat(source.slice(-2).join(), \")\");\n  var componentSetup = [\"\".concat(dtype, \" rc = outputLoc;\"), \"\".concat(coords[rank - 1], \" += 1;\\n       if(\").concat(cLimit, \") {\\n      \"), rank === 1 ? '' : \"}\\n       rc = outputLoc;\\n       \".concat(coords[rank - 2], \" += 1;\\n       if(\").concat(coords[rank - 2], \" < \").concat(this.outputShape[rank - 2], \") {\"), rank === 1 ? '' : \"  \".concat(coords[rank - 1], \" += 1;\\n         if(\").concat(cLimit, \") {\")];\n  var paddingArea = rank === 1 ? 'rc < start || rc >= end' : 'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n  var mainLoop = '';\n\n  for (var i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n    mainLoop += \"\\n        \".concat(componentSetup[i], \"\\n        if (\").concat(paddingArea, \") {\\n          result[\").concat(i, \"] = float(\").concat(constantValue, \");\\n        } else {\\n          \").concat(dtype, \" source = rc - start;\\n          result[\").concat(i, \"] = getChannel(getX(\").concat(source.join(), \"), \").concat(innerDims, \");\\n        }\\n      \");\n  }\n\n  mainLoop += rank === 1 ? \"} \" : \"}}\";\n  this.userCode = \"\\n      const \".concat(dtype, \" start = \").concat(dtype, \"(\").concat(start, \");\\n      const \").concat(dtype, \" end = \").concat(dtype, \"(\").concat(end, \");\\n\\n      void main() {\\n        \").concat(dtype, \" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \").concat(mainLoop, \"\\n        setOutput(result);\\n      }\\n    \");\n};","map":{"version":3,"sources":["../src/pad_packed_gpu.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,WAAR,QAA0B,gBAA1B;AACA,SAAQ,iBAAR,QAAgC,mBAAhC;AAEA,WAAa,gBAAb,GAOE,0BACI,MADJ,EACsB,QADtB,EAEI,aAFJ,EAEyB;AAAA;;AARzB,OAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AACA,OAAA,YAAA,GAAe,IAAf;AACA,OAAA,YAAA,GAAe,IAAf;AAOE,OAAK,WAAL,GAAmB,QAAQ,CAAC,GAAT,CACf,UAAC,CAAD,EAAI,CAAJ;AAAA,WAAU,CAAC,CAAC,CAAD;AAAI;AAAL,MAAuB,MAAM,CAAC,CAAD,CAA7B,GAAmC,CAAC,CAAC,CAAD,CAA9C;AAAA;AAAkD;AADnC,GAAnB;AAEA,MAAM,IAAI,GAAG,MAAM,CAAC,MAApB;AACA,MAAM,KAAK,GAAG,iBAAiB,CAAC,IAAD,CAA/B;AAEA,MAAM,KAAK,GAAG,QAAQ,CAAC,GAAT,CAAa,UAAA,CAAC;AAAA,WAAI,CAAC,CAAC,CAAD,CAAL;AAAA,GAAd,EAAwB,IAAxB,CAA6B,GAA7B,CAAd;AACA,MAAM,GAAG,GAAG,QAAQ,CAAC,GAAT,CAAa,UAAC,CAAD,EAAI,CAAJ;AAAA,WAAU,CAAC,CAAC,CAAD,CAAD,GAAO,MAAM,CAAC,CAAD,CAAvB;AAAA,GAAb,EAAyC,IAAzC,CAA8C,GAA9C,CAAZ;AACA,MAAM,MAAM,GAAG,WAAW,CAAC,IAAD,EAAO,IAAP,CAA1B;AACA,MAAM,MAAM,GAAG,WAAW,CAAC,QAAD,EAAW,IAAX,CAA1B;AACA,MAAM,MAAM,aAAM,MAAM,CAAC,IAAI,GAAG,CAAR,CAAZ,gBAA4B,KAAK,WAAL,CAAiB,IAAI,GAAG,CAAxB,CAA5B,CAAZ;AACA,MAAM,SAAS,GACX,IAAI,KAAK,CAAT,GAAa,QAAb,kBAAgC,MAAM,CAAC,KAAP,CAAa,CAAC,CAAd,EAAiB,IAAjB,EAAhC,MADJ;AAGA,MAAM,cAAc,GAAG,WAClB,KADkB,iCACU,MAAM,CAAC,IAAI,GAAG,CAAR,CADhB,+BAEf,MAFe,kBAIrB,IAAI,KAAK,CAAT,GAAa,EAAb,+CAEG,MAAM,CAAC,IAAI,GAAG,CAAR,CAFT,+BAGM,MAAM,CAAC,IAAI,GAAG,CAAR,CAHZ,gBAG4B,KAAK,WAAL,CAAiB,IAAI,GAAG,CAAxB,CAH5B,QAJqB,EAQrB,IAAI,KAAK,CAAT,GAAa,EAAb,eAAuB,MAAM,CAAC,IAAI,GAAG,CAAR,CAA7B,iCACQ,MADR,QARqB,CAAvB;AAYA,MAAM,WAAW,GAAG,IAAI,KAAK,CAAT,GAChB,yBADgB,GAEhB,4DAFJ;AAGA,MAAI,QAAQ,GAAG,EAAf;;AACA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,IAAI,KAAK,CAAT,GAAa,CAAb,GAAiB,CAArC,EAAwC,CAAC,GAAG,CAA5C,EAA+C,CAAC,EAAhD,EAAoD;AAClD,IAAA,QAAQ,wBACJ,cAAc,CAAC,CAAD,CADV,2BAEA,WAFA,mCAGK,CAHL,uBAGmB,aAHnB,6CAKF,KALE,qDAMK,CANL,iCAM6B,MAAM,CAAC,IAAP,EAN7B,gBAMgD,SANhD,0BAAR;AASD;;AACD,EAAA,QAAQ,IAAK,IAAI,KAAK,CAAT,cAAb;AAEA,OAAK,QAAL,2BACU,KADV,sBAC2B,KAD3B,cACoC,KADpC,6BAEU,KAFV,oBAEyB,KAFzB,cAEkC,GAFlC,gDAKM,KALN,uFAOM,QAPN;AAWD,CA/DH","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class PadPackedProgram {\n    constructor(xShape, paddings, constantValue) {\n        this.variableNames = ['x'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = paddings.map((p, i) => p[0] /* beforePad */ + xShape[i] + p[1] /* afterPad */);\n        const rank = xShape.length;\n        const dtype = getCoordsDataType(rank);\n        const start = paddings.map(p => p[0]).join(',');\n        const end = paddings.map((p, i) => p[0] + xShape[i]).join(',');\n        const coords = getChannels('rc', rank);\n        const source = getChannels('source', rank);\n        const cLimit = `${coords[rank - 1]} < ${this.outputShape[rank - 1]}`;\n        const innerDims = rank === 1 ? 'source' : `vec2(${source.slice(-2).join()})`;\n        const componentSetup = [\n            `${dtype} rc = outputLoc;`, `${coords[rank - 1]} += 1;\n       if(${cLimit}) {\n      `,\n            rank === 1 ? '' : `}\n       rc = outputLoc;\n       ${coords[rank - 2]} += 1;\n       if(${coords[rank - 2]} < ${this.outputShape[rank - 2]}) {`,\n            rank === 1 ? '' : `  ${coords[rank - 1]} += 1;\n         if(${cLimit}) {`\n        ];\n        const paddingArea = rank === 1 ?\n            'rc < start || rc >= end' :\n            'any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))';\n        let mainLoop = '';\n        for (let i = 0, j = rank === 1 ? 2 : 4; i < j; i++) {\n            mainLoop += `\n        ${componentSetup[i]}\n        if (${paddingArea}) {\n          result[${i}] = float(${constantValue});\n        } else {\n          ${dtype} source = rc - start;\n          result[${i}] = getChannel(getX(${source.join()}), ${innerDims});\n        }\n      `;\n        }\n        mainLoop += (rank === 1 ? `} ` : `}}`);\n        this.userCode = `\n      const ${dtype} start = ${dtype}(${start});\n      const ${dtype} end = ${dtype}(${end});\n\n      void main() {\n        ${dtype} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${mainLoop}\n        setOutput(result);\n      }\n    `;\n    }\n}\n//# sourceMappingURL=pad_packed_gpu.js.map"]},"metadata":{},"sourceType":"module"}