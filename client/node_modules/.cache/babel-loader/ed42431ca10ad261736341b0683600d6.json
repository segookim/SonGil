{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _get from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get\";\nimport _getPrototypeOf from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n *  Advanced activation layers.\n */\nimport { clipByValue, elu, leakyRelu, prelu, relu, serialization } from '@tensorflow/tfjs-core';\nimport { Softmax as softmaxActivation } from '../activations';\nimport { cast } from '../backend/tfjs_backend';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nexport var ReLU = /*#__PURE__*/function (_Layer) {\n  _inherits(ReLU, _Layer);\n\n  var _super = _createSuper(ReLU);\n\n  function ReLU(args) {\n    var _this;\n\n    _classCallCheck(this, ReLU);\n\n    _this = _super.call(this, args == null ? {} : args);\n    _this.supportsMasking = true;\n\n    if (args != null) {\n      _this.maxValue = args.maxValue;\n    }\n\n    return _this;\n  }\n\n  _createClass(ReLU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      inputs = getExactlyOneTensor(inputs);\n      var output = relu(inputs);\n\n      if (this.maxValue != null) {\n        output = clipByValue(output, 0, this.maxValue);\n      }\n\n      return output;\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        maxValue: this.maxValue\n      };\n\n      var baseConfig = _get(_getPrototypeOf(ReLU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return ReLU;\n}(Layer);\n/** @nocollapse */\n\nReLU.className = 'ReLU';\nserialization.registerClass(ReLU);\nexport var LeakyReLU = /*#__PURE__*/function (_Layer2) {\n  _inherits(LeakyReLU, _Layer2);\n\n  var _super2 = _createSuper(LeakyReLU);\n\n  function LeakyReLU(args) {\n    var _this2;\n\n    _classCallCheck(this, LeakyReLU);\n\n    _this2 = _super2.call(this, args == null ? {} : args);\n    _this2.DEFAULT_ALPHA = 0.3;\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this2.alpha = args.alpha == null ? _this2.DEFAULT_ALPHA : args.alpha;\n    return _this2;\n  }\n\n  _createClass(LeakyReLU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var x = getExactlyOneTensor(inputs);\n      return leakyRelu(x, this.alpha);\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        alpha: this.alpha\n      };\n\n      var baseConfig = _get(_getPrototypeOf(LeakyReLU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return LeakyReLU;\n}(Layer);\n/** @nocollapse */\n\nLeakyReLU.className = 'LeakyReLU';\nserialization.registerClass(LeakyReLU);\nexport var PReLU = /*#__PURE__*/function (_Layer3) {\n  _inherits(PReLU, _Layer3);\n\n  var _super3 = _createSuper(PReLU);\n\n  function PReLU(args) {\n    var _this3;\n\n    _classCallCheck(this, PReLU);\n\n    _this3 = _super3.call(this, args == null ? {} : args);\n    _this3.DEFAULT_ALPHA_INITIALIZER = 'zeros';\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this3.supportsMasking = true;\n    _this3.alphaInitializer = getInitializer(args.alphaInitializer || _this3.DEFAULT_ALPHA_INITIALIZER);\n    _this3.alphaRegularizer = getRegularizer(args.alphaRegularizer);\n    _this3.alphaConstraint = getConstraint(args.alphaConstraint);\n\n    if (args.sharedAxes == null) {\n      _this3.sharedAxes = null;\n    } else if (Array.isArray(args.sharedAxes)) {\n      _this3.sharedAxes = args.sharedAxes;\n    } else if (typeof args.sharedAxes === 'number') {\n      _this3.sharedAxes = [args.sharedAxes];\n    } else {\n      throw new ValueError(\"Expected sharedAxes to be a number or an array of numbers, \" + \"but got \".concat(args.sharedAxes));\n    }\n\n    return _this3;\n  }\n\n  _createClass(PReLU, [{\n    key: \"build\",\n    value: function build(inputShape) {\n      inputShape = getExactlyOneShape(inputShape);\n      var paramShape = inputShape.slice(1);\n\n      if (this.sharedAxes != null) {\n        var _iterator = _createForOfIteratorHelper(this.sharedAxes),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var i = _step.value;\n            paramShape[i - 1] = 1;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      this.alpha = this.addWeight('alpha', paramShape, 'float32', this.alphaInitializer, this.alphaRegularizer, true, this.alphaConstraint); // Set input spec.\n\n      var axes = {};\n\n      if (this.sharedAxes != null) {\n        for (var _i = 1; _i < inputShape.length; ++_i) {\n          axes[_i] = inputShape[_i];\n        }\n      }\n\n      this.inputSpec = [new InputSpec({\n        ndim: inputShape.length,\n        axes: axes\n      })];\n      this.built = true;\n    }\n  }, {\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      inputs = getExactlyOneTensor(inputs);\n      return prelu(inputs, this.alpha.read());\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        alphaInitializer: serializeInitializer(this.alphaInitializer),\n        alphaRegularizer: serializeRegularizer(this.alphaRegularizer),\n        alphaConstraint: serializeConstraint(this.alphaConstraint),\n        sharedAxes: this.sharedAxes\n      };\n\n      var baseConfig = _get(_getPrototypeOf(PReLU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return PReLU;\n}(Layer);\n/** @nocollapse */\n\nPReLU.className = 'PReLU';\nserialization.registerClass(PReLU);\nexport var ELU = /*#__PURE__*/function (_Layer4) {\n  _inherits(ELU, _Layer4);\n\n  var _super4 = _createSuper(ELU);\n\n  function ELU(args) {\n    var _this4;\n\n    _classCallCheck(this, ELU);\n\n    _this4 = _super4.call(this, args == null ? {} : args);\n    _this4.DEFAULT_ALPHA = 1.0;\n\n    if (args == null) {\n      args = {};\n    }\n\n    if (args.alpha != null && args.alpha !== _this4.DEFAULT_ALPHA) {\n      throw new NotImplementedError(\"Non-default alpha value (\".concat(args.alpha, \") is not supported by the \") + \"ELU layer yet.\");\n    }\n\n    _this4.alpha = args.alpha == null ? _this4.DEFAULT_ALPHA : args.alpha;\n    return _this4;\n  }\n\n  _createClass(ELU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var x = getExactlyOneTensor(inputs);\n      return elu(x);\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        alpha: this.alpha\n      };\n\n      var baseConfig = _get(_getPrototypeOf(ELU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return ELU;\n}(Layer);\n/** @nocollapse */\n\nELU.className = 'ELU';\nserialization.registerClass(ELU);\nexport var ThresholdedReLU = /*#__PURE__*/function (_Layer5) {\n  _inherits(ThresholdedReLU, _Layer5);\n\n  var _super5 = _createSuper(ThresholdedReLU);\n\n  function ThresholdedReLU(args) {\n    var _this5;\n\n    _classCallCheck(this, ThresholdedReLU);\n\n    _this5 = _super5.call(this, args == null ? {} : args);\n    _this5.DEFAULT_THETA = 1.0;\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this5.theta = args.theta == null ? _this5.DEFAULT_THETA : args.theta;\n    return _this5;\n  }\n\n  _createClass(ThresholdedReLU, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var x = getExactlyOneTensor(inputs);\n      return x.mul(cast(x.greater(this.theta), 'float32'));\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        theta: this.theta\n      };\n\n      var baseConfig = _get(_getPrototypeOf(ThresholdedReLU.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return ThresholdedReLU;\n}(Layer);\n/** @nocollapse */\n\nThresholdedReLU.className = 'ThresholdedReLU';\nserialization.registerClass(ThresholdedReLU);\nexport var Softmax = /*#__PURE__*/function (_Layer6) {\n  _inherits(Softmax, _Layer6);\n\n  var _super6 = _createSuper(Softmax);\n\n  function Softmax(args) {\n    var _this6;\n\n    _classCallCheck(this, Softmax);\n\n    _this6 = _super6.call(this, args == null ? {} : args);\n    _this6.DEFAULT_AXIS = 1.0;\n\n    if (args == null) {\n      args = {};\n    }\n\n    _this6.softmax = new softmaxActivation().apply;\n    _this6.axis = args.axis == null ? _this6.DEFAULT_AXIS : args.axis;\n    return _this6;\n  }\n\n  _createClass(Softmax, [{\n    key: \"call\",\n    value: function call(inputs, kwargs) {\n      var x = getExactlyOneTensor(inputs);\n      return this.softmax(x, this.axis);\n    }\n  }, {\n    key: \"computeOutputShape\",\n    value: function computeOutputShape(inputShape) {\n      return inputShape;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      var config = {\n        axis: this.axis\n      };\n\n      var baseConfig = _get(_getPrototypeOf(Softmax.prototype), \"getConfig\", this).call(this);\n\n      Object.assign(config, baseConfig);\n      return config;\n    }\n  }]);\n\n  return Softmax;\n}(Layer);\n/** @nocollapse */\n\nSoftmax.className = 'Softmax';\nserialization.registerClass(Softmax);","map":{"version":3,"sources":["../../src/layers/advanced_activations.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n *  Advanced activation layers.\n */\nimport { clipByValue, elu, leakyRelu, prelu, relu, serialization } from '@tensorflow/tfjs-core';\nimport { Softmax as softmaxActivation } from '../activations';\nimport { cast } from '../backend/tfjs_backend';\nimport { getConstraint, serializeConstraint } from '../constraints';\nimport { InputSpec, Layer } from '../engine/topology';\nimport { NotImplementedError, ValueError } from '../errors';\nimport { getInitializer, serializeInitializer } from '../initializers';\nimport { getRegularizer, serializeRegularizer } from '../regularizers';\nimport { getExactlyOneShape, getExactlyOneTensor } from '../utils/types_utils';\nexport class ReLU extends Layer {\n    constructor(args) {\n        super(args == null ? {} : args);\n        this.supportsMasking = true;\n        if (args != null) {\n            this.maxValue = args.maxValue;\n        }\n    }\n    call(inputs, kwargs) {\n        inputs = getExactlyOneTensor(inputs);\n        let output = relu(inputs);\n        if (this.maxValue != null) {\n            output = clipByValue(output, 0, this.maxValue);\n        }\n        return output;\n    }\n    computeOutputShape(inputShape) {\n        return inputShape;\n    }\n    getConfig() {\n        const config = { maxValue: this.maxValue };\n        const baseConfig = super.getConfig();\n        Object.assign(config, baseConfig);\n        return config;\n    }\n}\n/** @nocollapse */\nReLU.className = 'ReLU';\nserialization.registerClass(ReLU);\nexport class LeakyReLU extends Layer {\n    constructor(args) {\n        super(args == null ? {} : args);\n        this.DEFAULT_ALPHA = 0.3;\n        if (args == null) {\n            args = {};\n        }\n        this.alpha = args.alpha == null ? this.DEFAULT_ALPHA : args.alpha;\n    }\n    call(inputs, kwargs) {\n        const x = getExactlyOneTensor(inputs);\n        return leakyRelu(x, this.alpha);\n    }\n    computeOutputShape(inputShape) {\n        return inputShape;\n    }\n    getConfig() {\n        const config = { alpha: this.alpha };\n        const baseConfig = super.getConfig();\n        Object.assign(config, baseConfig);\n        return config;\n    }\n}\n/** @nocollapse */\nLeakyReLU.className = 'LeakyReLU';\nserialization.registerClass(LeakyReLU);\nexport class PReLU extends Layer {\n    constructor(args) {\n        super(args == null ? {} : args);\n        this.DEFAULT_ALPHA_INITIALIZER = 'zeros';\n        if (args == null) {\n            args = {};\n        }\n        this.supportsMasking = true;\n        this.alphaInitializer =\n            getInitializer(args.alphaInitializer || this.DEFAULT_ALPHA_INITIALIZER);\n        this.alphaRegularizer = getRegularizer(args.alphaRegularizer);\n        this.alphaConstraint = getConstraint(args.alphaConstraint);\n        if (args.sharedAxes == null) {\n            this.sharedAxes = null;\n        }\n        else if (Array.isArray(args.sharedAxes)) {\n            this.sharedAxes = args.sharedAxes;\n        }\n        else if (typeof args.sharedAxes === 'number') {\n            this.sharedAxes = [args.sharedAxes];\n        }\n        else {\n            throw new ValueError(`Expected sharedAxes to be a number or an array of numbers, ` +\n                `but got ${args.sharedAxes}`);\n        }\n    }\n    build(inputShape) {\n        inputShape = getExactlyOneShape(inputShape);\n        const paramShape = inputShape.slice(1);\n        if (this.sharedAxes != null) {\n            for (const i of this.sharedAxes) {\n                paramShape[i - 1] = 1;\n            }\n        }\n        this.alpha = this.addWeight('alpha', paramShape, 'float32', this.alphaInitializer, this.alphaRegularizer, true, this.alphaConstraint);\n        // Set input spec.\n        const axes = {};\n        if (this.sharedAxes != null) {\n            for (let i = 1; i < inputShape.length; ++i) {\n                axes[i] = inputShape[i];\n            }\n        }\n        this.inputSpec = [new InputSpec({\n                ndim: inputShape.length,\n                axes,\n            })];\n        this.built = true;\n    }\n    call(inputs, kwargs) {\n        inputs = getExactlyOneTensor(inputs);\n        return prelu(inputs, this.alpha.read());\n    }\n    getConfig() {\n        const config = {\n            alphaInitializer: serializeInitializer(this.alphaInitializer),\n            alphaRegularizer: serializeRegularizer(this.alphaRegularizer),\n            alphaConstraint: serializeConstraint(this.alphaConstraint),\n            sharedAxes: this.sharedAxes\n        };\n        const baseConfig = super.getConfig();\n        Object.assign(config, baseConfig);\n        return config;\n    }\n}\n/** @nocollapse */\nPReLU.className = 'PReLU';\nserialization.registerClass(PReLU);\nexport class ELU extends Layer {\n    constructor(args) {\n        super(args == null ? {} : args);\n        this.DEFAULT_ALPHA = 1.0;\n        if (args == null) {\n            args = {};\n        }\n        if (args.alpha != null && args.alpha !== this.DEFAULT_ALPHA) {\n            throw new NotImplementedError(`Non-default alpha value (${args.alpha}) is not supported by the ` +\n                `ELU layer yet.`);\n        }\n        this.alpha = args.alpha == null ? this.DEFAULT_ALPHA : args.alpha;\n    }\n    call(inputs, kwargs) {\n        const x = getExactlyOneTensor(inputs);\n        return elu(x);\n    }\n    computeOutputShape(inputShape) {\n        return inputShape;\n    }\n    getConfig() {\n        const config = { alpha: this.alpha };\n        const baseConfig = super.getConfig();\n        Object.assign(config, baseConfig);\n        return config;\n    }\n}\n/** @nocollapse */\nELU.className = 'ELU';\nserialization.registerClass(ELU);\nexport class ThresholdedReLU extends Layer {\n    constructor(args) {\n        super(args == null ? {} : args);\n        this.DEFAULT_THETA = 1.0;\n        if (args == null) {\n            args = {};\n        }\n        this.theta = args.theta == null ? this.DEFAULT_THETA : args.theta;\n    }\n    call(inputs, kwargs) {\n        const x = getExactlyOneTensor(inputs);\n        return x.mul(cast(x.greater(this.theta), 'float32'));\n    }\n    computeOutputShape(inputShape) {\n        return inputShape;\n    }\n    getConfig() {\n        const config = { theta: this.theta };\n        const baseConfig = super.getConfig();\n        Object.assign(config, baseConfig);\n        return config;\n    }\n}\n/** @nocollapse */\nThresholdedReLU.className = 'ThresholdedReLU';\nserialization.registerClass(ThresholdedReLU);\nexport class Softmax extends Layer {\n    constructor(args) {\n        super(args == null ? {} : args);\n        this.DEFAULT_AXIS = 1.0;\n        if (args == null) {\n            args = {};\n        }\n        this.softmax = new softmaxActivation().apply;\n        this.axis = args.axis == null ? this.DEFAULT_AXIS : args.axis;\n    }\n    call(inputs, kwargs) {\n        const x = getExactlyOneTensor(inputs);\n        return this.softmax(x, this.axis);\n    }\n    computeOutputShape(inputShape) {\n        return inputShape;\n    }\n    getConfig() {\n        const config = { axis: this.axis };\n        const baseConfig = super.getConfig();\n        Object.assign(config, baseConfig);\n        return config;\n    }\n}\n/** @nocollapse */\nSoftmax.className = 'Softmax';\nserialization.registerClass(Softmax);\n//# sourceMappingURL=advanced_activations.js.map"]},"metadata":{},"sourceType":"module"}