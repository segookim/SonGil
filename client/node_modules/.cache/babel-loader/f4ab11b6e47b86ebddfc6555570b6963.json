{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n\n/**\n * Equivalent of Python's AttributeError.\n */\nexport class AttributeError extends Error {\n  constructor(message) {\n    super(message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(this, AttributeError.prototype);\n  }\n\n}\n/**\n * Equivalent of Python's RuntimeError.\n */\n\nexport class RuntimeError extends Error {\n  constructor(message) {\n    super(message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(this, RuntimeError.prototype);\n  }\n\n}\n/**\n * Equivalent of Python's ValueError.\n */\n\nexport class ValueError extends Error {\n  constructor(message) {\n    super(message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(this, ValueError.prototype);\n  }\n\n}\n/**\n * Equivalent of Python's NotImplementedError.\n */\n\nexport class NotImplementedError extends Error {\n  constructor(message) {\n    super(message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(this, NotImplementedError.prototype);\n  }\n\n}\n/**\n * Equivalent of Python's AssertionError.\n */\n\nexport class AssertionError extends Error {\n  constructor(message) {\n    super(message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(this, AssertionError.prototype);\n  }\n\n}\n/**\n * Equivalent of Python's IndexError.\n */\n\nexport class IndexError extends Error {\n  constructor(message) {\n    super(message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(this, IndexError.prototype);\n  }\n\n}","map":{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":"AAAA;;;;;;;;AAQG;;AAEH;;;;;;;AAOG;AACH;;AAEA;;AAEG;AACH,OAAM,MAAO,cAAP,SAA8B,KAA9B,CAAmC;AACvC,EAAA,WAAA,CAAY,OAAZ,EAA4B;AAC1B,UAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,cAAc,CAAC,SAA3C;AACD;;AALsC;AAQzC;;AAEG;;AACH,OAAM,MAAO,YAAP,SAA4B,KAA5B,CAAiC;AACrC,EAAA,WAAA,CAAY,OAAZ,EAA4B;AAC1B,UAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,YAAY,CAAC,SAAzC;AACD;;AALoC;AAQvC;;AAEG;;AACH,OAAM,MAAO,UAAP,SAA0B,KAA1B,CAA+B;AACnC,EAAA,WAAA,CAAY,OAAZ,EAA4B;AAC1B,UAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,UAAU,CAAC,SAAvC;AACD;;AALkC;AAQrC;;AAEG;;AACH,OAAM,MAAO,mBAAP,SAAmC,KAAnC,CAAwC;AAC5C,EAAA,WAAA,CAAY,OAAZ,EAA4B;AAC1B,UAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,mBAAmB,CAAC,SAAhD;AACD;;AAL2C;AAQ9C;;AAEG;;AACH,OAAM,MAAO,cAAP,SAA8B,KAA9B,CAAmC;AACvC,EAAA,WAAA,CAAY,OAAZ,EAA4B;AAC1B,UAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,cAAc,CAAC,SAA3C;AACD;;AALsC;AAQzC;;AAEG;;AACH,OAAM,MAAO,UAAP,SAA0B,KAA1B,CAA+B;AACnC,EAAA,WAAA,CAAY,OAAZ,EAA4B;AAC1B,UAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,UAAU,CAAC,SAAvC;AACD;;AALkC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n/**\n * Equivalent of Python's AttributeError.\n */\nexport class AttributeError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, AttributeError.prototype);\n    }\n}\n/**\n * Equivalent of Python's RuntimeError.\n */\nexport class RuntimeError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, RuntimeError.prototype);\n    }\n}\n/**\n * Equivalent of Python's ValueError.\n */\nexport class ValueError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, ValueError.prototype);\n    }\n}\n/**\n * Equivalent of Python's NotImplementedError.\n */\nexport class NotImplementedError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, NotImplementedError.prototype);\n    }\n}\n/**\n * Equivalent of Python's AssertionError.\n */\nexport class AssertionError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, AssertionError.prototype);\n    }\n}\n/**\n * Equivalent of Python's IndexError.\n */\nexport class IndexError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, IndexError.prototype);\n    }\n}\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"module"}