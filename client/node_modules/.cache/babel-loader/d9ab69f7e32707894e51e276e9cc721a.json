{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getVecChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var TransposePackedProgram = function TransposePackedProgram(aShape, newDim) {\n  _classCallCheck(this, TransposePackedProgram);\n\n  this.variableNames = ['A'];\n  this.packedInputs = true;\n  this.packedOutput = true;\n  var outputShape = new Array(aShape.length);\n\n  for (var i = 0; i < outputShape.length; i++) {\n    outputShape[i] = aShape[newDim[i]];\n  }\n\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n\n  if (this.rank > 6) {\n    throw Error(\"Packed transpose for rank \".concat(this.rank, \" is not yet supported.\"));\n  }\n\n  var dtype = getCoordsDataType(this.rank);\n  var outputOrder = getVecChannels('rc', this.rank);\n  var switchedOrder = new Array(this.rank);\n\n  for (var _i = 0; _i < newDim.length; _i++) {\n    switchedOrder[newDim[_i]] = outputOrder[_i];\n  }\n\n  var innerDims = \"vec2(\".concat(switchedOrder.slice(-2).join(), \")\");\n  var nextColumn = \"++\".concat(outputOrder[this.rank - 1], \" < \").concat(outputShape[this.rank - 1]);\n  var getc = \"getChannel(getA(\".concat(switchedOrder.join(), \"), \").concat(innerDims, \")\");\n  this.userCode = \"\\n    void main() {\\n      \".concat(dtype, \" rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = \").concat(getc, \";\\n      if(\").concat(nextColumn, \") {\\n        result[1] = \").concat(getc, \";\\n      }\\n      --\").concat(outputOrder[this.rank - 1], \";\\n      if(++\").concat(outputOrder[this.rank - 2], \" < \").concat(outputShape[this.rank - 2], \") {\\n        result[2] = \").concat(getc, \";\\n        if(\").concat(nextColumn, \") {\\n          result[3] = \").concat(getc, \";\\n        }\\n      }\\n      setOutput(result);\\n    }\\n    \");\n};","map":{"version":3,"sources":["../src/transpose_packed_gpu.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,cAAR,QAA6B,gBAA7B;AACA,SAAQ,iBAAR,QAAgC,mBAAhC;AAEA,WAAa,sBAAb,GAQE,gCAAY,MAAZ,EAA8B,MAA9B,EAA8C;AAAA;;AAP9C,OAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AAIA,OAAA,YAAA,GAAe,IAAf;AACA,OAAA,YAAA,GAAe,IAAf;AAGE,MAAM,WAAW,GAAa,IAAI,KAAJ,CAAU,MAAM,CAAC,MAAjB,CAA9B;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAAW,CAAC,MAAhC,EAAwC,CAAC,EAAzC,EAA6C;AAC3C,IAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,MAAM,CAAC,MAAM,CAAC,CAAD,CAAP,CAAvB;AACD;;AACD,OAAK,WAAL,GAAmB,WAAnB;AACA,OAAK,IAAL,GAAY,WAAW,CAAC,MAAxB;;AACA,MAAI,KAAK,IAAL,GAAY,CAAhB,EAAmB;AACjB,UAAM,KAAK,qCACsB,KAAK,IAD3B,4BAAX;AAED;;AACD,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,IAAN,CAA/B;AAEA,MAAM,WAAW,GAAG,cAAc,CAAC,IAAD,EAAO,KAAK,IAAZ,CAAlC;AACA,MAAM,aAAa,GAAG,IAAI,KAAJ,CAAU,KAAK,IAAf,CAAtB;;AACA,OAAK,IAAI,EAAC,GAAG,CAAb,EAAgB,EAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,EAAC,EAApC,EAAwC;AACtC,IAAA,aAAa,CAAC,MAAM,CAAC,EAAD,CAAP,CAAb,GAA2B,WAAW,CAAC,EAAD,CAAtC;AACD;;AACD,MAAM,SAAS,kBAAW,aAAa,CAAC,KAAd,CAAoB,CAAC,CAArB,EAAwB,IAAxB,EAAX,MAAf;AACA,MAAM,UAAU,eACP,WAAW,CAAC,KAAK,IAAL,GAAY,CAAb,CADJ,gBACyB,WAAW,CAAC,KAAK,IAAL,GAAY,CAAb,CADpC,CAAhB;AAEA,MAAM,IAAI,6BAAsB,aAAa,CAAC,IAAd,EAAtB,gBAAgD,SAAhD,MAAV;AAEA,OAAK,QAAL,wCAEI,KAFJ,wFAIgB,IAJhB,yBAKO,UALP,sCAMkB,IANlB,iCAQM,WAAW,CAAC,KAAK,IAAL,GAAY,CAAb,CARjB,2BASS,WAAW,CAAC,KAAK,IAAL,GAAY,CAAb,CATpB,gBASyC,WAAW,CAAC,KAAK,IAAL,GAAY,CAAb,CATpD,sCAUkB,IAVlB,2BAWS,UAXT,wCAYoB,IAZpB;AAkBD,CAjDH","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getVecChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class TransposePackedProgram {\n    constructor(aShape, newDim) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        const outputShape = new Array(aShape.length);\n        for (let i = 0; i < outputShape.length; i++) {\n            outputShape[i] = aShape[newDim[i]];\n        }\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        if (this.rank > 6) {\n            throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);\n        }\n        const dtype = getCoordsDataType(this.rank);\n        const outputOrder = getVecChannels('rc', this.rank);\n        const switchedOrder = new Array(this.rank);\n        for (let i = 0; i < newDim.length; i++) {\n            switchedOrder[newDim[i]] = outputOrder[i];\n        }\n        const innerDims = `vec2(${switchedOrder.slice(-2).join()})`;\n        const nextColumn = `++${outputOrder[this.rank - 1]} < ${outputShape[this.rank - 1]}`;\n        const getc = `getChannel(getA(${switchedOrder.join()}), ${innerDims})`;\n        this.userCode = `\n    void main() {\n      ${dtype} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${getc};\n      if(${nextColumn}) {\n        result[1] = ${getc};\n      }\n      --${outputOrder[this.rank - 1]};\n      if(++${outputOrder[this.rank - 2]} < ${outputShape[this.rank - 2]}) {\n        result[2] = ${getc};\n        if(${nextColumn}) {\n          result[3] = ${getc};\n        }\n      }\n      setOutput(result);\n    }\n    `;\n    }\n}\n//# sourceMappingURL=transpose_packed_gpu.js.map"]},"metadata":{},"sourceType":"module"}