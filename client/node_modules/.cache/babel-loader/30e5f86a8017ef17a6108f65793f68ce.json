{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\nexport { abs } from './abs';\nexport { acos } from './acos';\nexport { acosh } from './acosh';\nexport { add } from './add';\nexport { addN } from './add_n';\nexport { all } from './all';\nexport { any } from './any';\nexport { argMax } from './arg_max';\nexport { argMin } from './arg_min';\nexport { asin } from './asin';\nexport { asinh } from './asinh';\nexport { atan } from './atan';\nexport { atan2 } from './atan2';\nexport { atanh } from './atanh';\nexport { avgPool } from './avg_pool';\nexport { avgPool3d } from './avg_pool_3d';\nexport { basicLSTMCell } from './basic_lstm_cell';\nexport { batchToSpaceND } from './batch_to_space_nd';\nexport { batchNorm } from './batchnorm';\nexport { batchNorm2d } from './batchnorm2d';\nexport { batchNorm3d } from './batchnorm3d';\nexport { batchNorm4d } from './batchnorm4d';\nexport { bincount } from './bincount';\nexport { broadcastTo } from './broadcast_to';\nexport { buffer } from './buffer';\nexport { cast } from './cast';\nexport { ceil } from './ceil';\nexport { clipByValue } from './clip_by_value';\nexport { clone } from './clone';\nexport { complex } from './complex';\nexport { concat } from './concat';\nexport { concat1d } from './concat_1d';\nexport { concat2d } from './concat_2d';\nexport { concat3d } from './concat_3d';\nexport { concat4d } from './concat_4d';\nexport { conv1d } from './conv1d';\nexport { conv2d } from './conv2d';\nexport { conv2dTranspose } from './conv2d_transpose';\nexport { conv3d } from './conv3d';\nexport { conv3dTranspose } from './conv3d_transpose';\nexport { cos } from './cos';\nexport { cosh } from './cosh';\nexport { cumsum } from './cumsum';\nexport { denseBincount } from './dense_bincount';\nexport { depthToSpace } from './depth_to_space';\nexport { depthwiseConv2d } from './depthwise_conv2d';\nexport { diag } from './diag';\nexport { dilation2d } from './dilation2d';\nexport { div } from './div';\nexport { divNoNan } from './div_no_nan';\nexport { dot } from './dot';\nexport { elu } from './elu';\nexport { equal } from './equal';\nexport { erf } from './erf';\nexport { exp } from './exp';\nexport { expandDims } from './expand_dims';\nexport { expm1 } from './expm1';\nexport { eye } from './eye';\nexport { fill } from './fill';\nexport { floor } from './floor';\nexport { floorDiv } from './floorDiv';\nexport { gather } from './gather';\nexport { greater } from './greater';\nexport { greaterEqual } from './greater_equal';\nexport { imag } from './imag';\nexport { isFinite } from './is_finite';\nexport { isInf } from './is_inf';\nexport { isNaN } from './is_nan';\nexport { leakyRelu } from './leaky_relu';\nexport { less } from './less';\nexport { lessEqual } from './less_equal';\nexport { linspace } from './linspace';\nexport { localResponseNormalization } from './local_response_normalization';\nexport { log } from './log';\nexport { log1p } from './log1p';\nexport { logSigmoid } from './log_sigmoid';\nexport { logSoftmax } from './log_softmax';\nexport { logSumExp } from './log_sum_exp';\nexport { logicalAnd } from './logical_and';\nexport { logicalNot } from './logical_not';\nexport { logicalOr } from './logical_or';\nexport { logicalXor } from './logical_xor';\nexport { matMul } from './mat_mul';\nexport { max } from './max';\nexport { maxPool } from './max_pool';\nexport { maxPool3d } from './max_pool_3d';\nexport { maxPoolWithArgmax } from './max_pool_with_argmax';\nexport { maximum } from './maximum';\nexport { mean } from './mean';\nexport { min } from './min';\nexport { minimum } from './minimum';\nexport { mirrorPad } from './mirror_pad';\nexport { mod } from './mod';\nexport { moments } from './moments';\nexport { mul } from './mul';\nexport { multiRNNCell } from './multi_rnn_cell';\nexport { multinomial } from './multinomial';\nexport { neg } from './neg';\nexport { notEqual } from './not_equal';\nexport { oneHot } from './one_hot';\nexport { ones } from './ones';\nexport { onesLike } from './ones_like';\nexport { outerProduct } from './outer_product';\nexport { pad } from './pad';\nexport { pad1d } from './pad1d';\nexport { pad2d } from './pad2d';\nexport { pad3d } from './pad3d';\nexport { pad4d } from './pad4d';\nexport { pool } from './pool';\nexport { pow } from './pow';\nexport { prelu } from './prelu';\nexport { print } from './print';\nexport { prod } from './prod';\nexport { rand } from './rand';\nexport { randomGamma } from './random_gamma';\nexport { randomNormal } from './random_normal';\nexport { randomUniform } from './random_uniform';\nexport { range } from './range';\nexport { real } from './real';\nexport { reciprocal } from './reciprocal';\nexport { relu } from './relu';\nexport { relu6 } from './relu6';\nexport { reshape } from './reshape';\nexport { reverse } from './reverse';\nexport { reverse1d } from './reverse_1d';\nexport { reverse2d } from './reverse_2d';\nexport { reverse3d } from './reverse_3d';\nexport { reverse4d } from './reverse_4d';\nexport { round } from './round';\nexport { rsqrt } from './rsqrt';\nexport { scalar } from './scalar';\nexport { selu } from './selu';\nexport { separableConv2d } from './separable_conv2d';\nexport { setdiff1dAsync } from './setdiff1d_async';\nexport { sigmoid } from './sigmoid';\nexport { sign } from './sign';\nexport { sin } from './sin';\nexport { sinh } from './sinh';\nexport { slice } from './slice';\nexport { slice1d } from './slice1d';\nexport { slice2d } from './slice2d';\nexport { slice3d } from './slice3d';\nexport { slice4d } from './slice4d';\nexport { softmax } from './softmax';\nexport { softplus } from './softplus';\nexport { spaceToBatchND } from './space_to_batch_nd';\nexport { fft } from './spectral/fft';\nexport { ifft } from './spectral/ifft';\nexport { irfft } from './spectral/irfft';\nexport { rfft } from './spectral/rfft';\nexport { split } from './split';\nexport { sqrt } from './sqrt';\nexport { square } from './square';\nexport { squaredDifference } from './squared_difference';\nexport { squeeze } from './squeeze';\nexport { stack } from './stack';\nexport { step } from './step';\nexport { stridedSlice } from './strided_slice';\nexport { sub } from './sub';\nexport { sum } from './sum';\nexport { tan } from './tan';\nexport { tanh } from './tanh';\nexport { tensor } from './tensor';\nexport { tensor1d } from './tensor1d';\nexport { tensor2d } from './tensor2d';\nexport { tensor3d } from './tensor3d';\nexport { tensor4d } from './tensor4d';\nexport { tensor5d } from './tensor5d';\nexport { tensor6d } from './tensor6d';\nexport { tile } from './tile';\nexport { topk } from './topk';\nexport { truncatedNormal } from './truncated_normal';\nexport { unique } from './unique';\nexport { unsortedSegmentSum } from './unsorted_segment_sum';\nexport { unstack } from './unstack';\nexport { variable } from './variable';\nexport { where } from './where';\nexport { whereAsync } from './where_async';\nexport { zeros } from './zeros';\nexport { zerosLike } from './zeros_like';\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\nexport { op, OP_SCOPE_SUFFIX } from './operation';\nimport { rfft } from './spectral/rfft';\nimport { fft } from './spectral/fft';\nimport { ifft } from './spectral/ifft';\nimport { irfft } from './spectral/irfft';\nconst spectral = {\n  fft,\n  ifft,\n  rfft,\n  irfft\n};\nimport * as fused from './fused_ops';\nimport { hammingWindow } from './signal/hamming_window';\nimport { hannWindow } from './signal/hann_window';\nimport { frame } from './signal/frame';\nimport { stft } from './signal/stft';\nconst signal = {\n  hammingWindow,\n  hannWindow,\n  frame,\n  stft\n}; // Image Ops namespace\n\nimport { cropAndResize } from './image/crop_and_resize';\nimport { flipLeftRight } from './image/flip_left_right';\nimport { rotateWithOffset } from './image/rotate_with_offset';\nimport { nonMaxSuppression } from './image/non_max_suppression';\nimport { nonMaxSuppressionAsync } from './image/non_max_suppression_async';\nimport { nonMaxSuppressionWithScore } from './image/non_max_suppression_with_score';\nimport { nonMaxSuppressionWithScoreAsync } from './image/non_max_suppression_with_score_async';\nimport { nonMaxSuppressionPadded } from './image/non_max_suppression_padded';\nimport { nonMaxSuppressionPaddedAsync } from './image/non_max_suppression_padded_async';\nimport { resizeBilinear } from './image/resize_bilinear';\nimport { resizeNearestNeighbor } from './image/resize_nearest_neighbor';\nconst image = {\n  flipLeftRight,\n  resizeNearestNeighbor,\n  resizeBilinear,\n  rotateWithOffset,\n  cropAndResize,\n  nonMaxSuppression,\n  nonMaxSuppressionAsync,\n  nonMaxSuppressionWithScore,\n  nonMaxSuppressionWithScoreAsync,\n  nonMaxSuppressionPadded,\n  nonMaxSuppressionPaddedAsync\n}; // linalg namespace\n\nimport { bandPart } from './linalg/band_part';\nimport { gramSchmidt } from './linalg/gram_schmidt';\nimport { qr } from './linalg/qr';\nconst linalg = {\n  bandPart,\n  gramSchmidt,\n  qr\n}; // losses namespace;\n\nimport { absoluteDifference } from './losses/absolute_difference';\nimport { computeWeightedLoss } from './losses/compute_weighted_loss';\nimport { cosineDistance } from './losses/cosine_distance';\nimport { hingeLoss } from './losses/hinge_loss';\nimport { huberLoss } from './losses/huber_loss';\nimport { logLoss } from './losses/log_loss';\nimport { meanSquaredError } from './losses/mean_squared_error';\nimport { sigmoidCrossEntropy } from './losses/sigmoid_cross_entropy';\nimport { softmaxCrossEntropy } from './losses/softmax_cross_entropy';\nconst losses = {\n  absoluteDifference,\n  computeWeightedLoss,\n  cosineDistance,\n  hingeLoss,\n  huberLoss,\n  logLoss,\n  meanSquaredError,\n  sigmoidCrossEntropy,\n  softmaxCrossEntropy\n}; // Second level exports.\n\nexport { image, linalg, losses, spectral, fused, signal };","map":{"version":3,"sources":["../../src/ops/ops.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// Modularized ops.\nexport { abs } from './abs';\nexport { acos } from './acos';\nexport { acosh } from './acosh';\nexport { add } from './add';\nexport { addN } from './add_n';\nexport { all } from './all';\nexport { any } from './any';\nexport { argMax } from './arg_max';\nexport { argMin } from './arg_min';\nexport { asin } from './asin';\nexport { asinh } from './asinh';\nexport { atan } from './atan';\nexport { atan2 } from './atan2';\nexport { atanh } from './atanh';\nexport { avgPool } from './avg_pool';\nexport { avgPool3d } from './avg_pool_3d';\nexport { basicLSTMCell } from './basic_lstm_cell';\nexport { batchToSpaceND } from './batch_to_space_nd';\nexport { batchNorm } from './batchnorm';\nexport { batchNorm2d } from './batchnorm2d';\nexport { batchNorm3d } from './batchnorm3d';\nexport { batchNorm4d } from './batchnorm4d';\nexport { bincount } from './bincount';\nexport { broadcastTo } from './broadcast_to';\nexport { buffer } from './buffer';\nexport { cast } from './cast';\nexport { ceil } from './ceil';\nexport { clipByValue } from './clip_by_value';\nexport { clone } from './clone';\nexport { complex } from './complex';\nexport { concat } from './concat';\nexport { concat1d } from './concat_1d';\nexport { concat2d } from './concat_2d';\nexport { concat3d } from './concat_3d';\nexport { concat4d } from './concat_4d';\nexport { conv1d } from './conv1d';\nexport { conv2d } from './conv2d';\nexport { conv2dTranspose } from './conv2d_transpose';\nexport { conv3d } from './conv3d';\nexport { conv3dTranspose } from './conv3d_transpose';\nexport { cos } from './cos';\nexport { cosh } from './cosh';\nexport { cumsum } from './cumsum';\nexport { denseBincount } from './dense_bincount';\nexport { depthToSpace } from './depth_to_space';\nexport { depthwiseConv2d } from './depthwise_conv2d';\nexport { diag } from './diag';\nexport { dilation2d } from './dilation2d';\nexport { div } from './div';\nexport { divNoNan } from './div_no_nan';\nexport { dot } from './dot';\nexport { elu } from './elu';\nexport { equal } from './equal';\nexport { erf } from './erf';\nexport { exp } from './exp';\nexport { expandDims } from './expand_dims';\nexport { expm1 } from './expm1';\nexport { eye } from './eye';\nexport { fill } from './fill';\nexport { floor } from './floor';\nexport { floorDiv } from './floorDiv';\nexport { gather } from './gather';\nexport { greater } from './greater';\nexport { greaterEqual } from './greater_equal';\nexport { imag } from './imag';\nexport { isFinite } from './is_finite';\nexport { isInf } from './is_inf';\nexport { isNaN } from './is_nan';\nexport { leakyRelu } from './leaky_relu';\nexport { less } from './less';\nexport { lessEqual } from './less_equal';\nexport { linspace } from './linspace';\nexport { localResponseNormalization } from './local_response_normalization';\nexport { log } from './log';\nexport { log1p } from './log1p';\nexport { logSigmoid } from './log_sigmoid';\nexport { logSoftmax } from './log_softmax';\nexport { logSumExp } from './log_sum_exp';\nexport { logicalAnd } from './logical_and';\nexport { logicalNot } from './logical_not';\nexport { logicalOr } from './logical_or';\nexport { logicalXor } from './logical_xor';\nexport { matMul } from './mat_mul';\nexport { max } from './max';\nexport { maxPool } from './max_pool';\nexport { maxPool3d } from './max_pool_3d';\nexport { maxPoolWithArgmax } from './max_pool_with_argmax';\nexport { maximum } from './maximum';\nexport { mean } from './mean';\nexport { min } from './min';\nexport { minimum } from './minimum';\nexport { mirrorPad } from './mirror_pad';\nexport { mod } from './mod';\nexport { moments } from './moments';\nexport { mul } from './mul';\nexport { multiRNNCell } from './multi_rnn_cell';\nexport { multinomial } from './multinomial';\nexport { neg } from './neg';\nexport { notEqual } from './not_equal';\nexport { oneHot } from './one_hot';\nexport { ones } from './ones';\nexport { onesLike } from './ones_like';\nexport { outerProduct } from './outer_product';\nexport { pad } from './pad';\nexport { pad1d } from './pad1d';\nexport { pad2d } from './pad2d';\nexport { pad3d } from './pad3d';\nexport { pad4d } from './pad4d';\nexport { pool } from './pool';\nexport { pow } from './pow';\nexport { prelu } from './prelu';\nexport { print } from './print';\nexport { prod } from './prod';\nexport { rand } from './rand';\nexport { randomGamma } from './random_gamma';\nexport { randomNormal } from './random_normal';\nexport { randomUniform } from './random_uniform';\nexport { range } from './range';\nexport { real } from './real';\nexport { reciprocal } from './reciprocal';\nexport { relu } from './relu';\nexport { relu6 } from './relu6';\nexport { reshape } from './reshape';\nexport { reverse } from './reverse';\nexport { reverse1d } from './reverse_1d';\nexport { reverse2d } from './reverse_2d';\nexport { reverse3d } from './reverse_3d';\nexport { reverse4d } from './reverse_4d';\nexport { round } from './round';\nexport { rsqrt } from './rsqrt';\nexport { scalar } from './scalar';\nexport { selu } from './selu';\nexport { separableConv2d } from './separable_conv2d';\nexport { setdiff1dAsync } from './setdiff1d_async';\nexport { sigmoid } from './sigmoid';\nexport { sign } from './sign';\nexport { sin } from './sin';\nexport { sinh } from './sinh';\nexport { slice } from './slice';\nexport { slice1d } from './slice1d';\nexport { slice2d } from './slice2d';\nexport { slice3d } from './slice3d';\nexport { slice4d } from './slice4d';\nexport { softmax } from './softmax';\nexport { softplus } from './softplus';\nexport { spaceToBatchND } from './space_to_batch_nd';\nexport { fft } from './spectral/fft';\nexport { ifft } from './spectral/ifft';\nexport { irfft } from './spectral/irfft';\nexport { rfft } from './spectral/rfft';\nexport { split } from './split';\nexport { sqrt } from './sqrt';\nexport { square } from './square';\nexport { squaredDifference } from './squared_difference';\nexport { squeeze } from './squeeze';\nexport { stack } from './stack';\nexport { step } from './step';\nexport { stridedSlice } from './strided_slice';\nexport { sub } from './sub';\nexport { sum } from './sum';\nexport { tan } from './tan';\nexport { tanh } from './tanh';\nexport { tensor } from './tensor';\nexport { tensor1d } from './tensor1d';\nexport { tensor2d } from './tensor2d';\nexport { tensor3d } from './tensor3d';\nexport { tensor4d } from './tensor4d';\nexport { tensor5d } from './tensor5d';\nexport { tensor6d } from './tensor6d';\nexport { tile } from './tile';\nexport { topk } from './topk';\nexport { truncatedNormal } from './truncated_normal';\nexport { unique } from './unique';\nexport { unsortedSegmentSum } from './unsorted_segment_sum';\nexport { unstack } from './unstack';\nexport { variable } from './variable';\nexport { where } from './where';\nexport { whereAsync } from './where_async';\nexport { zeros } from './zeros';\nexport { zerosLike } from './zeros_like';\nexport * from './boolean_mask';\nexport * from './transpose';\nexport * from './norm';\nexport * from './moving_average';\nexport * from './scatter_nd';\nexport * from './sparse_to_dense';\nexport * from './gather_nd';\nexport * from './dropout';\nexport * from './signal_ops_util';\nexport * from './in_top_k';\nexport { op, OP_SCOPE_SUFFIX } from './operation';\nimport { rfft } from './spectral/rfft';\nimport { fft } from './spectral/fft';\nimport { ifft } from './spectral/ifft';\nimport { irfft } from './spectral/irfft';\nconst spectral = {\n    fft,\n    ifft,\n    rfft,\n    irfft\n};\nimport * as fused from './fused_ops';\nimport { hammingWindow } from './signal/hamming_window';\nimport { hannWindow } from './signal/hann_window';\nimport { frame } from './signal/frame';\nimport { stft } from './signal/stft';\nconst signal = {\n    hammingWindow,\n    hannWindow,\n    frame,\n    stft,\n};\n// Image Ops namespace\nimport { cropAndResize } from './image/crop_and_resize';\nimport { flipLeftRight } from './image/flip_left_right';\nimport { rotateWithOffset } from './image/rotate_with_offset';\nimport { nonMaxSuppression } from './image/non_max_suppression';\nimport { nonMaxSuppressionAsync } from './image/non_max_suppression_async';\nimport { nonMaxSuppressionWithScore } from './image/non_max_suppression_with_score';\nimport { nonMaxSuppressionWithScoreAsync } from './image/non_max_suppression_with_score_async';\nimport { nonMaxSuppressionPadded } from './image/non_max_suppression_padded';\nimport { nonMaxSuppressionPaddedAsync } from './image/non_max_suppression_padded_async';\nimport { resizeBilinear } from './image/resize_bilinear';\nimport { resizeNearestNeighbor } from './image/resize_nearest_neighbor';\nconst image = {\n    flipLeftRight,\n    resizeNearestNeighbor,\n    resizeBilinear,\n    rotateWithOffset,\n    cropAndResize,\n    nonMaxSuppression,\n    nonMaxSuppressionAsync,\n    nonMaxSuppressionWithScore,\n    nonMaxSuppressionWithScoreAsync,\n    nonMaxSuppressionPadded,\n    nonMaxSuppressionPaddedAsync\n};\n// linalg namespace\nimport { bandPart } from './linalg/band_part';\nimport { gramSchmidt } from './linalg/gram_schmidt';\nimport { qr } from './linalg/qr';\nconst linalg = {\n    bandPart,\n    gramSchmidt,\n    qr\n};\n// losses namespace;\nimport { absoluteDifference } from './losses/absolute_difference';\nimport { computeWeightedLoss } from './losses/compute_weighted_loss';\nimport { cosineDistance } from './losses/cosine_distance';\nimport { hingeLoss } from './losses/hinge_loss';\nimport { huberLoss } from './losses/huber_loss';\nimport { logLoss } from './losses/log_loss';\nimport { meanSquaredError } from './losses/mean_squared_error';\nimport { sigmoidCrossEntropy } from './losses/sigmoid_cross_entropy';\nimport { softmaxCrossEntropy } from './losses/softmax_cross_entropy';\nconst losses = {\n    absoluteDifference,\n    computeWeightedLoss,\n    cosineDistance,\n    hingeLoss,\n    huberLoss,\n    logLoss,\n    meanSquaredError,\n    sigmoidCrossEntropy,\n    softmaxCrossEntropy\n};\n// Second level exports.\nexport { image, linalg, losses, spectral, fused, signal };\n//# sourceMappingURL=ops.js.map"]},"metadata":{},"sourceType":"module"}