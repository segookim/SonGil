{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport function nonMaxSuppressionV5(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold,\n      softNmsSigma = attrs.softNmsSigma;\n  assertNotComplex(boxes, 'NonMaxSuppressionWithScore');\n  var boxesVals = backend.data.get(boxes.dataId).values;\n  var scoresVals = backend.data.get(scores.dataId).values;\n  var maxOutputSizeVal = maxOutputSize;\n  var iouThresholdVal = iouThreshold;\n  var scoreThresholdVal = scoreThreshold;\n  var softNmsSigmaVal = softNmsSigma;\n\n  var _nonMaxSuppressionV5I = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal),\n      selectedIndices = _nonMaxSuppressionV5I.selectedIndices,\n      selectedScores = _nonMaxSuppressionV5I.selectedScores;\n\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))];\n}\nexport var nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'cpu',\n  kernelFunc: nonMaxSuppressionV5\n};","map":{"version":3,"sources":["../../src/kernels/NonMaxSuppressionV5.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAgD,mBAAhD,QAAuJ,uBAAvJ;AAEA,IAAM,uBAAuB,GAAG,YAAY,CAAC,uBAA7C;AAEA,SAAQ,gBAAR,QAA+B,aAA/B;AAEA,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAIL;AAAA,MACQ,MADR,GACkC,IADlC,CACQ,MADR;AAAA,MACgB,OADhB,GACkC,IADlC,CACgB,OADhB;AAAA,MACyB,KADzB,GACkC,IADlC,CACyB,KADzB;AAAA,MAEQ,KAFR,GAEyB,MAFzB,CAEQ,KAFR;AAAA,MAEe,MAFf,GAEyB,MAFzB,CAEe,MAFf;AAAA,MAGQ,aAHR,GAGqE,KAHrE,CAGQ,aAHR;AAAA,MAGuB,YAHvB,GAGqE,KAHrE,CAGuB,YAHvB;AAAA,MAGqC,cAHrC,GAGqE,KAHrE,CAGqC,cAHrC;AAAA,MAGqD,YAHrD,GAGqE,KAHrE,CAGqD,YAHrD;AAKC,EAAA,gBAAgB,CAAC,KAAD,EAAQ,4BAAR,CAAhB;AAEA,MAAM,SAAS,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,KAAK,CAAC,MAAvB,EAA+B,MAAjD;AACA,MAAM,UAAU,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,MAAM,CAAC,MAAxB,EAAgC,MAAnD;AAEA,MAAM,gBAAgB,GAAG,aAAzB;AACA,MAAM,eAAe,GAAG,YAAxB;AACA,MAAM,iBAAiB,GAAG,cAA1B;AACA,MAAM,eAAe,GAAG,YAAxB;;AAbD,8BAe2C,uBAAuB,CAC7D,SAD6D,EAClD,UADkD,EACtC,gBADsC,EACpB,eADoB,EAE7D,iBAF6D,EAE1C,eAF0C,CAflE;AAAA,MAeQ,eAfR,yBAeQ,eAfR;AAAA,MAeyB,cAfzB,yBAeyB,cAfzB;;AAmBC,SAAO,CACL,OAAO,CAAC,cAAR,CACI,CAAC,eAAe,CAAC,MAAjB,CADJ,EAC8B,OAD9B,EACuC,IAAI,UAAJ,CAAe,eAAf,CADvC,CADK,EAGL,OAAO,CAAC,cAAR,CACI,CAAC,cAAc,CAAC,MAAhB,CADJ,EAC6B,SAD7B,EACwC,IAAI,YAAJ,CAAiB,cAAjB,CADxC,CAHK,CAAP;AAMD;AAED,OAAO,IAAM,yBAAyB,GAAiB;AACrD,EAAA,UAAU,EAAE,mBADyC;AAErD,EAAA,WAAW,EAAE,KAFwC;AAGrD,EAAA,UAAU,EAAE;AAHyC,CAAhD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nimport { assertNotComplex } from '../cpu_util';\nexport function nonMaxSuppressionV5(args) {\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = attrs;\n    assertNotComplex(boxes, 'NonMaxSuppressionWithScore');\n    const boxesVals = backend.data.get(boxes.dataId).values;\n    const scoresVals = backend.data.get(scores.dataId).values;\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    const softNmsSigmaVal = softNmsSigma;\n    const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))\n    ];\n}\nexport const nonMaxSuppressionV5Config = {\n    kernelName: NonMaxSuppressionV5,\n    backendName: 'cpu',\n    kernelFunc: nonMaxSuppressionV5\n};\n//# sourceMappingURL=NonMaxSuppressionV5.js.map"]},"metadata":{},"sourceType":"module"}