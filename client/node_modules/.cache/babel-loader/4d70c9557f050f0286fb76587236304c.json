{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { elu } from '../kernels/Elu';\nimport { identity } from '../kernels/Identity';\nimport { leakyRelu } from '../kernels/LeakyRelu';\nimport { prelu } from '../kernels/Prelu';\nimport { relu } from '../kernels/Relu';\nimport { relu6 } from '../kernels/Relu6';\nexport function applyActivation(backend, x, activation, preluActivationWeights, leakyreluAlpha) {\n  if (activation === 'linear') {\n    return identity({\n      inputs: {\n        x\n      },\n      backend\n    });\n  } else if (activation === 'relu') {\n    return relu({\n      inputs: {\n        x\n      },\n      backend\n    });\n  } else if (activation === 'elu') {\n    return elu({\n      inputs: {\n        x\n      },\n      backend\n    });\n  } else if (activation === 'relu6') {\n    return relu6({\n      inputs: {\n        x\n      },\n      backend\n    });\n  } else if (activation === 'prelu') {\n    return prelu({\n      inputs: {\n        x,\n        alpha: preluActivationWeights\n      },\n      backend\n    });\n  } else if (activation === 'leakyrelu') {\n    return leakyRelu({\n      inputs: {\n        x\n      },\n      backend,\n      attrs: {\n        alpha: leakyreluAlpha\n      }\n    });\n  }\n\n  throw new Error(`Activation ${activation} has not been implemented for the CPU backend.`);\n}","map":{"version":3,"sources":["../../src/utils/fused_utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAKH,SAAQ,GAAR,QAAkB,gBAAlB;AACA,SAAQ,QAAR,QAAuB,qBAAvB;AACA,SAAQ,SAAR,QAAwB,sBAAxB;AACA,SAAQ,KAAR,QAAoB,kBAApB;AACA,SAAQ,IAAR,QAAmB,iBAAnB;AACA,SAAQ,KAAR,QAAoB,kBAApB;AAEA,OAAM,SAAU,eAAV,CACF,OADE,EACuB,CADvB,EACsC,UADtC,EAEF,sBAFE,EAEmC,cAFnC,EAE0D;AAC9D,MAAI,UAAU,KAAK,QAAnB,EAA6B;AAC3B,WAAO,QAAQ,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA;AAAD,OAAT;AAAc,MAAA;AAAd,KAAD,CAAf;AACD,GAFD,MAEO,IAAI,UAAU,KAAK,MAAnB,EAA2B;AAChC,WAAO,IAAI,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA;AAAD,OAAT;AAAc,MAAA;AAAd,KAAD,CAAX;AACD,GAFM,MAEA,IAAI,UAAU,KAAK,KAAnB,EAA0B;AAC/B,WAAO,GAAG,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA;AAAD,OAAT;AAAc,MAAA;AAAd,KAAD,CAAV;AACD,GAFM,MAEA,IAAI,UAAU,KAAK,OAAnB,EAA4B;AACjC,WAAO,KAAK,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA;AAAD,OAAT;AAAc,MAAA;AAAd,KAAD,CAAZ;AACD,GAFM,MAEA,IAAI,UAAU,KAAK,OAAnB,EAA4B;AACjC,WAAO,KAAK,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,CAAD;AAAI,QAAA,KAAK,EAAE;AAAX,OAAT;AAA6C,MAAA;AAA7C,KAAD,CAAZ;AACD,GAFM,MAEA,IAAI,UAAU,KAAK,WAAnB,EAAgC;AACrC,WAAO,SAAS,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA;AAAD,OAAT;AAAc,MAAA,OAAd;AAAuB,MAAA,KAAK,EAAE;AAAC,QAAA,KAAK,EAAE;AAAR;AAA9B,KAAD,CAAhB;AACD;;AACD,QAAM,IAAI,KAAJ,CACF,cAAc,UAAU,gDADtB,CAAN;AAED","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { elu } from '../kernels/Elu';\nimport { identity } from '../kernels/Identity';\nimport { leakyRelu } from '../kernels/LeakyRelu';\nimport { prelu } from '../kernels/Prelu';\nimport { relu } from '../kernels/Relu';\nimport { relu6 } from '../kernels/Relu6';\nexport function applyActivation(backend, x, activation, preluActivationWeights, leakyreluAlpha) {\n    if (activation === 'linear') {\n        return identity({ inputs: { x }, backend });\n    }\n    else if (activation === 'relu') {\n        return relu({ inputs: { x }, backend });\n    }\n    else if (activation === 'elu') {\n        return elu({ inputs: { x }, backend });\n    }\n    else if (activation === 'relu6') {\n        return relu6({ inputs: { x }, backend });\n    }\n    else if (activation === 'prelu') {\n        return prelu({ inputs: { x, alpha: preluActivationWeights }, backend });\n    }\n    else if (activation === 'leakyrelu') {\n        return leakyRelu({ inputs: { x }, backend, attrs: { alpha: leakyreluAlpha } });\n    }\n    throw new Error(`Activation ${activation} has not been implemented for the CPU backend.`);\n}\n//# sourceMappingURL=fused_utils.js.map"]},"metadata":{},"sourceType":"module"}