{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unique } from '@tensorflow/tfjs-core';\nimport { uniqueImplCPU } from '../kernel_utils/shared';\nimport { assertNotComplex } from '../webgl_util';\nexport function unique(args) {\n  const {\n    inputs,\n    attrs,\n    backend\n  } = args;\n  const {\n    axis\n  } = attrs;\n  const {\n    x\n  } = inputs;\n  assertNotComplex(x, 'unique'); // For now, always forward calculation to the CPU backend.\n\n  console.warn('WARNING: ', 'UI might be locked temporarily as data is being downloaded');\n  const values = backend.readSync(x.dataId);\n  const {\n    outputValues,\n    outputShape,\n    indices\n  } = uniqueImplCPU(values, axis, x.shape, x.dtype);\n  return [backend.makeTensorInfo(outputShape, x.dtype, outputValues), backend.makeTensorInfo([indices.length], 'int32', indices)];\n}\nexport const uniqueConfig = {\n  kernelName: Unique,\n  backendName: 'webgl',\n  kernelFunc: unique\n};","map":{"version":3,"sources":["../../src/kernels/Unique.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAA8C,MAA9C,QAAsF,uBAAtF;AAGA,SAAQ,aAAR,QAA4B,wBAA5B;AACA,SAAQ,gBAAR,QAA+B,eAA/B;AAEA,OAAM,SAAU,MAAV,CACF,IADE,EAEuE;AAE3E,QAAM;AAAC,IAAA,MAAD;AAAS,IAAA,KAAT;AAAgB,IAAA;AAAhB,MAA2B,IAAjC;AACA,QAAM;AAAC,IAAA;AAAD,MAAS,KAAf;AACA,QAAM;AAAC,IAAA;AAAD,MAAM,MAAZ;AACA,EAAA,gBAAgB,CAAC,CAAD,EAAI,QAAJ,CAAhB,CAL2E,CAO3E;;AACA,EAAA,OAAO,CAAC,IAAR,CACI,WADJ,EAEI,4DAFJ;AAGA,QAAM,MAAM,GAAG,OAAO,CAAC,QAAR,CAAiB,CAAC,CAAC,MAAnB,CAAf;AACA,QAAM;AAAC,IAAA,YAAD;AAAe,IAAA,WAAf;AAA4B,IAAA;AAA5B,MACF,aAAa,CAAC,MAAD,EAAS,IAAT,EAAe,CAAC,CAAC,KAAjB,EAAwB,CAAC,CAAC,KAA1B,CADjB;AAEA,SAAO,CACL,OAAO,CAAC,cAAR,CAAuB,WAAvB,EAAoC,CAAC,CAAC,KAAtC,EAA6C,YAA7C,CADK,EAEL,OAAO,CAAC,cAAR,CAAuB,CAAC,OAAO,CAAC,MAAT,CAAvB,EAAyC,OAAzC,EAAkD,OAAlD,CAFK,CAAP;AAID;AAED,OAAO,MAAM,YAAY,GAAiB;AACxC,EAAA,UAAU,EAAE,MAD4B;AAExC,EAAA,WAAW,EAAE,OAF2B;AAGxC,EAAA,UAAU,EAAE;AAH4B,CAAnC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Unique } from '@tensorflow/tfjs-core';\nimport { uniqueImplCPU } from '../kernel_utils/shared';\nimport { assertNotComplex } from '../webgl_util';\nexport function unique(args) {\n    const { inputs, attrs, backend } = args;\n    const { axis } = attrs;\n    const { x } = inputs;\n    assertNotComplex(x, 'unique');\n    // For now, always forward calculation to the CPU backend.\n    console.warn('WARNING: ', 'UI might be locked temporarily as data is being downloaded');\n    const values = backend.readSync(x.dataId);\n    const { outputValues, outputShape, indices } = uniqueImplCPU(values, axis, x.shape, x.dtype);\n    return [\n        backend.makeTensorInfo(outputShape, x.dtype, outputValues),\n        backend.makeTensorInfo([indices.length], 'int32', indices),\n    ];\n}\nexport const uniqueConfig = {\n    kernelName: Unique,\n    backendName: 'webgl',\n    kernelFunc: unique,\n};\n//# sourceMappingURL=Unique.js.map"]},"metadata":{},"sourceType":"module"}