{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Count the elements in an Array of LayerVariables.\n *\n * @param weights: The LayerVariables of which the constituent numbers are to\n *   be counted.\n * @returns A count of the elements in all the LayerVariables\n */\nexport function countParamsInWeights(weights) {\n  let count = 0;\n\n  for (const weight of weights) {\n    if (weight.shape.length === 0) {\n      count += 1;\n    } else {\n      count += weight.shape.reduce((a, b) => a * b);\n    }\n  }\n\n  return count;\n}","map":{"version":3,"sources":["../../src/utils/variable_utils.ts"],"names":[],"mappings":"AAAA;;;;;;;;AAQG;;AAIH;;;;;;AAMG;AACH,OAAM,SAAU,oBAAV,CAA+B,OAA/B,EAAuD;AAC3D,MAAI,KAAK,GAAG,CAAZ;;AACA,OAAK,MAAM,MAAX,IAAqB,OAArB,EAA8B;AAC5B,QAAI,MAAM,CAAC,KAAP,CAAa,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,MAAA,KAAK,IAAI,CAAT;AACD,KAFD,MAEO;AACL,MAAA,KAAK,IAAI,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB,CAAC,CAAD,EAAI,CAAJ,KAAU,CAAC,GAAG,CAAlC,CAAT;AACD;AACF;;AACD,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Count the elements in an Array of LayerVariables.\n *\n * @param weights: The LayerVariables of which the constituent numbers are to\n *   be counted.\n * @returns A count of the elements in all the LayerVariables\n */\nexport function countParamsInWeights(weights) {\n    let count = 0;\n    for (const weight of weights) {\n        if (weight.shape.length === 0) {\n            count += 1;\n        }\n        else {\n            count += weight.shape.reduce((a, b) => a * b);\n        }\n    }\n    return count;\n}\n//# sourceMappingURL=variable_utils.js.map"]},"metadata":{},"sourceType":"module"}