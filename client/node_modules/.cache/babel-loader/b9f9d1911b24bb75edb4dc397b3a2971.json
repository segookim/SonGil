{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var UnaryOpProgram = function UnaryOpProgram(aShape, opSnippet) {\n  _classCallCheck(this, UnaryOpProgram);\n\n  this.variableNames = ['A'];\n  this.outputShape = aShape;\n  this.userCode = \"\\n      float unaryOperation(float x) {\\n        \".concat(opSnippet, \"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \");\n};\nexport var CHECK_NAN_SNIPPET = \"if (isnan(x)) return x;\";\nexport var LINEAR = \"return x;\";\nexport var ABS = \"return abs(x);\";\nexport function STEP() {\n  var alpha = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.0;\n  return CHECK_NAN_SNIPPET + \"\\n    return x > 0.0 ? 1.0 : float(\".concat(alpha, \");\\n  \");\n}\nexport var ELU = \"return (x >= 0.0) ? x : (exp(x) - 1.0);\";\nexport var RELU = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : x;\\n\";\nexport var RELU6 = CHECK_NAN_SNIPPET + \"\\n  return (x < 0.0) ? 0.0 : min(6.0, x);\\n\";\nexport var CLONE = 'return x;';","map":{"version":3,"sources":["../src/unaryop_gpu.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAIH,WAAa,cAAb,GAKE,wBAAY,MAAZ,EAA8B,SAA9B,EAA+C;AAAA;;AAJ/C,OAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AAKE,OAAK,WAAL,GAAmB,MAAnB;AACA,OAAK,QAAL,8DAEM,SAFN;AAYD,CAnBH;AAsBA,OAAO,IAAM,iBAAiB,4BAAvB;AAEP,OAAO,IAAM,MAAM,cAAZ;AAEP,OAAO,IAAM,GAAG,mBAAT;AAEP,OAAM,SAAU,IAAV,GAA0B;AAAA,MAAX,KAAW,uEAAH,GAAG;AAC9B,SAAO,iBAAiB,gDACS,KADT,WAAxB;AAGD;AAED,OAAO,IAAM,GAAG,4CAAT;AAEP,OAAO,IAAM,IAAI,GAAG,iBAAiB,sCAA9B;AAIP,OAAO,IAAM,KAAK,GAAG,iBAAiB,gDAA/B;AAIP,OAAO,IAAM,KAAK,GAAG,WAAd","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class UnaryOpProgram {\n    constructor(aShape, opSnippet) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = `\n      float unaryOperation(float x) {\n        ${opSnippet}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `;\n    }\n}\nexport const CHECK_NAN_SNIPPET = `if (isnan(x)) return x;`;\nexport const LINEAR = `return x;`;\nexport const ABS = `return abs(x);`;\nexport function STEP(alpha = 0.0) {\n    return CHECK_NAN_SNIPPET + `\n    return x > 0.0 ? 1.0 : float(${alpha});\n  `;\n}\nexport const ELU = `return (x >= 0.0) ? x : (exp(x) - 1.0);`;\nexport const RELU = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : x;\n`;\nexport const RELU6 = CHECK_NAN_SNIPPET + `\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n`;\nexport const CLONE = 'return x;';\n//# sourceMappingURL=unaryop_gpu.js.map"]},"metadata":{},"sourceType":"module"}