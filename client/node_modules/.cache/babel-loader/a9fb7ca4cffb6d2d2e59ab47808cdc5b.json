{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LRNGrad } from '../kernel_names';\nimport { op } from './operation';\n\nfunction localResponseNormalizationBackprop_(x, y, dy) {\n  var depthRadius = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 5;\n  var bias = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 1;\n  var alpha = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n  var beta = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : 0.5;\n  var inputs = {\n    x: x,\n    y: y,\n    dy: dy\n  };\n  var attrs = {\n    depthRadius: depthRadius,\n    bias: bias,\n    alpha: alpha,\n    beta: beta\n  };\n  return ENGINE.runKernel(LRNGrad, inputs, attrs);\n}\n\nexport var localResponseNormalizationBackprop = op({\n  localResponseNormalizationBackprop_: localResponseNormalizationBackprop_\n});","map":{"version":3,"sources":["../../src/ops/local_response_normalization_backprop.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,QAAqB,WAArB;AACA,SAAQ,OAAR,QAAmD,iBAAnD;AAKA,SAAQ,EAAR,QAAiB,aAAjB;;AAEA,SAAS,mCAAT,CACI,CADJ,EACU,CADV,EACgB,EADhB,EACuE;AAAA,MAAhD,WAAgD,uEAAlC,CAAkC;AAAA,MAA/B,IAA+B,uEAAxB,CAAwB;AAAA,MAArB,KAAqB,uEAAb,CAAa;AAAA,MAAV,IAAU,uEAAH,GAAG;AACrE,MAAM,MAAM,GAAkB;AAAC,IAAA,CAAC,EAAD,CAAD;AAAI,IAAA,CAAC,EAAD,CAAJ;AAAO,IAAA,EAAE,EAAF;AAAP,GAA9B;AAEA,MAAM,KAAK,GAAiB;AAAC,IAAA,WAAW,EAAX,WAAD;AAAc,IAAA,IAAI,EAAJ,IAAd;AAAoB,IAAA,KAAK,EAAL,KAApB;AAA2B,IAAA,IAAI,EAAJ;AAA3B,GAA5B;AAEA,SAAO,MAAM,CAAC,SAAP,CACH,OADG,EACM,MADN,EACsC,KADtC,CAAP;AAED;;AAED,OAAO,IAAM,kCAAkC,GAC3C,EAAE,CAAC;AAAC,EAAA,mCAAmC,EAAnC;AAAD,CAAD,CADC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ENGINE } from '../engine';\nimport { LRNGrad } from '../kernel_names';\nimport { op } from './operation';\nfunction localResponseNormalizationBackprop_(x, y, dy, depthRadius = 5, bias = 1, alpha = 1, beta = 0.5) {\n    const inputs = { x, y, dy };\n    const attrs = { depthRadius, bias, alpha, beta };\n    return ENGINE.runKernel(LRNGrad, inputs, attrs);\n}\nexport const localResponseNormalizationBackprop = op({ localResponseNormalizationBackprop_ });\n//# sourceMappingURL=local_response_normalization_backprop.js.map"]},"metadata":{},"sourceType":"module"}