{"ast":null,"code":"/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tensor1d } from './tensor1d';\nexport function enclosingPowerOfTwo(value) {\n  // Return 2**N for integer N such that 2**N >= value.\n  return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\nexport function cosineWindow(windowLength, a, b) {\n  const even = 1 - windowLength % 2;\n  const newValues = new Float32Array(windowLength);\n\n  for (let i = 0; i < windowLength; ++i) {\n    const cosArg = 2.0 * Math.PI * i / (windowLength + even - 1);\n    newValues[i] = a - b * Math.cos(cosArg);\n  }\n\n  return tensor1d(newValues, 'float32');\n}","map":{"version":3,"sources":["../../src/ops/signal_ops_util.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,QAAR,QAAuB,YAAvB;AAEA,OAAM,SAAU,mBAAV,CAA8B,KAA9B,EAA2C;AAC/C;AACA,SAAO,IAAI,CAAC,KAAL,CAAW,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,IAAI,CAAC,GAAL,CAAS,GAAT,CAA5B,CAAZ,CAAX,CAAP;AACD;AAED,OAAM,SAAU,YAAV,CACF,YADE,EACoB,CADpB,EAC+B,CAD/B,EACwC;AAC5C,QAAM,IAAI,GAAG,IAAI,YAAY,GAAG,CAAhC;AACA,QAAM,SAAS,GAAG,IAAI,YAAJ,CAAiB,YAAjB,CAAlB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,YAApB,EAAkC,EAAE,CAApC,EAAuC;AACrC,UAAM,MAAM,GAAI,MAAM,IAAI,CAAC,EAAX,GAAgB,CAAjB,IAAuB,YAAY,GAAG,IAAf,GAAsB,CAA7C,CAAf;AACA,IAAA,SAAS,CAAC,CAAD,CAAT,GAAe,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAL,CAAS,MAAT,CAAvB;AACD;;AACD,SAAO,QAAQ,CAAC,SAAD,EAAY,SAAZ,CAAf;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { tensor1d } from './tensor1d';\nexport function enclosingPowerOfTwo(value) {\n    // Return 2**N for integer N such that 2**N >= value.\n    return Math.floor(Math.pow(2, Math.ceil(Math.log(value) / Math.log(2.0))));\n}\nexport function cosineWindow(windowLength, a, b) {\n    const even = 1 - windowLength % 2;\n    const newValues = new Float32Array(windowLength);\n    for (let i = 0; i < windowLength; ++i) {\n        const cosArg = (2.0 * Math.PI * i) / (windowLength + even - 1);\n        newValues[i] = a - b * Math.cos(cosArg);\n    }\n    return tensor1d(newValues, 'float32');\n}\n//# sourceMappingURL=signal_ops_util.js.map"]},"metadata":{},"sourceType":"module"}