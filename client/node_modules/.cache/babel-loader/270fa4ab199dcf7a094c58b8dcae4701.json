{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { multiplyImpl } from './Multiply';\nexport function negImpl(xVals, xShape, xDtype) {\n  const minusOne = util.createScalarValue(-1, xDtype);\n  return multiplyImpl([], xShape, minusOne, xVals, xDtype);\n}\nexport function neg(args) {\n  const {\n    inputs,\n    backend\n  } = args;\n  const {\n    x\n  } = inputs;\n  assertNotComplex(x, 'neg');\n  const xVals = backend.data.get(x.dataId).values;\n  const [res, newShape] = negImpl(xVals, x.shape, x.dtype);\n  return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nexport const negConfig = {\n  kernelName: Neg,\n  backendName: 'cpu',\n  kernelFunc: neg\n};","map":{"version":3,"sources":["../../src/kernels/Neg.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAA4C,GAA5C,EAAsF,IAAtF,QAAiG,uBAAjG;AAGA,SAAQ,gBAAR,QAA+B,aAA/B;AACA,SAAQ,YAAR,QAA2B,YAA3B;AAEA,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAAqC,MAArC,EAAuD,MAAvD,EAAuE;AAE3E,QAAM,QAAQ,GACV,IAAI,CAAC,iBAAL,CAAuB,CAAC,CAAxB,EAA8C,MAA9C,CADJ;AAEA,SAAO,YAAY,CAAC,EAAD,EAAK,MAAL,EAAa,QAAb,EAAuB,KAAvB,EAA8B,MAA9B,CAAnB;AACD;AAED,OAAM,SAAU,GAAV,CAAc,IAAd,EAAkE;AAEtE,QAAM;AAAC,IAAA,MAAD;AAAS,IAAA;AAAT,MAAoB,IAA1B;AACA,QAAM;AAAC,IAAA;AAAD,MAAM,MAAZ;AAEA,EAAA,gBAAgB,CAAC,CAAD,EAAI,KAAJ,CAAhB;AAEA,QAAM,KAAK,GAAG,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,CAAC,CAAC,MAAnB,EAA2B,MAAzC;AACA,QAAM,CAAC,GAAD,EAAM,QAAN,IAAkB,OAAO,CAAC,KAAD,EAAQ,CAAC,CAAC,KAAV,EAAiB,CAAC,CAAC,KAAnB,CAA/B;AAEA,SAAO,OAAO,CAAC,cAAR,CAAuB,QAAvB,EAAiC,CAAC,CAAC,KAAnC,EAA0C,GAA1C,CAAP;AACD;AAED,OAAO,MAAM,SAAS,GAAiB;AACrC,EAAA,UAAU,EAAE,GADyB;AAErC,EAAA,WAAW,EAAE,KAFwB;AAGrC,EAAA,UAAU,EAAE;AAHyB,CAAhC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Neg, util } from '@tensorflow/tfjs-core';\nimport { assertNotComplex } from '../cpu_util';\nimport { multiplyImpl } from './Multiply';\nexport function negImpl(xVals, xShape, xDtype) {\n    const minusOne = util.createScalarValue(-1, xDtype);\n    return multiplyImpl([], xShape, minusOne, xVals, xDtype);\n}\nexport function neg(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    assertNotComplex(x, 'neg');\n    const xVals = backend.data.get(x.dataId).values;\n    const [res, newShape] = negImpl(xVals, x.shape, x.dtype);\n    return backend.makeTensorInfo(newShape, x.dtype, res);\n}\nexport const negConfig = {\n    kernelName: Neg,\n    backendName: 'cpu',\n    kernelFunc: neg\n};\n//# sourceMappingURL=Neg.js.map"]},"metadata":{},"sourceType":"module"}