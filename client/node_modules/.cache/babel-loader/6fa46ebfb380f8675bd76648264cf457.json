{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport var SlicePackedProgram = /*#__PURE__*/function () {\n  function SlicePackedProgram(destSize) {\n    _classCallCheck(this, SlicePackedProgram);\n\n    this.variableNames = ['source'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = destSize;\n    this.rank = destSize.length;\n    var dtype = getCoordsDataType(this.rank);\n    var coords = getChannels('coords', this.rank);\n    var sourceLoc = getChannels('sourceLoc', this.rank);\n    var innerDims = this.rank === 1 ? 'sourceLoc' : \"vec2(\".concat(sourceLoc.slice(-2).join(), \")\");\n    var getChannel = \"getChannel(getSource(\".concat(sourceLoc.join(), \"), \").concat(innerDims, \")\");\n    var upperRow = \"\\n      result.x = \".concat(getChannel, \";\\n      if (++\").concat(coords[this.rank - 1], \" < \").concat(destSize[this.rank - 1], \") {\\n        ++\").concat(sourceLoc[this.rank - 1], \";\\n        result.y = \").concat(getChannel, \";\\n        --\").concat(sourceLoc[this.rank - 1], \";\\n      }\\n    \");\n    var lowerRow = this.rank === 1 ? '' : \"\\n      --\".concat(coords[this.rank - 1], \";\\n      if (++\").concat(coords[this.rank - 2], \" < \").concat(destSize[this.rank - 2], \") {\\n        ++\").concat(sourceLoc[this.rank - 2], \";\\n        result.z = \").concat(getChannel, \";\\n        if (++\").concat(coords[this.rank - 1], \" < \").concat(destSize[this.rank - 1], \") {\\n          ++\").concat(sourceLoc[this.rank - 1], \";\\n          result.w = \").concat(getChannel, \";\\n        }\\n      }\\n    \");\n    var sourceLocSetup = this.rank <= 4 ? \"sourceLoc = coords +\\n            \".concat(dtype, \"(\").concat(destSize.map(function (_, i) {\n      return \"start[\".concat(i, \"]\");\n    }).join(), \");\") : destSize.map(function (_, i) {\n      return \"\".concat(sourceLoc[i], \" = \").concat(coords[i], \" + start[\").concat(i, \"];\");\n    }).join('\\n');\n    this.userCode = \"\\n      uniform int start[\".concat(this.rank, \"];\\n      void main() {\\n        \").concat(dtype, \" coords = getOutputCoords();\\n        \").concat(dtype, \" sourceLoc;\\n        \").concat(sourceLocSetup, \"\\n        vec4 result = vec4(0.);\\n        \").concat(upperRow, \"\\n        \").concat(lowerRow, \"\\n        setOutput(result);\\n      }\\n    \");\n  }\n\n  _createClass(SlicePackedProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(start) {\n      var _this = this;\n\n      if (start.length !== this.rank) {\n        throw Error(\"The rank (\".concat(this.rank, \") of the program must match the \") + \"length of start (\".concat(start.length, \")\"));\n      }\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.startLoc == null) {\n          _this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n\n          if (_this.startLoc == null) {\n            // This means the compiler has optimized and realized it doesn't need\n            // the uniform.\n            return;\n          }\n        }\n\n        gpgpu.gl.uniform1iv(_this.startLoc, start);\n      };\n    }\n  }]);\n\n  return SlicePackedProgram;\n}();","map":{"version":3,"sources":["../src/slice_packed_gpu.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getChannels } from './packing_util';\nimport { getCoordsDataType } from './shader_compiler';\nexport class SlicePackedProgram {\n    constructor(destSize) {\n        this.variableNames = ['source'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = destSize;\n        this.rank = destSize.length;\n        const dtype = getCoordsDataType(this.rank);\n        const coords = getChannels('coords', this.rank);\n        const sourceLoc = getChannels('sourceLoc', this.rank);\n        const innerDims = this.rank === 1 ? 'sourceLoc' : `vec2(${sourceLoc.slice(-2).join()})`;\n        const getChannel = `getChannel(getSource(${sourceLoc.join()}), ${innerDims})`;\n        const upperRow = `\n      result.x = ${getChannel};\n      if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n        ++${sourceLoc[this.rank - 1]};\n        result.y = ${getChannel};\n        --${sourceLoc[this.rank - 1]};\n      }\n    `;\n        const lowerRow = this.rank === 1 ? '' : `\n      --${coords[this.rank - 1]};\n      if (++${coords[this.rank - 2]} < ${destSize[this.rank - 2]}) {\n        ++${sourceLoc[this.rank - 2]};\n        result.z = ${getChannel};\n        if (++${coords[this.rank - 1]} < ${destSize[this.rank - 1]}) {\n          ++${sourceLoc[this.rank - 1]};\n          result.w = ${getChannel};\n        }\n      }\n    `;\n        const sourceLocSetup = this.rank <= 4 ?\n            `sourceLoc = coords +\n            ${dtype}(${destSize.map((_, i) => `start[${i}]`).join()});` :\n            destSize.map((_, i) => `${sourceLoc[i]} = ${coords[i]} + start[${i}];`)\n                .join('\\n');\n        this.userCode = `\n      uniform int start[${this.rank}];\n      void main() {\n        ${dtype} coords = getOutputCoords();\n        ${dtype} sourceLoc;\n        ${sourceLocSetup}\n        vec4 result = vec4(0.);\n        ${upperRow}\n        ${lowerRow}\n        setOutput(result);\n      }\n    `;\n    }\n    getCustomSetupFunc(start) {\n        if (start.length !== this.rank) {\n            throw Error(`The rank (${this.rank}) of the program must match the ` +\n                `length of start (${start.length})`);\n        }\n        return (gpgpu, webGLProgram) => {\n            if (this.startLoc == null) {\n                this.startLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'start');\n                if (this.startLoc == null) {\n                    // This means the compiler has optimized and realized it doesn't need\n                    // the uniform.\n                    return;\n                }\n            }\n            gpgpu.gl.uniform1iv(this.startLoc, start);\n        };\n    }\n}\n//# sourceMappingURL=slice_packed_gpu.js.map"]},"metadata":{},"sourceType":"module"}