{"ast":null,"code":"import _slicedToArray from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '../kernel_names';\nimport { matMul } from '../ops/mat_mul';\nexport var batchMatMulGradConfig = {\n  kernelName: BatchMatMul,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved, attrs) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var transposeA = attrs.transposeA,\n        transposeB = attrs.transposeB;\n\n    if (!transposeA && !transposeB) {\n      return {\n        a: function a() {\n          return matMul(dy, b, false, true);\n        },\n        b: function b() {\n          return matMul(a, dy, true, false);\n        }\n      };\n    } else if (!transposeA && transposeB) {\n      return {\n        a: function a() {\n          return matMul(dy, b, false, false);\n        },\n        b: function b() {\n          return matMul(dy, a, true, false);\n        }\n      };\n    } else if (transposeA && !transposeB) {\n      return {\n        a: function a() {\n          return matMul(b, dy, false, true);\n        },\n        b: function b() {\n          return matMul(a, dy, false, false);\n        }\n      };\n    } else {\n      return {\n        a: function a() {\n          return matMul(b, dy, true, true);\n        },\n        b: function b() {\n          return matMul(dy, a, true, true);\n        }\n      };\n    }\n  }\n};","map":{"version":3,"sources":["../../src/gradients/BatchMatMul_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,WAAR,QAA4C,iBAA5C;AAEA,SAAQ,MAAR,QAAqB,gBAArB;AAGA,OAAO,IAAM,qBAAqB,GAAe;AAC/C,EAAA,UAAU,EAAE,WADmC;AAE/C,EAAA,YAAY,EAAE,CAAC,GAAD,EAAM,GAAN,CAFiC;AAG/C,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAA8B,KAA9B,EAAqD;AAAA,gCAC9C,KAD8C;AAAA,QACtD,CADsD;AAAA,QACnD,CADmD;;AAAA,QAGtD,UAHsD,GAG5B,KAH4B,CAGtD,UAHsD;AAAA,QAG1C,UAH0C,GAG5B,KAH4B,CAG1C,UAH0C;;AAK7D,QAAI,CAAC,UAAD,IAAe,CAAC,UAApB,EAAgC;AAC9B,aAAO;AACL,QAAA,CAAC,EAAE;AAAA,iBAAM,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,KAAR,EAAe,IAAf,CAAZ;AAAA,SADE;AAEL,QAAA,CAAC,EAAE;AAAA,iBAAM,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,IAAR,EAAc,KAAd,CAAZ;AAAA;AAFE,OAAP;AAID,KALD,MAKO,IAAI,CAAC,UAAD,IAAe,UAAnB,EAA+B;AACpC,aAAO;AACL,QAAA,CAAC,EAAE;AAAA,iBAAM,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,KAAR,EAAe,KAAf,CAAZ;AAAA,SADE;AAEL,QAAA,CAAC,EAAE;AAAA,iBAAM,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,IAAR,EAAc,KAAd,CAAZ;AAAA;AAFE,OAAP;AAID,KALM,MAKA,IAAI,UAAU,IAAI,CAAC,UAAnB,EAA+B;AACpC,aAAO;AACL,QAAA,CAAC,EAAE;AAAA,iBAAM,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,KAAR,EAAe,IAAf,CAAZ;AAAA,SADE;AAEL,QAAA,CAAC,EAAE;AAAA,iBAAM,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,KAAR,EAAe,KAAf,CAAZ;AAAA;AAFE,OAAP;AAID,KALM,MAKA;AACL,aAAO;AACL,QAAA,CAAC,EAAE;AAAA,iBAAM,MAAM,CAAC,CAAD,EAAI,EAAJ,EAAQ,IAAR,EAAc,IAAd,CAAZ;AAAA,SADE;AAEL,QAAA,CAAC,EAAE;AAAA,iBAAM,MAAM,CAAC,EAAD,EAAK,CAAL,EAAQ,IAAR,EAAc,IAAd,CAAZ;AAAA;AAFE,OAAP;AAID;AACF;AA7B8C,CAA1C","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { BatchMatMul } from '../kernel_names';\nimport { matMul } from '../ops/mat_mul';\nexport const batchMatMulGradConfig = {\n    kernelName: BatchMatMul,\n    inputsToSave: ['a', 'b'],\n    gradFunc: (dy, saved, attrs) => {\n        const [a, b] = saved;\n        const { transposeA, transposeB } = attrs;\n        if (!transposeA && !transposeB) {\n            return {\n                a: () => matMul(dy, b, false, true),\n                b: () => matMul(a, dy, true, false)\n            };\n        }\n        else if (!transposeA && transposeB) {\n            return {\n                a: () => matMul(dy, b, false, false),\n                b: () => matMul(dy, a, true, false)\n            };\n        }\n        else if (transposeA && !transposeB) {\n            return {\n                a: () => matMul(b, dy, false, true),\n                b: () => matMul(a, dy, false, false)\n            };\n        }\n        else {\n            return {\n                a: () => matMul(b, dy, true, true),\n                b: () => matMul(dy, a, true, true)\n            };\n        }\n    }\n};\n//# sourceMappingURL=BatchMatMul_grad.js.map"]},"metadata":{},"sourceType":"module"}