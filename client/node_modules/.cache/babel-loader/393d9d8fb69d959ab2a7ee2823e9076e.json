{"ast":null,"code":"import _slicedToArray from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isPromise } from './util_base'; // Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\n\nvar TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\n\nexport var Environment = /*#__PURE__*/function () {\n  // tslint:disable-next-line: no-any\n  function Environment(global) {\n    _classCallCheck(this, Environment);\n\n    this.global = global;\n    this.flags = {};\n    this.flagRegistry = {};\n    this.urlFlags = {};\n    this.populateURLFlags();\n  }\n\n  _createClass(Environment, [{\n    key: \"setPlatform\",\n    value: function setPlatform(platformName, platform) {\n      if (this.platform != null) {\n        console.warn(\"Platform \".concat(this.platformName, \" has already been set. \") + \"Overwriting the platform with \".concat(platform, \".\"));\n      }\n\n      this.platformName = platformName;\n      this.platform = platform;\n    }\n  }, {\n    key: \"registerFlag\",\n    value: function registerFlag(flagName, evaluationFn, setHook) {\n      this.flagRegistry[flagName] = {\n        evaluationFn: evaluationFn,\n        setHook: setHook\n      }; // Override the flag value from the URL. This has to happen here because the\n      // environment is initialized before flags get registered.\n\n      if (this.urlFlags[flagName] != null) {\n        var flagValue = this.urlFlags[flagName];\n        console.warn(\"Setting feature override from URL \".concat(flagName, \": \").concat(flagValue, \".\"));\n        this.set(flagName, flagValue);\n      }\n    }\n  }, {\n    key: \"getAsync\",\n    value: function () {\n      var _getAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(flagName) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(flagName in this.flags)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", this.flags[flagName]);\n\n              case 2:\n                _context.next = 4;\n                return this.evaluateFlag(flagName);\n\n              case 4:\n                this.flags[flagName] = _context.sent;\n                return _context.abrupt(\"return\", this.flags[flagName]);\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getAsync(_x) {\n        return _getAsync.apply(this, arguments);\n      }\n\n      return getAsync;\n    }()\n  }, {\n    key: \"get\",\n    value: function get(flagName) {\n      if (flagName in this.flags) {\n        return this.flags[flagName];\n      }\n\n      var flagValue = this.evaluateFlag(flagName);\n\n      if (isPromise(flagValue)) {\n        throw new Error(\"Flag \".concat(flagName, \" cannot be synchronously evaluated. \") + \"Please use getAsync() instead.\");\n      }\n\n      this.flags[flagName] = flagValue;\n      return this.flags[flagName];\n    }\n  }, {\n    key: \"getNumber\",\n    value: function getNumber(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getBool\",\n    value: function getBool(flagName) {\n      return this.get(flagName);\n    }\n  }, {\n    key: \"getFlags\",\n    value: function getFlags() {\n      return this.flags;\n    } // For backwards compatibility.\n\n  }, {\n    key: \"features\",\n    get: function get() {\n      return this.flags;\n    }\n  }, {\n    key: \"set\",\n    value: function set(flagName, value) {\n      if (this.flagRegistry[flagName] == null) {\n        throw new Error(\"Cannot set flag \".concat(flagName, \" as it has not been registered.\"));\n      }\n\n      this.flags[flagName] = value;\n\n      if (this.flagRegistry[flagName].setHook != null) {\n        this.flagRegistry[flagName].setHook(value);\n      }\n    }\n  }, {\n    key: \"evaluateFlag\",\n    value: function evaluateFlag(flagName) {\n      if (this.flagRegistry[flagName] == null) {\n        throw new Error(\"Cannot evaluate flag '\".concat(flagName, \"': no evaluation function found.\"));\n      }\n\n      return this.flagRegistry[flagName].evaluationFn();\n    }\n  }, {\n    key: \"setFlags\",\n    value: function setFlags(flags) {\n      this.flags = Object.assign({}, flags);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.flags = {};\n      this.urlFlags = {};\n      this.populateURLFlags();\n    }\n  }, {\n    key: \"populateURLFlags\",\n    value: function populateURLFlags() {\n      var _this = this;\n\n      if (typeof this.global === 'undefined' || typeof this.global.location === 'undefined' || typeof this.global.location.search === 'undefined') {\n        return;\n      }\n\n      var urlParams = getQueryParams(this.global.location.search);\n\n      if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n        var keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n        keyValues.forEach(function (keyValue) {\n          var _keyValue$split = keyValue.split(':'),\n              _keyValue$split2 = _slicedToArray(_keyValue$split, 2),\n              key = _keyValue$split2[0],\n              value = _keyValue$split2[1];\n\n          _this.urlFlags[key] = parseValue(key, value);\n        });\n      }\n    }\n  }]);\n\n  return Environment;\n}();\nexport function getQueryParams(queryString) {\n  var params = {};\n  queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, function (s) {\n    for (var _len = arguments.length, t = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      t[_key - 1] = arguments[_key];\n    }\n\n    decodeParam(params, t[0], t[1]);\n    return t.join('=');\n  });\n  return params;\n}\n\nfunction decodeParam(params, name, value) {\n  params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\n\nfunction parseValue(flagName, value) {\n  value = value.toLowerCase();\n\n  if (value === 'true' || value === 'false') {\n    return value === 'true';\n  } else if (\"\".concat(+value) === value) {\n    return +value;\n  }\n\n  throw new Error(\"Could not parse value flag value \".concat(value, \" for flag \").concat(flagName, \".\"));\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\n\n\nexport function env() {\n  return ENV;\n}\nexport var ENV = null;\nexport function setEnvironmentGlobal(environment) {\n  ENV = environment;\n}","map":{"version":3,"sources":["../src/environment.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,SAAR,QAAwB,aAAxB,C,CAEA;;AACA,IAAM,yBAAyB,GAAG,WAAlC;AAYA;;;;;;AAMG;;AACH,WAAa,WAAb;AASE;AACA,uBAAmB,MAAnB,EAA8B;AAAA;;AAAX,SAAA,MAAA,GAAA,MAAA;AATX,SAAA,KAAA,GAAe,EAAf;AACA,SAAA,YAAA,GAAwD,EAAxD;AAEA,SAAA,QAAA,GAAkB,EAAlB;AAON,SAAK,gBAAL;AACD;;AAZH;AAAA;AAAA,WAcE,qBAAY,YAAZ,EAAkC,QAAlC,EAAoD;AAClD,UAAI,KAAK,QAAL,IAAiB,IAArB,EAA2B;AACzB,QAAA,OAAO,CAAC,IAAR,CACI,mBAAY,KAAK,YAAjB,uEACiC,QADjC,MADJ;AAGD;;AACD,WAAK,YAAL,GAAoB,YAApB;AACA,WAAK,QAAL,GAAgB,QAAhB;AACD;AAtBH;AAAA;AAAA,WAwBE,sBACI,QADJ,EACsB,YADtB,EAEI,OAFJ,EAEwC;AACtC,WAAK,YAAL,CAAkB,QAAlB,IAA8B;AAAC,QAAA,YAAY,EAAZ,YAAD;AAAe,QAAA,OAAO,EAAP;AAAf,OAA9B,CADsC,CAGtC;AACA;;AACA,UAAI,KAAK,QAAL,CAAc,QAAd,KAA2B,IAA/B,EAAqC;AACnC,YAAM,SAAS,GAAG,KAAK,QAAL,CAAc,QAAd,CAAlB;AACA,QAAA,OAAO,CAAC,IAAR,6CACyC,QADzC,eACsD,SADtD;AAEA,aAAK,GAAL,CAAS,QAAT,EAAmB,SAAnB;AACD;AACF;AArCH;AAAA;AAAA;AAAA,+EAuCE,iBAAe,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA,sBACM,QAAQ,IAAI,KAAK,KADvB;AAAA;AAAA;AAAA;;AAAA,iDAEW,KAAK,KAAL,CAAW,QAAX,CAFX;;AAAA;AAAA;AAAA,uBAK+B,KAAK,YAAL,CAAkB,QAAlB,CAL/B;;AAAA;AAKE,qBAAK,KAAL,CAAW,QAAX,CALF;AAAA,iDAMS,KAAK,KAAL,CAAW,QAAX,CANT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAvCF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,WAgDE,aAAI,QAAJ,EAAoB;AAClB,UAAI,QAAQ,IAAI,KAAK,KAArB,EAA4B;AAC1B,eAAO,KAAK,KAAL,CAAW,QAAX,CAAP;AACD;;AAED,UAAM,SAAS,GAAG,KAAK,YAAL,CAAkB,QAAlB,CAAlB;;AACA,UAAI,SAAS,CAAC,SAAD,CAAb,EAA0B;AACxB,cAAM,IAAI,KAAJ,CACF,eAAQ,QAAR,4EADE,CAAN;AAGD;;AAED,WAAK,KAAL,CAAW,QAAX,IAAuB,SAAvB;AAEA,aAAO,KAAK,KAAL,CAAW,QAAX,CAAP;AACD;AA/DH;AAAA;AAAA,WAiEE,mBAAU,QAAV,EAA0B;AACxB,aAAO,KAAK,GAAL,CAAS,QAAT,CAAP;AACD;AAnEH;AAAA;AAAA,WAqEE,iBAAQ,QAAR,EAAwB;AACtB,aAAO,KAAK,GAAL,CAAS,QAAT,CAAP;AACD;AAvEH;AAAA;AAAA,WAyEE,oBAAQ;AACN,aAAO,KAAK,KAAZ;AACD,KA3EH,CA4EE;;AA5EF;AAAA;AAAA,SA6EE,eAAY;AACV,aAAO,KAAK,KAAZ;AACD;AA/EH;AAAA;AAAA,WAiFE,aAAI,QAAJ,EAAsB,KAAtB,EAAsC;AACpC,UAAI,KAAK,YAAL,CAAkB,QAAlB,KAA+B,IAAnC,EAAyC;AACvC,cAAM,IAAI,KAAJ,2BACiB,QADjB,qCAAN;AAED;;AACD,WAAK,KAAL,CAAW,QAAX,IAAuB,KAAvB;;AACA,UAAI,KAAK,YAAL,CAAkB,QAAlB,EAA4B,OAA5B,IAAuC,IAA3C,EAAiD;AAC/C,aAAK,YAAL,CAAkB,QAAlB,EAA4B,OAA5B,CAAoC,KAApC;AACD;AACF;AA1FH;AAAA;AAAA,WA4FU,sBAAa,QAAb,EAA6B;AACnC,UAAI,KAAK,YAAL,CAAkB,QAAlB,KAA+B,IAAnC,EAAyC;AACvC,cAAM,IAAI,KAAJ,iCACuB,QADvB,sCAAN;AAED;;AACD,aAAO,KAAK,YAAL,CAAkB,QAAlB,EAA4B,YAA5B,EAAP;AACD;AAlGH;AAAA;AAAA,WAoGE,kBAAS,KAAT,EAAqB;AACnB,WAAK,KAAL,GAAa,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,KAAlB,CAAb;AACD;AAtGH;AAAA;AAAA,WAwGE,iBAAK;AACH,WAAK,KAAL,GAAa,EAAb;AACA,WAAK,QAAL,GAAgB,EAAhB;AACA,WAAK,gBAAL;AACD;AA5GH;AAAA;AAAA,WA8GU,4BAAgB;AAAA;;AACtB,UAAI,OAAO,KAAK,MAAZ,KAAuB,WAAvB,IACA,OAAO,KAAK,MAAL,CAAY,QAAnB,KAAgC,WADhC,IAEA,OAAO,KAAK,MAAL,CAAY,QAAZ,CAAqB,MAA5B,KAAuC,WAF3C,EAEwD;AACtD;AACD;;AAED,UAAM,SAAS,GAAG,cAAc,CAAC,KAAK,MAAL,CAAY,QAAZ,CAAqB,MAAtB,CAAhC;;AACA,UAAI,yBAAyB,IAAI,SAAjC,EAA4C;AAC1C,YAAM,SAAS,GAAG,SAAS,CAAC,yBAAD,CAAT,CAAqC,KAArC,CAA2C,GAA3C,CAAlB;AACA,QAAA,SAAS,CAAC,OAAV,CAAkB,UAAA,QAAQ,EAAG;AAAA,gCACN,QAAQ,CAAC,KAAT,CAAe,GAAf,CADM;AAAA;AAAA,cACpB,GADoB;AAAA,cACf,KADe;;AAE3B,UAAA,KAAI,CAAC,QAAL,CAAc,GAAd,IAAqB,UAAU,CAAC,GAAD,EAAM,KAAN,CAA/B;AACD,SAHD;AAID;AACF;AA7HH;;AAAA;AAAA;AAgIA,OAAM,SAAU,cAAV,CAAyB,WAAzB,EAA4C;AAChD,MAAM,MAAM,GAAG,EAAf;AACA,EAAA,WAAW,CAAC,OAAZ,CAAoB,6BAApB,EAAmD,UAAC,CAAD,EAAY;AAAA,sCAAL,CAAK;AAAL,MAAA,CAAK;AAAA;;AAC7D,IAAA,WAAW,CAAC,MAAD,EAAS,CAAC,CAAC,CAAD,CAAV,EAAe,CAAC,CAAC,CAAD,CAAhB,CAAX;AACA,WAAO,CAAC,CAAC,IAAF,CAAO,GAAP,CAAP;AACD,GAHD;AAIA,SAAO,MAAP;AACD;;AAED,SAAS,WAAT,CACI,MADJ,EACqC,IADrC,EACmD,KADnD,EACiE;AAC/D,EAAA,MAAM,CAAC,kBAAkB,CAAC,IAAD,CAAnB,CAAN,GAAmC,kBAAkB,CAAC,KAAK,IAAI,EAAV,CAArD;AACD;;AAED,SAAS,UAAT,CAAoB,QAApB,EAAsC,KAAtC,EAAmD;AACjD,EAAA,KAAK,GAAG,KAAK,CAAC,WAAN,EAAR;;AACA,MAAI,KAAK,KAAK,MAAV,IAAoB,KAAK,KAAK,OAAlC,EAA2C;AACzC,WAAO,KAAK,KAAK,MAAjB;AACD,GAFD,MAEO,IAAI,UAAG,CAAE,KAAL,MAAiB,KAArB,EAA4B;AACjC,WAAO,CAAC,KAAR;AACD;;AACD,QAAM,IAAI,KAAJ,4CACkC,KADlC,uBACoD,QADpD,OAAN;AAED;AAED;;;;;;;AAOG;;;AACH,OAAM,SAAU,GAAV,GAAa;AACjB,SAAO,GAAP;AACD;AAED,OAAO,IAAI,GAAG,GAAgB,IAAvB;AACP,OAAM,SAAU,oBAAV,CAA+B,WAA/B,EAAuD;AAC3D,EAAA,GAAG,GAAG,WAAN;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { isPromise } from './util_base';\n// Expects flags from URL in the format ?tfjsflags=FLAG1:1,FLAG2:true.\nconst TENSORFLOWJS_FLAGS_PREFIX = 'tfjsflags';\n/**\n * The environment contains evaluated flags as well as the registered platform.\n * This is always used as a global singleton and can be retrieved with\n * `tf.env()`.\n *\n * @doc {heading: 'Environment'}\n */\nexport class Environment {\n    // tslint:disable-next-line: no-any\n    constructor(global) {\n        this.global = global;\n        this.flags = {};\n        this.flagRegistry = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    setPlatform(platformName, platform) {\n        if (this.platform != null) {\n            console.warn(`Platform ${this.platformName} has already been set. ` +\n                `Overwriting the platform with ${platform}.`);\n        }\n        this.platformName = platformName;\n        this.platform = platform;\n    }\n    registerFlag(flagName, evaluationFn, setHook) {\n        this.flagRegistry[flagName] = { evaluationFn, setHook };\n        // Override the flag value from the URL. This has to happen here because the\n        // environment is initialized before flags get registered.\n        if (this.urlFlags[flagName] != null) {\n            const flagValue = this.urlFlags[flagName];\n            console.warn(`Setting feature override from URL ${flagName}: ${flagValue}.`);\n            this.set(flagName, flagValue);\n        }\n    }\n    async getAsync(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        this.flags[flagName] = await this.evaluateFlag(flagName);\n        return this.flags[flagName];\n    }\n    get(flagName) {\n        if (flagName in this.flags) {\n            return this.flags[flagName];\n        }\n        const flagValue = this.evaluateFlag(flagName);\n        if (isPromise(flagValue)) {\n            throw new Error(`Flag ${flagName} cannot be synchronously evaluated. ` +\n                `Please use getAsync() instead.`);\n        }\n        this.flags[flagName] = flagValue;\n        return this.flags[flagName];\n    }\n    getNumber(flagName) {\n        return this.get(flagName);\n    }\n    getBool(flagName) {\n        return this.get(flagName);\n    }\n    getFlags() {\n        return this.flags;\n    }\n    // For backwards compatibility.\n    get features() {\n        return this.flags;\n    }\n    set(flagName, value) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot set flag ${flagName} as it has not been registered.`);\n        }\n        this.flags[flagName] = value;\n        if (this.flagRegistry[flagName].setHook != null) {\n            this.flagRegistry[flagName].setHook(value);\n        }\n    }\n    evaluateFlag(flagName) {\n        if (this.flagRegistry[flagName] == null) {\n            throw new Error(`Cannot evaluate flag '${flagName}': no evaluation function found.`);\n        }\n        return this.flagRegistry[flagName].evaluationFn();\n    }\n    setFlags(flags) {\n        this.flags = Object.assign({}, flags);\n    }\n    reset() {\n        this.flags = {};\n        this.urlFlags = {};\n        this.populateURLFlags();\n    }\n    populateURLFlags() {\n        if (typeof this.global === 'undefined' ||\n            typeof this.global.location === 'undefined' ||\n            typeof this.global.location.search === 'undefined') {\n            return;\n        }\n        const urlParams = getQueryParams(this.global.location.search);\n        if (TENSORFLOWJS_FLAGS_PREFIX in urlParams) {\n            const keyValues = urlParams[TENSORFLOWJS_FLAGS_PREFIX].split(',');\n            keyValues.forEach(keyValue => {\n                const [key, value] = keyValue.split(':');\n                this.urlFlags[key] = parseValue(key, value);\n            });\n        }\n    }\n}\nexport function getQueryParams(queryString) {\n    const params = {};\n    queryString.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g, (s, ...t) => {\n        decodeParam(params, t[0], t[1]);\n        return t.join('=');\n    });\n    return params;\n}\nfunction decodeParam(params, name, value) {\n    params[decodeURIComponent(name)] = decodeURIComponent(value || '');\n}\nfunction parseValue(flagName, value) {\n    value = value.toLowerCase();\n    if (value === 'true' || value === 'false') {\n        return value === 'true';\n    }\n    else if (`${+value}` === value) {\n        return +value;\n    }\n    throw new Error(`Could not parse value flag value ${value} for flag ${flagName}.`);\n}\n/**\n * Returns the current environment (a global singleton).\n *\n * The environment object contains the evaluated feature values as well as the\n * active platform.\n *\n * @doc {heading: 'Environment'}\n */\nexport function env() {\n    return ENV;\n}\nexport let ENV = null;\nexport function setEnvironmentGlobal(environment) {\n    ENV = environment;\n}\n//# sourceMappingURL=environment.js.map"]},"metadata":{},"sourceType":"module"}