{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n  var inputs = args.inputs,\n      backend = args.backend;\n  var x = inputs.x;\n\n  if (x.dtype === 'string') {\n    throw new Error('zerosLike is not supported for string tensors');\n  } else if (x.dtype === 'complex64') {\n    var realPart = real({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var r = zerosLike({\n      inputs: {\n        x: realPart\n      },\n      backend: backend\n    });\n    var imagPart = imag({\n      inputs: {\n        input: x\n      },\n      backend: backend\n    });\n    var i = zerosLike({\n      inputs: {\n        x: imagPart\n      },\n      backend: backend\n    });\n    var result = complex({\n      inputs: {\n        real: r,\n        imag: i\n      },\n      backend: backend\n    });\n    backend.disposeIntermediateTensorInfo(realPart);\n    backend.disposeIntermediateTensorInfo(r);\n    backend.disposeIntermediateTensorInfo(imagPart);\n    backend.disposeIntermediateTensorInfo(i);\n    return result;\n  } else {\n    return fill({\n      backend: backend,\n      attrs: {\n        shape: x.shape,\n        value: 0,\n        dtype: x.dtype\n      }\n    });\n  }\n}\nexport var zerosLikeConfig = {\n  kernelName: ZerosLike,\n  backendName: 'cpu',\n  kernelFunc: zerosLike\n};","map":{"version":3,"sources":["../../src/kernels/ZerosLike.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAA8C,SAA9C,QAA+E,uBAA/E;AAIA,SAAQ,OAAR,QAAsB,WAAtB;AACA,SAAQ,IAAR,QAAmB,QAAnB;AACA,SAAQ,IAAR,QAAmB,QAAnB;AACA,SAAQ,IAAR,QAAmB,QAAnB;AAEA,OAAM,SAAU,SAAV,CACF,IADE,EACsD;AAAA,MACnD,MADmD,GAChC,IADgC,CACnD,MADmD;AAAA,MAC3C,OAD2C,GAChC,IADgC,CAC3C,OAD2C;AAAA,MAEnD,CAFmD,GAE9C,MAF8C,CAEnD,CAFmD;;AAI1D,MAAI,CAAC,CAAC,KAAF,KAAY,QAAhB,EAA0B;AACxB,UAAM,IAAI,KAAJ,CAAU,+CAAV,CAAN;AACD,GAFD,MAEO,IAAI,CAAC,CAAC,KAAF,KAAY,WAAhB,EAA6B;AAClC,QAAM,QAAQ,GAAG,IAAI,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,KAAK,EAAE;AAAR,OAAT;AAAqB,MAAA,OAAO,EAAP;AAArB,KAAD,CAArB;AACA,QAAM,CAAC,GAAG,SAAS,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,CAAC,EAAE;AAAJ,OAAT;AAAwB,MAAA,OAAO,EAAP;AAAxB,KAAD,CAAnB;AACA,QAAM,QAAQ,GAAG,IAAI,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,KAAK,EAAE;AAAR,OAAT;AAAqB,MAAA,OAAO,EAAP;AAArB,KAAD,CAArB;AACA,QAAM,CAAC,GAAG,SAAS,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,CAAC,EAAE;AAAJ,OAAT;AAAwB,MAAA,OAAO,EAAP;AAAxB,KAAD,CAAnB;AAEA,QAAM,MAAM,GAAG,OAAO,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,IAAI,EAAE,CAAP;AAAU,QAAA,IAAI,EAAE;AAAhB,OAAT;AAA6B,MAAA,OAAO,EAAP;AAA7B,KAAD,CAAtB;AAEA,IAAA,OAAO,CAAC,6BAAR,CAAsC,QAAtC;AACA,IAAA,OAAO,CAAC,6BAAR,CAAsC,CAAtC;AACA,IAAA,OAAO,CAAC,6BAAR,CAAsC,QAAtC;AACA,IAAA,OAAO,CAAC,6BAAR,CAAsC,CAAtC;AAEA,WAAO,MAAP;AACD,GAdM,MAcA;AACL,WAAO,IAAI,CAAC;AAAC,MAAA,OAAO,EAAP,OAAD;AAAU,MAAA,KAAK,EAAE;AAAC,QAAA,KAAK,EAAE,CAAC,CAAC,KAAV;AAAiB,QAAA,KAAK,EAAE,CAAxB;AAA2B,QAAA,KAAK,EAAE,CAAC,CAAC;AAApC;AAAjB,KAAD,CAAX;AACD;AACF;AAED,OAAO,IAAM,eAAe,GAAiB;AAC3C,EAAA,UAAU,EAAE,SAD+B;AAE3C,EAAA,WAAW,EAAE,KAF8B;AAG3C,EAAA,UAAU,EAAE;AAH+B,CAAtC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ZerosLike } from '@tensorflow/tfjs-core';\nimport { complex } from './Complex';\nimport { fill } from './Fill';\nimport { imag } from './Imag';\nimport { real } from './Real';\nexport function zerosLike(args) {\n    const { inputs, backend } = args;\n    const { x } = inputs;\n    if (x.dtype === 'string') {\n        throw new Error('zerosLike is not supported for string tensors');\n    }\n    else if (x.dtype === 'complex64') {\n        const realPart = real({ inputs: { input: x }, backend });\n        const r = zerosLike({ inputs: { x: realPart }, backend });\n        const imagPart = imag({ inputs: { input: x }, backend });\n        const i = zerosLike({ inputs: { x: imagPart }, backend });\n        const result = complex({ inputs: { real: r, imag: i }, backend });\n        backend.disposeIntermediateTensorInfo(realPart);\n        backend.disposeIntermediateTensorInfo(r);\n        backend.disposeIntermediateTensorInfo(imagPart);\n        backend.disposeIntermediateTensorInfo(i);\n        return result;\n    }\n    else {\n        return fill({ backend, attrs: { shape: x.shape, value: 0, dtype: x.dtype } });\n    }\n}\nexport const zerosLikeConfig = {\n    kernelName: ZerosLike,\n    backendName: 'cpu',\n    kernelFunc: zerosLike\n};\n//# sourceMappingURL=ZerosLike.js.map"]},"metadata":{},"sourceType":"module"}