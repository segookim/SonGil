{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    axis\n  } = attrs;\n\n  if (inputs.length === 1) {\n    return expandDims({\n      inputs: {\n        input: inputs[0]\n      },\n      backend,\n      attrs: {\n        dim: axis\n      }\n    });\n  }\n\n  const shape = inputs[0].shape;\n  const dtype = inputs[0].dtype;\n  inputs.forEach(t => {\n    util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n    util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n  });\n  const intermediateTensorInfos = [];\n  const expandedTensors = inputs.map(t => {\n    const expandedT = expandDims({\n      inputs: {\n        input: t\n      },\n      backend,\n      attrs: {\n        dim: axis\n      }\n    });\n    intermediateTensorInfos.push(expandedT);\n    return expandedT;\n  });\n  const result = concat({\n    inputs: expandedTensors,\n    backend,\n    attrs: {\n      axis\n    }\n  });\n  intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n  return result;\n}\nexport const packConfig = {\n  kernelName: Pack,\n  backendName: 'webgl',\n  kernelFunc: pack\n};","map":{"version":3,"sources":["../../src/kernels/Pack.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAkC,IAAlC,EAA2E,IAA3E,QAAsF,uBAAtF;AAGA,SAAQ,MAAR,QAAqB,UAArB;AACA,SAAQ,UAAR,QAAyB,cAAzB;AAEA,OAAM,SAAU,IAAV,CACF,IADE,EACqE;AAEzE,QAAM;AAAC,IAAA,MAAD;AAAS,IAAA,OAAT;AAAkB,IAAA;AAAlB,MAA2B,IAAjC;AACA,QAAM;AAAC,IAAA;AAAD,MAAS,KAAf;;AAEA,MAAI,MAAM,CAAC,MAAP,KAAkB,CAAtB,EAAyB;AACvB,WAAO,UAAU,CACb;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,KAAK,EAAE,MAAM,CAAC,CAAD;AAAd,OAAT;AAA6B,MAAA,OAA7B;AAAsC,MAAA,KAAK,EAAE;AAAC,QAAA,GAAG,EAAE;AAAN;AAA7C,KADa,CAAjB;AAED;;AAED,QAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAAN,CAAU,KAAxB;AACA,QAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAAN,CAAU,KAAxB;AAEA,EAAA,MAAM,CAAC,OAAP,CAAe,CAAC,IAAG;AACjB,IAAA,IAAI,CAAC,iBAAL,CACI,KADJ,EACW,CAAC,CAAC,KADb,EAEI,uDAFJ;AAGA,IAAA,IAAI,CAAC,MAAL,CACI,KAAK,KAAK,CAAC,CAAC,KADhB,EAEI,MAAM,uDAFV;AAGD,GAPD;AASA,QAAM,uBAAuB,GAAiB,EAA9C;AACA,QAAM,eAAe,GAAG,MAAM,CAAC,GAAP,CAAW,CAAC,IAAG;AACrC,UAAM,SAAS,GACX,UAAU,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,KAAK,EAAE;AAAR,OAAT;AAAqB,MAAA,OAArB;AAA8B,MAAA,KAAK,EAAE;AAAC,QAAA,GAAG,EAAE;AAAN;AAArC,KAAD,CADd;AAEA,IAAA,uBAAuB,CAAC,IAAxB,CAA6B,SAA7B;AACA,WAAO,SAAP;AACD,GALuB,CAAxB;AAOA,QAAM,MAAM,GAAG,MAAM,CAAC;AAAC,IAAA,MAAM,EAAE,eAAT;AAA0B,IAAA,OAA1B;AAAmC,IAAA,KAAK,EAAE;AAAC,MAAA;AAAD;AAA1C,GAAD,CAArB;AAEA,EAAA,uBAAuB,CAAC,OAAxB,CACI,CAAC,IAAI,OAAO,CAAC,6BAAR,CAAsC,CAAtC,CADT;AAGA,SAAO,MAAP;AACD;AAED,OAAO,MAAM,UAAU,GAAiB;AACtC,EAAA,UAAU,EAAE,IAD0B;AAEtC,EAAA,WAAW,EAAE,OAFyB;AAGtC,EAAA,UAAU,EAAE;AAH0B,CAAjC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Pack, util } from '@tensorflow/tfjs-core';\nimport { concat } from './Concat';\nimport { expandDims } from './ExpandDims';\nexport function pack(args) {\n    const { inputs, backend, attrs } = args;\n    const { axis } = attrs;\n    if (inputs.length === 1) {\n        return expandDims({ inputs: { input: inputs[0] }, backend, attrs: { dim: axis } });\n    }\n    const shape = inputs[0].shape;\n    const dtype = inputs[0].dtype;\n    inputs.forEach(t => {\n        util.assertShapesMatch(shape, t.shape, 'All tensors passed to stack must have matching shapes');\n        util.assert(dtype === t.dtype, () => 'All tensors passed to stack must have matching dtypes');\n    });\n    const intermediateTensorInfos = [];\n    const expandedTensors = inputs.map(t => {\n        const expandedT = expandDims({ inputs: { input: t }, backend, attrs: { dim: axis } });\n        intermediateTensorInfos.push(expandedT);\n        return expandedT;\n    });\n    const result = concat({ inputs: expandedTensors, backend, attrs: { axis } });\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return result;\n}\nexport const packConfig = {\n    kernelName: Pack,\n    backendName: 'webgl',\n    kernelFunc: pack\n};\n//# sourceMappingURL=Pack.js.map"]},"metadata":{},"sourceType":"module"}