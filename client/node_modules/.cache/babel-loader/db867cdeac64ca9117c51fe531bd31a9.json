{"ast":null,"code":"var _jsxFileName = \"/Users/kimkiwoong/SonGil/client/src/songil/RealTimeObjectDetection.js\",\n    _s = $RefreshSig$();\n\n// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport '../bootstrap.min.css'; // import \"./App.css\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\n\nimport { drawRect } from \"./utilities\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RealTimeObjectDetection() {\n  _s();\n\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null); // Main function\n\n  const runCoco = async () => {\n    // 3. TODO - Load network \n    const net = await tf.loadGraphModel('https://tensorflow-realtimemodel-hskw.s3.jp-tok.cloud-object-storage.appdomain.cloud/model.json'); //  Loop and detect hands\n\n    setInterval(() => {\n      detect(net);\n    }, 16.7);\n  };\n\n  const detect = async net => {\n    // Check data is available\n    if (typeof webcamRef.current !== \"undefined\" && webcamRef.current !== null && webcamRef.current.video.readyState === 4) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight; // Set video width\n\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight; // Set canvas height and width\n\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight; // 4. TODO - Make Detections\n\n      const img = tf.browser.fromPixels(video);\n      const resized = tf.image.resizeBilinear(img, [640, 480]);\n      const casted = resized.cast('int32');\n      const expanded = casted.expandDims(0);\n      const obj = await net.executeAsync(expanded);\n      console.log(obj);\n      const boxes = await obj[1].array();\n      const classes = await obj[2].array();\n      const scores = await obj[4].array(); // Draw mesh\n\n      const ctx = canvasRef.current.getContext(\"2d\"); // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)  \n\n      requestAnimationFrame(() => {\n        drawRect(boxes[0], classes[0], scores[0], 0.8, videoWidth, videoHeight, ctx);\n      });\n      tf.dispose(img);\n      tf.dispose(resized);\n      tf.dispose(casted);\n      tf.dispose(expanded);\n      tf.dispose(obj);\n    }\n  };\n\n  useEffect(() => {\n    runCoco();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(Webcam, {\n        ref: webcamRef,\n        muted: true,\n        style: {\n          position: \"absolute\",\n          marginTop: \"10%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 9,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        style: {\n          position: \"absolute\",\n          marginTop: \"10%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          left: 0,\n          right: 0,\n          textAlign: \"center\",\n          zindex: 8,\n          width: 640,\n          height: 480\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RealTimeObjectDetection, \"v4cpjlVQ0JCDZnPWaD3Z9DHNiTM=\");\n\n_c = RealTimeObjectDetection;\nexport default RealTimeObjectDetection;\n\nvar _c;\n\n$RefreshReg$(_c, \"RealTimeObjectDetection\");","map":{"version":3,"sources":["/Users/kimkiwoong/SonGil/client/src/songil/RealTimeObjectDetection.js"],"names":["React","useRef","useState","useEffect","tf","Webcam","drawRect","RealTimeObjectDetection","webcamRef","canvasRef","runCoco","net","loadGraphModel","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","img","browser","fromPixels","resized","image","resizeBilinear","casted","cast","expanded","expandDims","obj","executeAsync","console","log","boxes","array","classes","scores","ctx","getContext","requestAnimationFrame","dispose","position","marginTop","marginLeft","marginRight","left","right","textAlign","zindex"],"mappings":"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","sourcesContent":["// Import dependencies\nimport React, { useRef, useState, useEffect } from \"react\";\nimport * as tf from \"@tensorflow/tfjs\";\nimport Webcam from \"react-webcam\";\nimport '../bootstrap.min.css';\n// import \"./App.css\";\n// 2. TODO - Import drawing utility here\n// e.g. import { drawRect } from \"./utilities\";\nimport {drawRect} from \"./utilities\";\n\n\nfunction RealTimeObjectDetection() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // Main function\n  const runCoco = async () => {\n    // 3. TODO - Load network \n\n    const net = await tf.loadGraphModel('https://tensorflow-realtimemodel-hskw.s3.jp-tok.cloud-object-storage.appdomain.cloud/model.json')\n\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 16.7);\n  };\n\n  \n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // 4. TODO - Make Detections\n      const img = tf.browser.fromPixels(video)\n      const resized = tf.image.resizeBilinear(img, [640, 480])\n      const casted = resized.cast('int32')\n      const expanded = casted.expandDims(0)\n      const obj = await net.executeAsync(expanded)\n      console.log(obj)\n\n      const boxes = await obj[1].array()\n      const classes = await obj[2].array()\n      const scores = await obj[4].array()\n\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n\n      // 5. TODO - Update drawing utility\n      // drawSomething(obj, ctx)  \n\n      requestAnimationFrame(()=> {drawRect(boxes[0], classes[0], scores[0], 0.8, videoWidth, videoHeight, ctx)})\n\n      tf.dispose(img)\n      tf.dispose(resized)\n      tf.dispose(casted)\n      tf.dispose(expanded)\n      tf.dispose(obj)\n\n    }\n  };\n\n  useEffect(()=>{runCoco()},[]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          muted={true} \n          style={{\n            position: \"absolute\",\n            marginTop: \"10%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginTop: \"10%\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 8,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default RealTimeObjectDetection;\n"]},"metadata":{},"sourceType":"module"}