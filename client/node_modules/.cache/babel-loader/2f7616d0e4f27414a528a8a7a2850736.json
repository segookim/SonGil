{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { clipByValue } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.clipByValue = function (min, max) {\n  this.throwIfDisposed();\n  return clipByValue(this, min, max);\n};","map":{"version":3,"sources":["../../../src/public/chained_ops/clip_by_value.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH;AACA,SAAQ,WAAR,QAA0B,eAA1B;AACA,SAAQ,oBAAR,QAA2C,cAA3C;;AASA,oBAAoB,GAAG,SAAvB,CAAiC,WAAjC,GAA+C,UAC3C,GAD2C,EAC9B,GAD8B,EACnB;AAC1B,OAAK,eAAL;AACA,SAAO,WAAW,CAAC,IAAD,EAAO,GAAP,EAAY,GAAZ,CAAlB;AACD,CAJD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\n// TODO update import path once op is modularized.\nimport { clipByValue } from '../../ops/ops';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.clipByValue = function (min, max) {\n    this.throwIfDisposed();\n    return clipByValue(this, min, max);\n};\n//# sourceMappingURL=clip_by_value.js.map"]},"metadata":{},"sourceType":"module"}