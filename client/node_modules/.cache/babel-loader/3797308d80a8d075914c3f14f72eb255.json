{"ast":null,"code":"/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ClipProgram {\n  constructor(aShape) {\n    this.variableNames = ['A'];\n    this.outputShape = aShape;\n    this.userCode = `\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    `;\n  }\n\n  getCustomSetupFunc(min, max) {\n    return (gpgpu, webGLProgram) => {\n      if (this.minLoc == null) {\n        this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n        this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n      }\n\n      gpgpu.gl.uniform1f(this.minLoc, min);\n      gpgpu.gl.uniform1f(this.maxLoc, max);\n    };\n  }\n\n}","map":{"version":3,"sources":["../src/clip_gpu.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAKH,OAAM,MAAO,WAAP,CAAkB;AAStB,EAAA,WAAA,CAAY,MAAZ,EAA4B;AAR5B,SAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AASE,SAAK,WAAL,GAAmB,MAAnB;AACA,SAAK,QAAL,GAAgB;;;;;;;;;;;;;AAaf,KAbD;AAcD;;AAED,EAAA,kBAAkB,CAAC,GAAD,EAAc,GAAd,EAAyB;AACzC,WAAO,CAAC,KAAD,EAAsB,YAAtB,KAAoD;AACzD,UAAI,KAAK,MAAL,IAAe,IAAnB,EAAyB;AACvB,aAAK,MAAL,GAAc,KAAK,CAAC,yBAAN,CAAgC,YAAhC,EAA8C,QAA9C,CAAd;AACA,aAAK,MAAL,GAAc,KAAK,CAAC,yBAAN,CAAgC,YAAhC,EAA8C,QAA9C,CAAd;AACD;;AACD,MAAA,KAAK,CAAC,EAAN,CAAS,SAAT,CAAmB,KAAK,MAAxB,EAAgC,GAAhC;AACA,MAAA,KAAK,CAAC,EAAN,CAAS,SAAT,CAAmB,KAAK,MAAxB,EAAgC,GAAhC;AACD,KAPD;AAQD;;AApCqB","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ClipProgram {\n    constructor(aShape) {\n        this.variableNames = ['A'];\n        this.outputShape = aShape;\n        this.userCode = `\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    `;\n    }\n    getCustomSetupFunc(min, max) {\n        return (gpgpu, webGLProgram) => {\n            if (this.minLoc == null) {\n                this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n                this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n            }\n            gpgpu.gl.uniform1f(this.minLoc, min);\n            gpgpu.gl.uniform1f(this.maxLoc, max);\n        };\n    }\n}\n//# sourceMappingURL=clip_gpu.js.map"]},"metadata":{},"sourceType":"module"}