{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { applyActivation } from '../utils/fused_utils';\nimport { add } from './Add';\nimport { batchMatMul } from './BatchMatMul';\nexport function _fusedMatMul(args) {\n  const {\n    inputs,\n    backend,\n    attrs\n  } = args;\n  const {\n    a,\n    b,\n    bias,\n    preluActivationWeights\n  } = inputs;\n  const {\n    transposeA,\n    transposeB,\n    activation,\n    leakyreluAlpha\n  } = attrs;\n  let current;\n  let addRes;\n  let activationRes;\n  const intermediates = [];\n  const matMulRes = batchMatMul({\n    inputs: {\n      a,\n      b\n    },\n    attrs: {\n      transposeA,\n      transposeB\n    },\n    backend\n  });\n  current = matMulRes;\n\n  if (bias) {\n    addRes = add({\n      inputs: {\n        a: current,\n        b: bias\n      },\n      backend\n    });\n    intermediates.push(current);\n    current = addRes;\n  }\n\n  if (activation) {\n    activationRes = applyActivation(backend, current, activation, preluActivationWeights, leakyreluAlpha);\n    intermediates.push(current);\n    current = activationRes;\n  }\n\n  for (const i of intermediates) {\n    backend.disposeIntermediateTensorInfo(i);\n  }\n\n  return current;\n}\nexport const _fusedMatMulConfig = {\n  kernelName: _FusedMatMul,\n  backendName: 'cpu',\n  kernelFunc: _fusedMatMul\n};","map":{"version":3,"sources":["../../src/kernels/_FusedMatMul.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,QAAwG,uBAAxG;AAGA,SAAQ,eAAR,QAA8B,sBAA9B;AAEA,SAAQ,GAAR,QAAkB,OAAlB;AACA,SAAQ,WAAR,QAA0B,eAA1B;AAEA,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAIL;AACC,QAAM;AAAC,IAAA,MAAD;AAAS,IAAA,OAAT;AAAkB,IAAA;AAAlB,MAA2B,IAAjC;AACA,QAAM;AAAC,IAAA,CAAD;AAAI,IAAA,CAAJ;AAAO,IAAA,IAAP;AAAa,IAAA;AAAb,MAAuC,MAA7C;AACA,QAAM;AAAC,IAAA,UAAD;AAAa,IAAA,UAAb;AAAyB,IAAA,UAAzB;AAAqC,IAAA;AAArC,MAAuD,KAA7D;AAEA,MAAI,OAAJ;AACA,MAAI,MAAJ;AACA,MAAI,aAAJ;AAEA,QAAM,aAAa,GAAiB,EAApC;AAEA,QAAM,SAAS,GACX,WAAW,CAAC;AAAC,IAAA,MAAM,EAAE;AAAC,MAAA,CAAD;AAAI,MAAA;AAAJ,KAAT;AAAiB,IAAA,KAAK,EAAE;AAAC,MAAA,UAAD;AAAa,MAAA;AAAb,KAAxB;AAAkD,IAAA;AAAlD,GAAD,CADf;AAEA,EAAA,OAAO,GAAG,SAAV;;AAEA,MAAI,IAAJ,EAAU;AACR,IAAA,MAAM,GAAG,GAAG,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,CAAC,EAAE,OAAJ;AAAa,QAAA,CAAC,EAAE;AAAhB,OAAT;AAAgC,MAAA;AAAhC,KAAD,CAAZ;AACA,IAAA,aAAa,CAAC,IAAd,CAAmB,OAAnB;AACA,IAAA,OAAO,GAAG,MAAV;AACD;;AACD,MAAI,UAAJ,EAAgB;AACd,IAAA,aAAa,GAAG,eAAe,CAC3B,OAD2B,EAClB,OADkB,EACT,UADS,EACG,sBADH,EAC2B,cAD3B,CAA/B;AAEA,IAAA,aAAa,CAAC,IAAd,CAAmB,OAAnB;AACA,IAAA,OAAO,GAAG,aAAV;AACD;;AAED,OAAK,MAAM,CAAX,IAAgB,aAAhB,EAA+B;AAC7B,IAAA,OAAO,CAAC,6BAAR,CAAsC,CAAtC;AACD;;AAED,SAAO,OAAP;AACD;AAED,OAAO,MAAM,kBAAkB,GAAiB;AAC9C,EAAA,UAAU,EAAE,YADkC;AAE9C,EAAA,WAAW,EAAE,KAFiC;AAG9C,EAAA,UAAU,EAAE;AAHkC,CAAzC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an AS IS BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { _FusedMatMul } from '@tensorflow/tfjs-core';\nimport { applyActivation } from '../utils/fused_utils';\nimport { add } from './Add';\nimport { batchMatMul } from './BatchMatMul';\nexport function _fusedMatMul(args) {\n    const { inputs, backend, attrs } = args;\n    const { a, b, bias, preluActivationWeights } = inputs;\n    const { transposeA, transposeB, activation, leakyreluAlpha } = attrs;\n    let current;\n    let addRes;\n    let activationRes;\n    const intermediates = [];\n    const matMulRes = batchMatMul({ inputs: { a, b }, attrs: { transposeA, transposeB }, backend });\n    current = matMulRes;\n    if (bias) {\n        addRes = add({ inputs: { a: current, b: bias }, backend });\n        intermediates.push(current);\n        current = addRes;\n    }\n    if (activation) {\n        activationRes = applyActivation(backend, current, activation, preluActivationWeights, leakyreluAlpha);\n        intermediates.push(current);\n        current = activationRes;\n    }\n    for (const i of intermediates) {\n        backend.disposeIntermediateTensorInfo(i);\n    }\n    return current;\n}\nexport const _fusedMatMulConfig = {\n    kernelName: _FusedMatMul,\n    backendName: 'cpu',\n    kernelFunc: _fusedMatMul,\n};\n//# sourceMappingURL=_FusedMatMul.js.map"]},"metadata":{},"sourceType":"module"}