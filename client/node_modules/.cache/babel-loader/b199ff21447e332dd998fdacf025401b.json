{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [{\n  'tfOpName': 'ConcatV2',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'end': -1,\n    'name': 'tensors',\n    'type': 'tensors'\n  }, {\n    'start': -1,\n    'name': 'axis',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'N',\n    'name': 'n',\n    'type': 'number',\n    'defaultValue': 2\n  }]\n}, {\n  'tfOpName': 'Concat',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 1,\n    'end': 0,\n    'name': 'tensors',\n    'type': 'tensors'\n  }, {\n    'start': 0,\n    'name': 'axis',\n    'type': 'number'\n  }],\n  'attrs': [{\n    'tfName': 'N',\n    'name': 'n',\n    'type': 'number',\n    'defaultValue': 2\n  }]\n}, {\n  'tfOpName': 'GatherV2',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }],\n  'attrs': [{\n    'tfName': 'batch_dims',\n    'name': 'batchDims',\n    'type': 'number',\n    'defaultValue': 0\n  }]\n}, {\n  'tfOpName': 'Gather',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'validate_indices',\n    'name': 'validateIndices',\n    'type': 'bool',\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Reverse',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'dims',\n    'type': 'bool[]'\n  }]\n}, {\n  'tfOpName': 'ReverseV2',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'axis',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'Slice',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'begin',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'size',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'StridedSlice',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'begin',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'end',\n    'type': 'number[]'\n  }, {\n    'start': 3,\n    'name': 'strides',\n    'type': 'number[]'\n  }],\n  'attrs': [{\n    'tfName': 'begin_mask',\n    'name': 'beginMask',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'end_mask',\n    'name': 'endMask',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'new_axis_mask',\n    'name': 'newAxisMask',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'ellipsis_mask',\n    'name': 'ellipsisMask',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'shrink_axis_mask',\n    'name': 'shrinkAxisMask',\n    'type': 'number',\n    'defaultValue': 0\n  }]\n}, {\n  'tfOpName': 'Pack',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'end': 0,\n    'name': 'tensors',\n    'type': 'tensors'\n  }],\n  'attrs': [{\n    'tfName': 'axis',\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }]\n}, {\n  'tfOpName': 'Unpack',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'tensor',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'axis',\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'tfName': 'num',\n    'name': 'num',\n    'type': 'number',\n    'defaultValue': 0,\n    'notSupported': true\n  }]\n}, {\n  'tfOpName': 'Tile',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'reps',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'Split',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }, {\n    'start': 1,\n    'name': 'x',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'num_split',\n    'name': 'numOrSizeSplits',\n    'type': 'number',\n    'defaultValue': 1\n  }]\n}, {\n  'tfOpName': 'SplitV',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'numOrSizeSplits',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'axis',\n    'type': 'number',\n    'defaultValue': 0\n  }]\n}, {\n  'tfOpName': 'ScatterNd',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'indices',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'values',\n    'type': 'tensor'\n  }, {\n    'start': 2,\n    'name': 'shape',\n    'type': 'number[]'\n  }]\n}, {\n  'tfOpName': 'GatherNd',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'x',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'indices',\n    'type': 'tensor'\n  }]\n}, {\n  'tfOpName': 'SparseToDense',\n  'category': 'slice_join',\n  'inputs': [{\n    'start': 0,\n    'name': 'sparseIndices',\n    'type': 'tensor'\n  }, {\n    'start': 1,\n    'name': 'outputShape',\n    'type': 'number[]'\n  }, {\n    'start': 2,\n    'name': 'sparseValues',\n    'type': 'tensor'\n  }, {\n    'start': 3,\n    'name': 'defaultValue',\n    'type': 'tensor'\n  }],\n  'attrs': [{\n    'tfName': 'validate_indices',\n    'name': 'validateIndices',\n    'type': 'bool',\n    'defaultValue': false,\n    'notSupported': true\n  }]\n}];","map":{"version":3,"sources":["../../../src/operations/op_list/slice_join.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const json = [\n    {\n        'tfOpName': 'ConcatV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'end': -1, 'name': 'tensors', 'type': 'tensors' },\n            { 'start': -1, 'name': 'axis', 'type': 'number' }\n        ],\n        'attrs': [{ 'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2 }]\n    },\n    {\n        'tfOpName': 'Concat',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 1, 'end': 0, 'name': 'tensors', 'type': 'tensors' },\n            { 'start': 0, 'name': 'axis', 'type': 'number' }\n        ],\n        'attrs': [{ 'tfName': 'N', 'name': 'n', 'type': 'number', 'defaultValue': 2 }]\n    },\n    {\n        'tfOpName': 'GatherV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' },\n            { 'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ],\n        'attrs': [{\n                'tfName': 'batch_dims',\n                'name': 'batchDims',\n                'type': 'number',\n                'defaultValue': 0\n            }]\n    },\n    {\n        'tfOpName': 'Gather',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'notSupported': true\n            }]\n    },\n    {\n        'tfOpName': 'Reverse',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'dims', 'type': 'bool[]' }\n        ]\n    },\n    {\n        'tfOpName': 'ReverseV2',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'axis', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'Slice',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'begin', 'type': 'number[]' },\n            { 'start': 2, 'name': 'size', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'StridedSlice',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'begin', 'type': 'number[]' },\n            { 'start': 2, 'name': 'end', 'type': 'number[]' },\n            { 'start': 3, 'name': 'strides', 'type': 'number[]' },\n        ],\n        'attrs': [\n            {\n                'tfName': 'begin_mask',\n                'name': 'beginMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'end_mask',\n                'name': 'endMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'new_axis_mask',\n                'name': 'newAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'ellipsis_mask',\n                'name': 'ellipsisMask',\n                'type': 'number',\n                'defaultValue': 0\n            },\n            {\n                'tfName': 'shrink_axis_mask',\n                'name': 'shrinkAxisMask',\n                'type': 'number',\n                'defaultValue': 0\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Pack',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'end': 0, 'name': 'tensors', 'type': 'tensors' },\n        ],\n        'attrs': [\n            { 'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ]\n    },\n    {\n        'tfOpName': 'Unpack',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'tensor', 'type': 'tensor' },\n        ],\n        'attrs': [\n            { 'tfName': 'axis', 'name': 'axis', 'type': 'number', 'defaultValue': 0 }, {\n                'tfName': 'num',\n                'name': 'num',\n                'type': 'number',\n                'defaultValue': 0,\n                'notSupported': true\n            }\n        ]\n    },\n    {\n        'tfOpName': 'Tile',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'reps', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'Split',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'axis', 'type': 'number', 'defaultValue': 0 },\n            { 'start': 1, 'name': 'x', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'num_split',\n                'name': 'numOrSizeSplits',\n                'type': 'number',\n                'defaultValue': 1\n            }]\n    },\n    {\n        'tfOpName': 'SplitV',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'numOrSizeSplits', 'type': 'number[]' },\n            { 'start': 2, 'name': 'axis', 'type': 'number', 'defaultValue': 0 }\n        ]\n    },\n    {\n        'tfOpName': 'ScatterNd',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'indices', 'type': 'tensor' },\n            { 'start': 1, 'name': 'values', 'type': 'tensor' },\n            { 'start': 2, 'name': 'shape', 'type': 'number[]' }\n        ]\n    },\n    {\n        'tfOpName': 'GatherNd',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'x', 'type': 'tensor' },\n            { 'start': 1, 'name': 'indices', 'type': 'tensor' }\n        ]\n    },\n    {\n        'tfOpName': 'SparseToDense',\n        'category': 'slice_join',\n        'inputs': [\n            { 'start': 0, 'name': 'sparseIndices', 'type': 'tensor' },\n            { 'start': 1, 'name': 'outputShape', 'type': 'number[]' },\n            { 'start': 2, 'name': 'sparseValues', 'type': 'tensor' },\n            { 'start': 3, 'name': 'defaultValue', 'type': 'tensor' },\n        ],\n        'attrs': [{\n                'tfName': 'validate_indices',\n                'name': 'validateIndices',\n                'type': 'bool',\n                'defaultValue': false,\n                'notSupported': true\n            }]\n    }\n];\n//# sourceMappingURL=slice_join.js.map"]},"metadata":{},"sourceType":"module"}