{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMax(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var x = inputs.x;\n  var axis = attrs.axis;\n  var axes = util.parseAxisParam(axis, x.shape);\n  var permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n  var $x = x;\n  var intermediateTensorInfos = [];\n\n  if (permutedAxes != null) {\n    $x = transpose({\n      inputs: {\n        x: x\n      },\n      backend: backend,\n      attrs: {\n        perm: permutedAxes\n      }\n    });\n    intermediateTensorInfos.push($x);\n    axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n  }\n\n  backend_util.assertAxesAreInnerMostDims('argMax', [axes[0]], $x.shape.length);\n  var out = argMinMaxReduce(backend, $x, axes[0], 'max');\n  intermediateTensorInfos.forEach(function (t) {\n    return backend.disposeIntermediateTensorInfo(t);\n  });\n  return out;\n}\nexport var argMaxConfig = {\n  kernelName: ArgMax,\n  backendName: 'webgl',\n  kernelFunc: argMax\n};","map":{"version":3,"sources":["../../src/kernels/ArgMax.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,MAAR,EAA2C,YAA3C,EAA+F,IAA/F,QAA0G,uBAA1G;AAGA,SAAQ,eAAR,QAA8B,6BAA9B;AAEA,SAAQ,SAAR,QAAwB,aAAxB;AAEA,OAAM,SAAU,MAAV,CACF,IADE,EAEuE;AAAA,MAEpE,MAFoE,GAE1C,IAF0C,CAEpE,MAFoE;AAAA,MAE5D,OAF4D,GAE1C,IAF0C,CAE5D,OAF4D;AAAA,MAEnD,KAFmD,GAE1C,IAF0C,CAEnD,KAFmD;AAAA,MAGpE,CAHoE,GAG/D,MAH+D,CAGpE,CAHoE;AAAA,MAIpE,IAJoE,GAI5D,KAJ4D,CAIpE,IAJoE;AAM3E,MAAI,IAAI,GAAG,IAAI,CAAC,cAAL,CAAoB,IAApB,EAA0B,CAAC,CAAC,KAA5B,CAAX;AACA,MAAM,YAAY,GAAG,YAAY,CAAC,kBAAb,CAAgC,IAAhC,EAAsC,CAAC,CAAC,KAAF,CAAQ,MAA9C,CAArB;AACA,MAAI,EAAE,GAAG,CAAT;AACA,MAAM,uBAAuB,GAAG,EAAhC;;AACA,MAAI,YAAY,IAAI,IAApB,EAA0B;AACxB,IAAA,EAAE,GAAG,SAAS,CAAC;AAAC,MAAA,MAAM,EAAE;AAAC,QAAA,CAAC,EAAD;AAAD,OAAT;AAAc,MAAA,OAAO,EAAP,OAAd;AAAuB,MAAA,KAAK,EAAE;AAAC,QAAA,IAAI,EAAE;AAAP;AAA9B,KAAD,CAAd;AACA,IAAA,uBAAuB,CAAC,IAAxB,CAA6B,EAA7B;AACA,IAAA,IAAI,GAAG,YAAY,CAAC,gBAAb,CAA8B,IAAI,CAAC,MAAnC,EAA2C,EAAE,CAAC,KAAH,CAAS,MAApD,CAAP;AACD;;AAED,EAAA,YAAY,CAAC,0BAAb,CAAwC,QAAxC,EAAkD,CAAC,IAAI,CAAC,CAAD,CAAL,CAAlD,EAA6D,EAAE,CAAC,KAAH,CAAS,MAAtE;AACA,MAAM,GAAG,GAAG,eAAe,CAAC,OAAD,EAAU,EAAV,EAAc,IAAI,CAAC,CAAD,CAAlB,EAAuB,KAAvB,CAA3B;AAEA,EAAA,uBAAuB,CAAC,OAAxB,CACI,UAAA,CAAC;AAAA,WAAI,OAAO,CAAC,6BAAR,CAAsC,CAAtC,CAAJ;AAAA,GADL;AAEA,SAAO,GAAP;AACD;AAED,OAAO,IAAM,YAAY,GAAiB;AACxC,EAAA,UAAU,EAAE,MAD4B;AAExC,EAAA,WAAW,EAAE,OAF2B;AAGxC,EAAA,UAAU,EAAE;AAH4B,CAAnC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { ArgMax, backend_util, util } from '@tensorflow/tfjs-core';\nimport { argMinMaxReduce } from '../kernel_utils/arg_min_max';\nimport { transpose } from './Transpose';\nexport function argMax(args) {\n    const { inputs, backend, attrs } = args;\n    const { x } = inputs;\n    const { axis } = attrs;\n    let axes = util.parseAxisParam(axis, x.shape);\n    const permutedAxes = backend_util.getAxesPermutation(axes, x.shape.length);\n    let $x = x;\n    const intermediateTensorInfos = [];\n    if (permutedAxes != null) {\n        $x = transpose({ inputs: { x }, backend, attrs: { perm: permutedAxes } });\n        intermediateTensorInfos.push($x);\n        axes = backend_util.getInnerMostAxes(axes.length, $x.shape.length);\n    }\n    backend_util.assertAxesAreInnerMostDims('argMax', [axes[0]], $x.shape.length);\n    const out = argMinMaxReduce(backend, $x, axes[0], 'max');\n    intermediateTensorInfos.forEach(t => backend.disposeIntermediateTensorInfo(t));\n    return out;\n}\nexport const argMaxConfig = {\n    kernelName: ArgMax,\n    backendName: 'webgl',\n    kernelFunc: argMax\n};\n//# sourceMappingURL=ArgMax.js.map"]},"metadata":{},"sourceType":"module"}