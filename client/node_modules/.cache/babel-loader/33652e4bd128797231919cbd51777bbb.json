{"ast":null,"code":"/*\n\n//Define our lablemap\n\nconst labelMap = {\n    1:{'name':'Hello', color:'red'}, \n    2:{'name':'Thank You', color:'yellow'},\n    3:{'name':'I Love You', color: 'lime'},\n    4:{'name':'Yes', color:'blue'},\n    5:{'name':'I Love You', color:'purple'},\n}\n\n// Define a drawing function\n\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\n    for(let i=0; i<=boxes.length; i++){\n        if(boxes[i] && classes[i] && scores[i]>threshold){\n            // Extract variables\n            const [y,x,height,width] = boxes[i]\n            const text = classes[i]\n\n            //Set styling\n            ctx.strokeStyle = labelMap[text]['color']\n            ctx.linewidth = 10\n            ctx.fillStyle = 'white'\n            ctx.font = '30px Arial'\n\n            //Draw!!\n            ctx.beginPath()\n            ctx.fillText(labelMap[text]['name']+ ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\n            ctx.stroke()\n        }\n    }\n}\n*/\nconst labelMap = {\n  1: {\n    name: 'Connect',\n    color: 'red'\n  },\n  2: {\n    name: 'Division',\n    color: 'yellow'\n  },\n  3: {\n    name: 'Eight',\n    color: 'lime'\n  },\n  4: {\n    name: 'Five',\n    color: 'blue'\n  },\n  5: {\n    name: 'Four',\n    color: 'purple'\n  },\n  6: {\n    name: 'Hand',\n    color: 'red'\n  },\n  7: {\n    name: 'Medicine',\n    color: 'yellow'\n  },\n  8: {\n    name: 'Money',\n    color: 'lime'\n  },\n  9: {\n    name: 'Multiply',\n    color: 'blue'\n  },\n  10: {\n    name: 'Nine',\n    color: 'purple'\n  },\n  11: {\n    name: 'One',\n    color: 'red'\n  },\n  12: {\n    name: 'Plus',\n    color: 'yellow'\n  },\n  13: {\n    name: 'Seven',\n    color: 'lime'\n  },\n  14: {\n    name: 'Sick',\n    color: 'blue'\n  },\n  15: {\n    name: 'Six',\n    color: 'purple'\n  },\n  16: {\n    name: 'Ten',\n    color: 'red'\n  },\n  17: {\n    name: 'Three',\n    color: 'yellow'\n  },\n  18: {\n    name: 'Two',\n    color: 'lime'\n  },\n  19: {\n    name: 'You',\n    color: 'blue'\n  }\n}; // Define a drawing function\n\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx) => {\n  for (let i = 0; i <= boxes.length; i++) {\n    if (boxes[i] && classes[i] && scores[i] > threshold) {\n      // Extract variables\n      const [y, x, height, width] = boxes[i];\n      const text = classes[i]; // Set styling\n\n      ctx.strokeStyle = labelMap[text]['color'];\n      ctx.lineWidth = 10;\n      ctx.fillStyle = 'white';\n      ctx.font = '30px Arial'; // DRAW!!\n\n      ctx.beginPath();\n      ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i] * 100) / 100, x * imgWidth, y * imgHeight - 10);\n      ctx.rect(x * imgWidth, y * imgHeight, width * imgWidth / 2, height * imgHeight / 1.5);\n      ctx.stroke();\n    }\n  }\n};","map":{"version":3,"sources":["/Users/kimkiwoong/SonGil/client/src/songil/utilities.js"],"names":["labelMap","name","color","drawRect","boxes","classes","scores","threshold","imgWidth","imgHeight","ctx","i","length","y","x","height","width","text","strokeStyle","lineWidth","fillStyle","font","beginPath","fillText","Math","round","rect","stroke"],"mappings":"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","sourcesContent":["/*\n\n//Define our lablemap\n\nconst labelMap = {\n    1:{'name':'Hello', color:'red'}, \n    2:{'name':'Thank You', color:'yellow'},\n    3:{'name':'I Love You', color: 'lime'},\n    4:{'name':'Yes', color:'blue'},\n    5:{'name':'I Love You', color:'purple'},\n}\n\n// Define a drawing function\n\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\n    for(let i=0; i<=boxes.length; i++){\n        if(boxes[i] && classes[i] && scores[i]>threshold){\n            // Extract variables\n            const [y,x,height,width] = boxes[i]\n            const text = classes[i]\n\n            //Set styling\n            ctx.strokeStyle = labelMap[text]['color']\n            ctx.linewidth = 10\n            ctx.fillStyle = 'white'\n            ctx.font = '30px Arial'\n\n            //Draw!!\n            ctx.beginPath()\n            ctx.fillText(labelMap[text]['name']+ ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\n            ctx.stroke()\n        }\n    }\n}\n*/\n\nconst labelMap = {\n    1: {name:'Connect', color:'red'},\n    2: {name:'Division', color:'yellow'},\n    3: {name:'Eight', color:'lime'},\n    4: {name:'Five', color:'blue'},\n    5: {name:'Four', color:'purple'},\n    6: {name:'Hand', color:'red'},\n    7: {name:'Medicine', color:'yellow'},\n    8: {name:'Money', color:'lime'},\n    9: {name:'Multiply', color:'blue'},\n    10: {name:'Nine', color:'purple'},\n    11: {name:'One', color:'red'},\n    12: {name:'Plus', color:'yellow'},\n    13: {name:'Seven', color:'lime'},\n    14: {name:'Sick', color:'blue'},\n    15: {name:'Six', color:'purple'},\n    16: {name:'Ten', color:'red'},\n    17: {name:'Three', color:'yellow'},\n    18: {name:'Two', color:'lime'},\n    19: {name:'You', color:'blue'}\n}\n\n// Define a drawing function\nexport const drawRect = (boxes, classes, scores, threshold, imgWidth, imgHeight, ctx)=>{\n    for(let i=0; i<=boxes.length; i++){\n        if(boxes[i] && classes[i] && scores[i]>threshold){\n            // Extract variables\n            const [y,x,height,width] = boxes[i]\n            const text = classes[i]\n            \n            // Set styling\n            ctx.strokeStyle = labelMap[text]['color']\n            ctx.lineWidth = 10\n            ctx.fillStyle = 'white'\n            ctx.font = '30px Arial'         \n            \n            // DRAW!!\n            ctx.beginPath()\n            ctx.fillText(labelMap[text]['name'] + ' - ' + Math.round(scores[i]*100)/100, x*imgWidth, y*imgHeight-10)\n            ctx.rect(x*imgWidth, y*imgHeight, width*imgWidth/2, height*imgHeight/1.5);\n            ctx.stroke()\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}