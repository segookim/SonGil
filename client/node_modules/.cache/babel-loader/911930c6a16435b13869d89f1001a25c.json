{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense } from '@tensorflow/tfjs-core';\nimport { scatterImpl } from './Scatter_impl';\nexport function sparseToDense(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var sparseIndices = inputs.sparseIndices,\n      sparseValues = inputs.sparseValues,\n      defaultValue = inputs.defaultValue;\n  var outputShape = attrs.outputShape;\n\n  var _backend_util$calcula = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape),\n      sliceRank = _backend_util$calcula.sliceRank,\n      numUpdates = _backend_util$calcula.numUpdates,\n      sliceSize = _backend_util$calcula.sliceSize,\n      strides = _backend_util$calcula.strides,\n      outputSize = _backend_util$calcula.outputSize;\n\n  var sumDupeIndices = false;\n  var indicesBuf = backend.bufferSync(sparseIndices);\n  var updatesBuf = backend.bufferSync(sparseValues);\n  var $defaultValue = backend.data.get(defaultValue.dataId).values[0];\n  var outBuf = scatterImpl(indicesBuf, updatesBuf, outputShape, outputSize, sliceSize, numUpdates, sliceRank, strides, $defaultValue, sumDupeIndices);\n  return backend.makeTensorInfo(outputShape, outBuf.dtype, outBuf.values);\n}\nexport var sparseToDenseConfig = {\n  kernelName: SparseToDense,\n  backendName: 'cpu',\n  kernelFunc: sparseToDense\n};","map":{"version":3,"sources":["../../src/kernels/SparseToDense.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAgD,aAAhD,QAAyH,uBAAzH;AAGA,SAAQ,WAAR,QAA0B,gBAA1B;AAEA,OAAM,SAAU,aAAV,CAAwB,IAAxB,EAIL;AAAA,MACQ,MADR,GACkC,IADlC,CACQ,MADR;AAAA,MACgB,OADhB,GACkC,IADlC,CACgB,OADhB;AAAA,MACyB,KADzB,GACkC,IADlC,CACyB,KADzB;AAAA,MAEQ,aAFR,GAEqD,MAFrD,CAEQ,aAFR;AAAA,MAEuB,YAFvB,GAEqD,MAFrD,CAEuB,YAFvB;AAAA,MAEqC,YAFrC,GAEqD,MAFrD,CAEqC,YAFrC;AAAA,MAGQ,WAHR,GAGuB,KAHvB,CAGQ,WAHR;;AAAA,8BAMK,YAAY,CAAC,eAAb,CAA6B,YAA7B,EAA2C,aAA3C,EAA0D,WAA1D,CANL;AAAA,MAKQ,SALR,yBAKQ,SALR;AAAA,MAKmB,UALnB,yBAKmB,UALnB;AAAA,MAK+B,SAL/B,yBAK+B,SAL/B;AAAA,MAK0C,OAL1C,yBAK0C,OAL1C;AAAA,MAKmD,UALnD,yBAKmD,UALnD;;AAOC,MAAM,cAAc,GAAG,KAAvB;AAEA,MAAM,UAAU,GAAG,OAAO,CAAC,UAAR,CAAmB,aAAnB,CAAnB;AACA,MAAM,UAAU,GAAG,OAAO,CAAC,UAAR,CAAmB,YAAnB,CAAnB;AACA,MAAM,aAAa,GACf,OAAO,CAAC,IAAR,CAAa,GAAb,CAAiB,YAAY,CAAC,MAA9B,EAAsC,MAAtC,CAA6C,CAA7C,CADJ;AAGA,MAAM,MAAM,GAAG,WAAW,CACtB,UADsB,EACV,UADU,EACE,WADF,EACe,UADf,EAC2B,SAD3B,EACsC,UADtC,EAEtB,SAFsB,EAEX,OAFW,EAEF,aAFE,EAEa,cAFb,CAA1B;AAIA,SAAO,OAAO,CAAC,cAAR,CAAuB,WAAvB,EAAoC,MAAM,CAAC,KAA3C,EAAkD,MAAM,CAAC,MAAzD,CAAP;AACD;AAED,OAAO,IAAM,mBAAmB,GAAiB;AAC/C,EAAA,UAAU,EAAE,aADmC;AAE/C,EAAA,WAAW,EAAE,KAFkC;AAG/C,EAAA,UAAU,EAAE;AAHmC,CAA1C","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, SparseToDense } from '@tensorflow/tfjs-core';\nimport { scatterImpl } from './Scatter_impl';\nexport function sparseToDense(args) {\n    const { inputs, backend, attrs } = args;\n    const { sparseIndices, sparseValues, defaultValue } = inputs;\n    const { outputShape } = attrs;\n    const { sliceRank, numUpdates, sliceSize, strides, outputSize } = backend_util.calculateShapes(sparseValues, sparseIndices, outputShape);\n    const sumDupeIndices = false;\n    const indicesBuf = backend.bufferSync(sparseIndices);\n    const updatesBuf = backend.bufferSync(sparseValues);\n    const $defaultValue = backend.data.get(defaultValue.dataId).values[0];\n    const outBuf = scatterImpl(indicesBuf, updatesBuf, outputShape, outputSize, sliceSize, numUpdates, sliceRank, strides, $defaultValue, sumDupeIndices);\n    return backend.makeTensorInfo(outputShape, outBuf.dtype, outBuf.values);\n}\nexport const sparseToDenseConfig = {\n    kernelName: SparseToDense,\n    backendName: 'cpu',\n    kernelFunc: sparseToDense\n};\n//# sourceMappingURL=SparseToDense.js.map"]},"metadata":{},"sourceType":"module"}