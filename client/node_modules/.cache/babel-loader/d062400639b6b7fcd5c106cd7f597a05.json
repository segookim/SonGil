{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { localResponseNormalization } from '../../ops/local_response_normalization';\nimport { getGlobalTensorClass } from '../../tensor';\n\ngetGlobalTensorClass().prototype.localResponseNormalization = function (depthRadius, bias, alpha, beta) {\n  this.throwIfDisposed();\n  return localResponseNormalization(this, depthRadius, bias, alpha, beta);\n};","map":{"version":3,"sources":["../../../src/public/chained_ops/local_response_normalization.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,0BAAR,QAAyC,wCAAzC;AACA,SAAQ,oBAAR,QAA2C,cAA3C;;AAUA,oBAAoB,GAAG,SAAvB,CAAiC,0BAAjC,GACI,UACI,WADJ,EAC0B,IAD1B,EACyC,KADzC,EACyD,IADzD,EACsE;AACxE,OAAK,eAAL;AACA,SAAO,0BAA0B,CAAC,IAAD,EAAO,WAAP,EAAoB,IAApB,EAA0B,KAA1B,EAAiC,IAAjC,CAAjC;AACD,CALD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { localResponseNormalization } from '../../ops/local_response_normalization';\nimport { getGlobalTensorClass } from '../../tensor';\ngetGlobalTensorClass().prototype.localResponseNormalization =\n    function (depthRadius, bias, alpha, beta) {\n        this.throwIfDisposed();\n        return localResponseNormalization(this, depthRadius, bias, alpha, beta);\n    };\n//# sourceMappingURL=local_response_normalization.js.map"]},"metadata":{},"sourceType":"module"}