{"ast":null,"code":"import _slicedToArray from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { less } from '../ops/less';\nimport { mul } from '../ops/mul';\nexport var maximumGradConfig = {\n  kernelName: Maximum,\n  inputsToSave: ['a', 'b'],\n  gradFunc: function gradFunc(dy, saved) {\n    var _saved = _slicedToArray(saved, 2),\n        a = _saved[0],\n        b = _saved[1];\n\n    var derA = function derA() {\n      return mul(dy, cast(greaterEqual(a, b), 'float32'));\n    };\n\n    var derB = function derB() {\n      return mul(dy, cast(less(a, b), 'float32'));\n    };\n\n    return {\n      a: derA,\n      b: derB\n    };\n  }\n};","map":{"version":3,"sources":["../../src/gradients/Maximum_grad.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,OAAR,QAAsB,iBAAtB;AAEA,SAAQ,IAAR,QAAmB,aAAnB;AACA,SAAQ,YAAR,QAA2B,sBAA3B;AACA,SAAQ,IAAR,QAAmB,aAAnB;AACA,SAAQ,GAAR,QAAkB,YAAlB;AAGA,OAAO,IAAM,iBAAiB,GAAe;AAC3C,EAAA,UAAU,EAAE,OAD+B;AAE3C,EAAA,YAAY,EAAE,CAAC,GAAD,EAAM,GAAN,CAF6B;AAG3C,EAAA,QAAQ,EAAE,kBAAC,EAAD,EAAa,KAAb,EAAgC;AAAA,gCACzB,KADyB;AAAA,QACjC,CADiC;AAAA,QAC9B,CAD8B;;AAExC,QAAM,IAAI,GAAG,SAAP,IAAO;AAAA,aAAM,GAAG,CAAC,EAAD,EAAK,IAAI,CAAC,YAAY,CAAC,CAAD,EAAI,CAAJ,CAAb,EAAqB,SAArB,CAAT,CAAT;AAAA,KAAb;;AACA,QAAM,IAAI,GAAG,SAAP,IAAO;AAAA,aAAM,GAAG,CAAC,EAAD,EAAK,IAAI,CAAC,IAAI,CAAC,CAAD,EAAI,CAAJ,CAAL,EAAa,SAAb,CAAT,CAAT;AAAA,KAAb;;AACA,WAAO;AAAC,MAAA,CAAC,EAAE,IAAJ;AAAU,MAAA,CAAC,EAAE;AAAb,KAAP;AACD;AAR0C,CAAtC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { Maximum } from '../kernel_names';\nimport { cast } from '../ops/cast';\nimport { greaterEqual } from '../ops/greater_equal';\nimport { less } from '../ops/less';\nimport { mul } from '../ops/mul';\nexport const maximumGradConfig = {\n    kernelName: Maximum,\n    inputsToSave: ['a', 'b'],\n    gradFunc: (dy, saved) => {\n        const [a, b] = saved;\n        const derA = () => mul(dy, cast(greaterEqual(a, b), 'float32'));\n        const derB = () => mul(dy, cast(less(a, b), 'float32'));\n        return { a: derA, b: derB };\n    }\n};\n//# sourceMappingURL=Maximum_grad.js.map"]},"metadata":{},"sourceType":"module"}