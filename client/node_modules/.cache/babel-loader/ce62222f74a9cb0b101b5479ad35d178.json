{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nvar nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nexport function nonMaxSuppressionV5(args) {\n  backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' + 'Call tf.nonMaxSuppressionAsync() instead');\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var boxes = inputs.boxes,\n      scores = inputs.scores;\n  var maxOutputSize = attrs.maxOutputSize,\n      iouThreshold = attrs.iouThreshold,\n      scoreThreshold = attrs.scoreThreshold,\n      softNmsSigma = attrs.softNmsSigma;\n  var boxesVals = backend.readSync(boxes.dataId);\n  var scoresVals = backend.readSync(scores.dataId);\n  var maxOutputSizeVal = maxOutputSize;\n  var iouThresholdVal = iouThreshold;\n  var scoreThresholdVal = scoreThreshold;\n  var softNmsSigmaVal = softNmsSigma;\n\n  var _nonMaxSuppressionV5I = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal),\n      selectedIndices = _nonMaxSuppressionV5I.selectedIndices,\n      selectedScores = _nonMaxSuppressionV5I.selectedScores;\n\n  return [backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)), backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))];\n}\nexport var nonMaxSuppressionV5Config = {\n  kernelName: NonMaxSuppressionV5,\n  backendName: 'webgl',\n  kernelFunc: nonMaxSuppressionV5\n};","map":{"version":3,"sources":["../../src/kernels/NonMaxSuppressionV5.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAQ,YAAR,EAAsB,YAAtB,EAA8D,mBAA9D,QAAqK,uBAArK;AAEA,IAAM,uBAAuB,GAAG,YAAY,CAAC,uBAA7C;AAGA,OAAM,SAAU,mBAAV,CAA8B,IAA9B,EAIL;AACC,EAAA,YAAY,CAAC,IAAb,CACI,0DACA,0CAFJ;AADD,MAKQ,MALR,GAKkC,IALlC,CAKQ,MALR;AAAA,MAKgB,OALhB,GAKkC,IALlC,CAKgB,OALhB;AAAA,MAKyB,KALzB,GAKkC,IALlC,CAKyB,KALzB;AAAA,MAMQ,KANR,GAMyB,MANzB,CAMQ,KANR;AAAA,MAMe,MANf,GAMyB,MANzB,CAMe,MANf;AAAA,MAOQ,aAPR,GAOqE,KAPrE,CAOQ,aAPR;AAAA,MAOuB,YAPvB,GAOqE,KAPrE,CAOuB,YAPvB;AAAA,MAOqC,cAPrC,GAOqE,KAPrE,CAOqC,cAPrC;AAAA,MAOqD,YAPrD,GAOqE,KAPrE,CAOqD,YAPrD;AASC,MAAM,SAAS,GAAG,OAAO,CAAC,QAAR,CAAiB,KAAK,CAAC,MAAvB,CAAlB;AACA,MAAM,UAAU,GAAG,OAAO,CAAC,QAAR,CAAiB,MAAM,CAAC,MAAxB,CAAnB;AAEA,MAAM,gBAAgB,GAAG,aAAzB;AACA,MAAM,eAAe,GAAG,YAAxB;AACA,MAAM,iBAAiB,GAAG,cAA1B;AACA,MAAM,eAAe,GAAG,YAAxB;;AAfD,8BAiB2C,uBAAuB,CAC7D,SAD6D,EAClD,UADkD,EACtC,gBADsC,EACpB,eADoB,EAE7D,iBAF6D,EAE1C,eAF0C,CAjBlE;AAAA,MAiBQ,eAjBR,yBAiBQ,eAjBR;AAAA,MAiByB,cAjBzB,yBAiByB,cAjBzB;;AAqBC,SAAO,CACL,OAAO,CAAC,cAAR,CACI,CAAC,eAAe,CAAC,MAAjB,CADJ,EAC8B,OAD9B,EACuC,IAAI,UAAJ,CAAe,eAAf,CADvC,CADK,EAGL,OAAO,CAAC,cAAR,CACI,CAAC,cAAc,CAAC,MAAhB,CADJ,EAC6B,SAD7B,EACwC,IAAI,YAAJ,CAAiB,cAAjB,CADxC,CAHK,CAAP;AAMD;AAED,OAAO,IAAM,yBAAyB,GAAiB;AACrD,EAAA,UAAU,EAAE,mBADyC;AAErD,EAAA,WAAW,EAAE,OAFwC;AAGrD,EAAA,UAAU,EAAE;AAHyC,CAAhD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { backend_util, kernel_impls, NonMaxSuppressionV5 } from '@tensorflow/tfjs-core';\nconst nonMaxSuppressionV5Impl = kernel_impls.nonMaxSuppressionV5Impl;\nexport function nonMaxSuppressionV5(args) {\n    backend_util.warn('tf.nonMaxSuppression() in webgl locks the UI thread. ' +\n        'Call tf.nonMaxSuppressionAsync() instead');\n    const { inputs, backend, attrs } = args;\n    const { boxes, scores } = inputs;\n    const { maxOutputSize, iouThreshold, scoreThreshold, softNmsSigma } = attrs;\n    const boxesVals = backend.readSync(boxes.dataId);\n    const scoresVals = backend.readSync(scores.dataId);\n    const maxOutputSizeVal = maxOutputSize;\n    const iouThresholdVal = iouThreshold;\n    const scoreThresholdVal = scoreThreshold;\n    const softNmsSigmaVal = softNmsSigma;\n    const { selectedIndices, selectedScores } = nonMaxSuppressionV5Impl(boxesVals, scoresVals, maxOutputSizeVal, iouThresholdVal, scoreThresholdVal, softNmsSigmaVal);\n    return [\n        backend.makeTensorInfo([selectedIndices.length], 'int32', new Int32Array(selectedIndices)),\n        backend.makeTensorInfo([selectedScores.length], 'float32', new Float32Array(selectedScores))\n    ];\n}\nexport const nonMaxSuppressionV5Config = {\n    kernelName: NonMaxSuppressionV5,\n    backendName: 'webgl',\n    kernelFunc: nonMaxSuppressionV5\n};\n//# sourceMappingURL=NonMaxSuppressionV5.js.map"]},"metadata":{},"sourceType":"module"}