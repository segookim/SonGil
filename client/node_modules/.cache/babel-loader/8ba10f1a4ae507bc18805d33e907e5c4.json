{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var EPSILON_FLOAT32 = 1e-7;\nexport var EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\n\nexport var DataStorage = /*#__PURE__*/function () {\n  function DataStorage(backend, dataMover) {\n    _classCallCheck(this, DataStorage);\n\n    this.backend = backend;\n    this.dataMover = dataMover;\n    this.data = new WeakMap();\n    this.dataIdsCount = 0;\n  }\n\n  _createClass(DataStorage, [{\n    key: \"get\",\n    value: function get(dataId) {\n      if (!this.data.has(dataId)) {\n        this.dataMover.moveData(this.backend, dataId);\n      }\n\n      return this.data.get(dataId);\n    }\n  }, {\n    key: \"set\",\n    value: function set(dataId, value) {\n      this.dataIdsCount++;\n      this.data.set(dataId, value);\n    }\n  }, {\n    key: \"has\",\n    value: function has(dataId) {\n      return this.data.has(dataId);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(dataId) {\n      this.dataIdsCount--;\n      return this.data.delete(dataId);\n    }\n  }, {\n    key: \"numDataIds\",\n    value: function numDataIds() {\n      return this.dataIdsCount;\n    }\n  }]);\n\n  return DataStorage;\n}();\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\n\nexport var KernelBackend = /*#__PURE__*/function () {\n  function KernelBackend() {\n    _classCallCheck(this, KernelBackend);\n  }\n\n  _createClass(KernelBackend, [{\n    key: \"refCount\",\n    value: function refCount(dataId) {\n      return notYetImplemented('refCount');\n    }\n  }, {\n    key: \"incRef\",\n    value: function incRef(dataId) {\n      return notYetImplemented('incRef');\n    }\n  }, {\n    key: \"timerAvailable\",\n    value: function timerAvailable() {\n      return true;\n    }\n  }, {\n    key: \"time\",\n    value: function time(f) {\n      return notYetImplemented('time');\n    }\n  }, {\n    key: \"read\",\n    value: function read(dataId) {\n      return notYetImplemented('read');\n    }\n  }, {\n    key: \"readSync\",\n    value: function readSync(dataId) {\n      return notYetImplemented('readSync');\n    }\n  }, {\n    key: \"numDataIds\",\n    value: function numDataIds() {\n      return notYetImplemented('numDataIds');\n    }\n  }, {\n    key: \"disposeData\",\n    value: function disposeData(dataId, force) {\n      return notYetImplemented('disposeData');\n    }\n  }, {\n    key: \"write\",\n    value: function write(values, shape, dtype) {\n      return notYetImplemented('write');\n    }\n  }, {\n    key: \"move\",\n    value: function move(dataId, values, shape, dtype, refCount) {\n      return notYetImplemented('move');\n    }\n  }, {\n    key: \"memory\",\n    value: function memory() {\n      return notYetImplemented('memory');\n    }\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n\n  }, {\n    key: \"floatPrecision\",\n    value: function floatPrecision() {\n      return notYetImplemented('floatPrecision');\n    }\n    /** Returns the smallest representable number.  */\n\n  }, {\n    key: \"epsilon\",\n    value: function epsilon() {\n      return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      return notYetImplemented('dispose');\n    }\n  }]);\n\n  return KernelBackend;\n}();\n\nfunction notYetImplemented(kernelName) {\n  throw new Error(\"'\".concat(kernelName, \"' not yet implemented or not found in the registry. \") + \"This kernel may not be supported by the tfjs backend you have chosen\");\n}","map":{"version":3,"sources":["../../src/backends/backend.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAKH,OAAO,IAAM,eAAe,GAAG,IAAxB;AACP,OAAO,IAAM,eAAe,GAAG,IAAxB;AAuBP;;AACA,WAAa,WAAb;AAIE,uBAAoB,OAApB,EAAoD,SAApD,EAAwE;AAAA;;AAApD,SAAA,OAAA,GAAA,OAAA;AAAgC,SAAA,SAAA,GAAA,SAAA;AAH5C,SAAA,IAAA,GAAO,IAAI,OAAJ,EAAP;AACA,SAAA,YAAA,GAAe,CAAf;AAEoE;;AAJ9E;AAAA;AAAA,WAME,aAAI,MAAJ,EAAkB;AAChB,UAAI,CAAC,KAAK,IAAL,CAAU,GAAV,CAAc,MAAd,CAAL,EAA4B;AAC1B,aAAK,SAAL,CAAe,QAAf,CAAwB,KAAK,OAA7B,EAAsC,MAAtC;AACD;;AACD,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,MAAd,CAAP;AACD;AAXH;AAAA;AAAA,WAaE,aAAI,MAAJ,EAAoB,KAApB,EAA4B;AAC1B,WAAK,YAAL;AACA,WAAK,IAAL,CAAU,GAAV,CAAc,MAAd,EAAsB,KAAtB;AACD;AAhBH;AAAA;AAAA,WAkBE,aAAI,MAAJ,EAAkB;AAChB,aAAO,KAAK,IAAL,CAAU,GAAV,CAAc,MAAd,CAAP;AACD;AApBH;AAAA;AAAA,WAsBE,iBAAO,MAAP,EAAqB;AACnB,WAAK,YAAL;AACA,aAAO,KAAK,IAAL,CAAU,MAAV,CAAiB,MAAjB,CAAP;AACD;AAzBH;AAAA;AAAA,WA2BE,sBAAU;AACR,aAAO,KAAK,YAAZ;AACD;AA7BH;;AAAA;AAAA;AA+CA;;;;;AAKG;;AACH,WAAa,aAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,WACE,kBAAS,MAAT,EAAuB;AACrB,aAAO,iBAAiB,CAAC,UAAD,CAAxB;AACD;AAHH;AAAA;AAAA,WAIE,gBAAO,MAAP,EAAqB;AACnB,aAAO,iBAAiB,CAAC,QAAD,CAAxB;AACD;AANH;AAAA;AAAA,WAOE,0BAAc;AACZ,aAAO,IAAP;AACD;AATH;AAAA;AAAA,WAUE,cAAK,CAAL,EAAkB;AAChB,aAAO,iBAAiB,CAAC,MAAD,CAAxB;AACD;AAZH;AAAA;AAAA,WAaE,cAAK,MAAL,EAAmB;AACjB,aAAO,iBAAiB,CAAC,MAAD,CAAxB;AACD;AAfH;AAAA;AAAA,WAgBE,kBAAS,MAAT,EAAuB;AACrB,aAAO,iBAAiB,CAAC,UAAD,CAAxB;AACD;AAlBH;AAAA;AAAA,WAmBE,sBAAU;AACR,aAAO,iBAAiB,CAAC,YAAD,CAAxB;AACD;AArBH;AAAA;AAAA,WAsBE,qBAAY,MAAZ,EAA4B,KAA5B,EAA2C;AACzC,aAAO,iBAAiB,CAAC,aAAD,CAAxB;AACD;AAxBH;AAAA;AAAA,WAyBE,eAAM,MAAN,EAA6B,KAA7B,EAA8C,KAA9C,EAA6D;AAC3D,aAAO,iBAAiB,CAAC,OAAD,CAAxB;AACD;AA3BH;AAAA;AAAA,WA4BE,cACI,MADJ,EACoB,MADpB,EAC2C,KAD3C,EAC4D,KAD5D,EAEI,QAFJ,EAEoB;AAClB,aAAO,iBAAiB,CAAC,MAAD,CAAxB;AACD;AAhCH;AAAA;AAAA,WAiCE,kBAAM;AACJ,aAAO,iBAAiB,CAAC,QAAD,CAAxB;AACD;AACD;;AApCF;AAAA;AAAA,WAqCE,0BAAc;AACZ,aAAO,iBAAiB,CAAC,gBAAD,CAAxB;AACD;AACD;;AAxCF;AAAA;AAAA,WAyCE,mBAAO;AACL,aAAO,KAAK,cAAL,OAA0B,EAA1B,GAA+B,eAA/B,GAAiD,eAAxD;AACD;AA3CH;AAAA;AAAA,WA4CE,mBAAO;AACL,aAAO,iBAAiB,CAAC,SAAD,CAAxB;AACD;AA9CH;;AAAA;AAAA;;AAiDA,SAAS,iBAAT,CAA2B,UAA3B,EAA6C;AAC3C,QAAM,IAAI,KAAJ,CACF,WAAI,UAAJ,kIADE,CAAN;AAGD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport const EPSILON_FLOAT32 = 1e-7;\nexport const EPSILON_FLOAT16 = 1e-4;\n/** Convenient class for storing tensor-related data. */\nexport class DataStorage {\n    constructor(backend, dataMover) {\n        this.backend = backend;\n        this.dataMover = dataMover;\n        this.data = new WeakMap();\n        this.dataIdsCount = 0;\n    }\n    get(dataId) {\n        if (!this.data.has(dataId)) {\n            this.dataMover.moveData(this.backend, dataId);\n        }\n        return this.data.get(dataId);\n    }\n    set(dataId, value) {\n        this.dataIdsCount++;\n        this.data.set(dataId, value);\n    }\n    has(dataId) {\n        return this.data.has(dataId);\n    }\n    delete(dataId) {\n        this.dataIdsCount--;\n        return this.data.delete(dataId);\n    }\n    numDataIds() {\n        return this.dataIdsCount;\n    }\n}\n/**\n * The interface that defines the kernels that should be implemented when\n * adding a new backend. New backends don't need to implement every one of the\n * methods, this can be done gradually (throw an error for unimplemented\n * methods).\n */\nexport class KernelBackend {\n    refCount(dataId) {\n        return notYetImplemented('refCount');\n    }\n    incRef(dataId) {\n        return notYetImplemented('incRef');\n    }\n    timerAvailable() {\n        return true;\n    }\n    time(f) {\n        return notYetImplemented('time');\n    }\n    read(dataId) {\n        return notYetImplemented('read');\n    }\n    readSync(dataId) {\n        return notYetImplemented('readSync');\n    }\n    numDataIds() {\n        return notYetImplemented('numDataIds');\n    }\n    disposeData(dataId, force) {\n        return notYetImplemented('disposeData');\n    }\n    write(values, shape, dtype) {\n        return notYetImplemented('write');\n    }\n    move(dataId, values, shape, dtype, refCount) {\n        return notYetImplemented('move');\n    }\n    memory() {\n        return notYetImplemented('memory');\n    }\n    /** Returns the highest precision for floats in bits (e.g. 16 or 32) */\n    floatPrecision() {\n        return notYetImplemented('floatPrecision');\n    }\n    /** Returns the smallest representable number.  */\n    epsilon() {\n        return this.floatPrecision() === 32 ? EPSILON_FLOAT32 : EPSILON_FLOAT16;\n    }\n    dispose() {\n        return notYetImplemented('dispose');\n    }\n}\nfunction notYetImplemented(kernelName) {\n    throw new Error(`'${kernelName}' not yet implemented or not found in the registry. ` +\n        `This kernel may not be supported by the tfjs backend you have chosen`);\n}\n//# sourceMappingURL=backend.js.map"]},"metadata":{},"sourceType":"module"}