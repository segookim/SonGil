{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Count the elements in an Array of LayerVariables.\n *\n * @param weights: The LayerVariables of which the constituent numbers are to\n *   be counted.\n * @returns A count of the elements in all the LayerVariables\n */\nexport function countParamsInWeights(weights) {\n  var count = 0;\n\n  var _iterator = _createForOfIteratorHelper(weights),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var weight = _step.value;\n\n      if (weight.shape.length === 0) {\n        count += 1;\n      } else {\n        count += weight.shape.reduce(function (a, b) {\n          return a * b;\n        });\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return count;\n}","map":{"version":3,"sources":["../../src/utils/variable_utils.ts"],"names":[],"mappings":";;AAAA;;;;;;;;AAQG;;AAIH;;;;;;AAMG;AACH,OAAM,SAAU,oBAAV,CAA+B,OAA/B,EAAuD;AAC3D,MAAI,KAAK,GAAG,CAAZ;;AAD2D,6CAEtC,OAFsC;AAAA;;AAAA;AAE3D,wDAA8B;AAAA,UAAnB,MAAmB;;AAC5B,UAAI,MAAM,CAAC,KAAP,CAAa,MAAb,KAAwB,CAA5B,EAA+B;AAC7B,QAAA,KAAK,IAAI,CAAT;AACD,OAFD,MAEO;AACL,QAAA,KAAK,IAAI,MAAM,CAAC,KAAP,CAAa,MAAb,CAAoB,UAAC,CAAD,EAAI,CAAJ;AAAA,iBAAU,CAAC,GAAG,CAAd;AAAA,SAApB,CAAT;AACD;AACF;AAR0D;AAAA;AAAA;AAAA;AAAA;;AAS3D,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Count the elements in an Array of LayerVariables.\n *\n * @param weights: The LayerVariables of which the constituent numbers are to\n *   be counted.\n * @returns A count of the elements in all the LayerVariables\n */\nexport function countParamsInWeights(weights) {\n    let count = 0;\n    for (const weight of weights) {\n        if (weight.shape.length === 0) {\n            count += 1;\n        }\n        else {\n            count += weight.shape.reduce((a, b) => a * b);\n        }\n    }\n    return count;\n}\n//# sourceMappingURL=variable_utils.js.map"]},"metadata":{},"sourceType":"module"}