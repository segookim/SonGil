{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\n\n/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport var GatherProgram = function GatherProgram(aShape, outputShape) {\n  _classCallCheck(this, GatherProgram);\n\n  this.variableNames = ['A', 'indices'];\n  this.outputShape = outputShape;\n  this.rank = outputShape.length;\n  var dtype = getCoordsDataType(this.rank);\n  var sourceCoords = getSourceCoords(aShape, 2);\n  this.userCode = \"\\n      void main() {\\n        \".concat(dtype, \" resRC = getOutputCoords();\\n        setOutput(getA(\").concat(sourceCoords, \"));\\n      }\\n    \");\n}; // The input and output are always flattened into rank 4 tensors.\n\nfunction getSourceCoords(aShape, axis) {\n  var currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n  var sourceCoords = [];\n\n  for (var i = 0; i < aShape.length; i++) {\n    if (i === 2) {\n      sourceCoords.push('int(getIndices(resRC.x, resRC.z))');\n    } else {\n      sourceCoords.push(\"\".concat(currentCoords[i]));\n    }\n  }\n\n  return sourceCoords.join();\n}","map":{"version":3,"sources":["../src/gather_gpu.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAGH,SAAQ,iBAAR,QAAgC,mBAAhC;AAEA,WAAa,aAAb,GAME,uBAAY,MAAZ,EAA8B,WAA9B,EAAmD;AAAA;;AALnD,OAAA,aAAA,GAAgB,CAAC,GAAD,EAAM,SAAN,CAAhB;AAME,OAAK,WAAL,GAAmB,WAAnB;AACA,OAAK,IAAL,GAAY,WAAW,CAAC,MAAxB;AACA,MAAM,KAAK,GAAG,iBAAiB,CAAC,KAAK,IAAN,CAA/B;AACA,MAAM,YAAY,GAAG,eAAe,CAAC,MAAD,EAAS,CAAT,CAApC;AAEA,OAAK,QAAL,4CAEM,KAFN,iEAGqB,YAHrB;AAMD,CAlBH,C,CAqBA;;AACA,SAAS,eAAT,CAAyB,MAAzB,EAA2C,IAA3C,EAAuD;AACrD,MAAM,aAAa,GAAG,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,CAAtB;AAEA,MAAM,YAAY,GAAG,EAArB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,MAA3B,EAAmC,CAAC,EAApC,EAAwC;AACtC,QAAI,CAAC,KAAK,CAAV,EAAa;AACX,MAAA,YAAY,CAAC,IAAb,CAAkB,mCAAlB;AACD,KAFD,MAEO;AACL,MAAA,YAAY,CAAC,IAAb,WAAqB,aAAa,CAAC,CAAD,CAAlC;AACD;AACF;;AACD,SAAO,YAAY,CAAC,IAAb,EAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2017 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { getCoordsDataType } from './shader_compiler';\nexport class GatherProgram {\n    constructor(aShape, outputShape) {\n        this.variableNames = ['A', 'indices'];\n        this.outputShape = outputShape;\n        this.rank = outputShape.length;\n        const dtype = getCoordsDataType(this.rank);\n        const sourceCoords = getSourceCoords(aShape, 2);\n        this.userCode = `\n      void main() {\n        ${dtype} resRC = getOutputCoords();\n        setOutput(getA(${sourceCoords}));\n      }\n    `;\n    }\n}\n// The input and output are always flattened into rank 4 tensors.\nfunction getSourceCoords(aShape, axis) {\n    const currentCoords = ['resRC.x', 'resRC.y', 'resRC.z', 'resRC.w'];\n    const sourceCoords = [];\n    for (let i = 0; i < aShape.length; i++) {\n        if (i === 2) {\n            sourceCoords.push('int(getIndices(resRC.x, resRC.z))');\n        }\n        else {\n            sourceCoords.push(`${currentCoords[i]}`);\n        }\n    }\n    return sourceCoords.join();\n}\n//# sourceMappingURL=gather_gpu.js.map"]},"metadata":{},"sourceType":"module"}