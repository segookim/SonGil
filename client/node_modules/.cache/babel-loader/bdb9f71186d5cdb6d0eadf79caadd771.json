{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { stack } from '../../ops/stack';\nimport { getGlobalTensorClass, Tensor } from '../../tensor';\n\ngetGlobalTensorClass().prototype.stack = function (x, axis) {\n  this.throwIfDisposed();\n  const tensorsToBeStacked = x instanceof Tensor ? [this, x] : [this, ...x];\n  return stack(tensorsToBeStacked, axis);\n};","map":{"version":3,"sources":["../../../src/public/chained_ops/stack.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AACH,SAAQ,KAAR,QAAoB,iBAApB;AACA,SAAQ,oBAAR,EAA8B,MAA9B,QAA2C,cAA3C;;AASA,oBAAoB,GAAG,SAAvB,CAAiC,KAAjC,GAAyC,UACrC,CADqC,EACjB,IADiB,EACJ;AACnC,OAAK,eAAL;AACA,QAAM,kBAAkB,GAAG,CAAC,YAAY,MAAb,GAAsB,CAAC,IAAD,EAAO,CAAP,CAAtB,GAAkC,CAAC,IAAD,EAAO,GAAG,CAAV,CAA7D;AACA,SAAO,KAAK,CAAC,kBAAD,EAAqB,IAArB,CAAZ;AACD,CALD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { stack } from '../../ops/stack';\nimport { getGlobalTensorClass, Tensor } from '../../tensor';\ngetGlobalTensorClass().prototype.stack = function (x, axis) {\n    this.throwIfDisposed();\n    const tensorsToBeStacked = x instanceof Tensor ? [this, x] : [this, ...x];\n    return stack(tensorsToBeStacked, axis);\n};\n//# sourceMappingURL=stack.js.map"]},"metadata":{},"sourceType":"module"}