{"ast":null,"code":"/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport * as regularizers from './regularizers'; // tslint:disable-next-line:max-line-length\n\nimport { L1L2 } from './regularizers';\n/**\n * Regularizer for L1 and L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x)) + sum(l2 * x^2)\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l1l2(config) {\n  return new L1L2(config);\n}\n/**\n * Regularizer for L1 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x))\n * @param args l1 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l1(config) {\n  return regularizers.l1(config);\n}\n/**\n * Regularizer for L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l2 * x^2)\n * @param args l2 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\n\nexport function l2(config) {\n  return regularizers.l2(config);\n}","map":{"version":3,"sources":["../src/exports_regularizers.ts"],"names":[],"mappings":"AAAA;;;;;;;;AAQG;AACH,OAAO,KAAK,YAAZ,MAA8B,gBAA9B,C,CACA;;AACA,SAAgB,IAAhB,QAA0D,gBAA1D;AAEA;;;;;;;AAOG;;AACH,OAAM,SAAU,IAAV,CAAe,MAAf,EAAgC;AACpC,SAAO,IAAI,IAAJ,CAAS,MAAT,CAAP;AACD;AAED;;;;;;;;AAQG;;AACH,OAAM,SAAU,EAAV,CAAa,MAAb,EAA4B;AAChC,SAAO,YAAY,CAAC,EAAb,CAAgB,MAAhB,CAAP;AACD;AAED;;;;;;;;AAQG;;AACH,OAAM,SAAU,EAAV,CAAa,MAAb,EAA4B;AAChC,SAAO,YAAY,CAAC,EAAb,CAAgB,MAAhB,CAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\nimport * as regularizers from './regularizers';\n// tslint:disable-next-line:max-line-length\nimport { L1L2 } from './regularizers';\n/**\n * Regularizer for L1 and L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x)) + sum(l2 * x^2)\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\nexport function l1l2(config) {\n    return new L1L2(config);\n}\n/**\n * Regularizer for L1 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l1 * abs(x))\n * @param args l1 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\nexport function l1(config) {\n    return regularizers.l1(config);\n}\n/**\n * Regularizer for L2 regularization.\n *\n * Adds a term to the loss to penalize large weights:\n * loss += sum(l2 * x^2)\n * @param args l2 config.\n *\n * @doc {heading: 'Regularizers', namespace: 'regularizers'}\n */\nexport function l2(config) {\n    return regularizers.l2(config);\n}\n//# sourceMappingURL=exports_regularizers.js.map"]},"metadata":{},"sourceType":"module"}