{"ast":null,"code":"import _toConsumableArray from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\n/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport var oneHot = function oneHot(args) {\n  var inputs = args.inputs,\n      backend = args.backend,\n      attrs = args.attrs;\n  var indices = inputs.indices;\n  var depth = attrs.depth,\n      onValue = attrs.onValue,\n      offValue = attrs.offValue;\n  var indicesSize = util.sizeFromShape(indices.shape);\n  var program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n  var reshaped = reshape({\n    inputs: {\n      x: indices\n    },\n    backend: backend,\n    attrs: {\n      shape: [indicesSize]\n    }\n  });\n  var result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n  backend.disposeIntermediateTensorInfo(reshaped);\n  var outShape = [].concat(_toConsumableArray(indices.shape), [depth]);\n  var out = reshape({\n    inputs: {\n      x: result\n    },\n    backend: backend,\n    attrs: {\n      shape: outShape\n    }\n  });\n  backend.disposeIntermediateTensorInfo(result);\n  return out;\n};\nexport var oneHotConfig = {\n  kernelName: OneHot,\n  backendName: 'webgl',\n  kernelFunc: oneHot\n};","map":{"version":3,"sources":["../../src/kernels/OneHot.ts"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAkC,MAAlC,EAAiF,IAAjF,QAA4F,uBAA5F;AAGA,SAAQ,aAAR,QAA4B,eAA5B;AACA,SAAQ,OAAR,QAAsB,WAAtB;AAEA,OAAO,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,IAAD,EAIL;AAAA,MACR,MADQ,GACkB,IADlB,CACR,MADQ;AAAA,MACA,OADA,GACkB,IADlB,CACA,OADA;AAAA,MACS,KADT,GACkB,IADlB,CACS,KADT;AAAA,MAER,OAFQ,GAEG,MAFH,CAER,OAFQ;AAAA,MAGR,KAHQ,GAGoB,KAHpB,CAGR,KAHQ;AAAA,MAGD,OAHC,GAGoB,KAHpB,CAGD,OAHC;AAAA,MAGQ,QAHR,GAGoB,KAHpB,CAGQ,QAHR;AAKf,MAAM,WAAW,GAAG,IAAI,CAAC,aAAL,CAAmB,OAAO,CAAC,KAA3B,CAApB;AACA,MAAM,OAAO,GAAG,IAAI,aAAJ,CAAkB,WAAlB,EAA+B,KAA/B,EAAsC,OAAtC,EAA+C,QAA/C,CAAhB;AACA,MAAM,QAAQ,GACV,OAAO,CAAC;AAAC,IAAA,MAAM,EAAE;AAAC,MAAA,CAAC,EAAE;AAAJ,KAAT;AAAuB,IAAA,OAAO,EAAP,OAAvB;AAAgC,IAAA,KAAK,EAAE;AAAC,MAAA,KAAK,EAAE,CAAC,WAAD;AAAR;AAAvC,GAAD,CADX;AAEA,MAAM,MAAM,GAAG,OAAO,CAAC,eAAR,CAAwB,OAAxB,EAAiC,CAAC,QAAD,CAAjC,EAA6C,OAAO,CAAC,KAArD,CAAf;AACA,EAAA,OAAO,CAAC,6BAAR,CAAsC,QAAtC;AAEA,MAAM,QAAQ,gCAAO,OAAO,CAAC,KAAf,IAAsB,KAAtB,EAAd;AACA,MAAM,GAAG,GAAG,OAAO,CAAC;AAAC,IAAA,MAAM,EAAE;AAAC,MAAA,CAAC,EAAE;AAAJ,KAAT;AAAsB,IAAA,OAAO,EAAP,OAAtB;AAA+B,IAAA,KAAK,EAAE;AAAC,MAAA,KAAK,EAAE;AAAR;AAAtC,GAAD,CAAnB;AACA,EAAA,OAAO,CAAC,6BAAR,CAAsC,MAAtC;AACA,SAAO,GAAP;AACD,CApBM;AAsBP,OAAO,IAAM,YAAY,GAAiB;AACxC,EAAA,UAAU,EAAE,MAD4B;AAExC,EAAA,WAAW,EAAE,OAF2B;AAGxC,EAAA,UAAU,EAAE;AAH4B,CAAnC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { OneHot, util } from '@tensorflow/tfjs-core';\nimport { OneHotProgram } from '../onehot_gpu';\nimport { reshape } from './Reshape';\nexport const oneHot = (args) => {\n    const { inputs, backend, attrs } = args;\n    const { indices } = inputs;\n    const { depth, onValue, offValue } = attrs;\n    const indicesSize = util.sizeFromShape(indices.shape);\n    const program = new OneHotProgram(indicesSize, depth, onValue, offValue);\n    const reshaped = reshape({ inputs: { x: indices }, backend, attrs: { shape: [indicesSize] } });\n    const result = backend.runWebGLProgram(program, [reshaped], indices.dtype);\n    backend.disposeIntermediateTensorInfo(reshaped);\n    const outShape = [...indices.shape, depth];\n    const out = reshape({ inputs: { x: result }, backend, attrs: { shape: outShape } });\n    backend.disposeIntermediateTensorInfo(result);\n    return out;\n};\nexport const oneHotConfig = {\n    kernelName: OneHot,\n    backendName: 'webgl',\n    kernelFunc: oneHot\n};\n//# sourceMappingURL=OneHot.js.map"]},"metadata":{},"sourceType":"module"}