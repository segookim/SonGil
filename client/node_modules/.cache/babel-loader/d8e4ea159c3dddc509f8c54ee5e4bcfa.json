{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kimkiwoong/songil2/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { BrowserIndexedDB, BrowserIndexedDBManager } from '../io/indexed_db';\nimport { BrowserLocalStorage, BrowserLocalStorageManager } from '../io/local_storage';\nimport { ModelStoreManagerRegistry } from '../io/model_management';\nexport var PlatformBrowser = /*#__PURE__*/function () {\n  function PlatformBrowser() {\n    _classCallCheck(this, PlatformBrowser);\n  }\n\n  _createClass(PlatformBrowser, [{\n    key: \"fetch\",\n    value: function (_fetch) {\n      function fetch(_x, _x2) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function (path, init) {\n      return fetch(path, init);\n    })\n  }, {\n    key: \"now\",\n    value: function now() {\n      return performance.now();\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(text, encoding) {\n      if (encoding !== 'utf-8' && encoding !== 'utf8') {\n        throw new Error(\"Browser's encoder only supports utf-8, but got \".concat(encoding));\n      }\n\n      if (this.textEncoder == null) {\n        this.textEncoder = new TextEncoder();\n      }\n\n      return this.textEncoder.encode(text);\n    }\n  }, {\n    key: \"decode\",\n    value: function decode(bytes, encoding) {\n      return new TextDecoder(encoding).decode(bytes);\n    }\n  }]);\n\n  return PlatformBrowser;\n}();\n\nif (env().get('IS_BROWSER')) {\n  env().setPlatform('browser', new PlatformBrowser()); // Register LocalStorage IOHandler\n\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n  } catch (err) {} // Register IndexedDB IOHandler\n\n\n  try {\n    ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n  } catch (err) {}\n}","map":{"version":3,"sources":["../../src/platforms/platform_browser.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAEH,OAAO,UAAP;AAEA,SAAQ,GAAR,QAAkB,gBAAlB;AACA,SAAQ,gBAAR,EAA0B,uBAA1B,QAAwD,kBAAxD;AACA,SAAQ,mBAAR,EAA6B,0BAA7B,QAA8D,qBAA9D;AACA,SAAQ,yBAAR,QAAwC,wBAAxC;AAIA,WAAa,eAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAKE,UAAM,IAAN,EAAoB,IAApB,EAAsC;AACpC,aAAO,KAAK,CAAC,IAAD,EAAO,IAAP,CAAZ;AACD,KAPH;AAAA;AAAA;AAAA,WASE,eAAG;AACD,aAAO,WAAW,CAAC,GAAZ,EAAP;AACD;AAXH;AAAA;AAAA,WAaE,gBAAO,IAAP,EAAqB,QAArB,EAAqC;AACnC,UAAI,QAAQ,KAAK,OAAb,IAAwB,QAAQ,KAAK,MAAzC,EAAiD;AAC/C,cAAM,IAAI,KAAJ,0DACgD,QADhD,EAAN;AAED;;AACD,UAAI,KAAK,WAAL,IAAoB,IAAxB,EAA8B;AAC5B,aAAK,WAAL,GAAmB,IAAI,WAAJ,EAAnB;AACD;;AACD,aAAO,KAAK,WAAL,CAAiB,MAAjB,CAAwB,IAAxB,CAAP;AACD;AAtBH;AAAA;AAAA,WAuBE,gBAAO,KAAP,EAA0B,QAA1B,EAA0C;AACxC,aAAO,IAAI,WAAJ,CAAgB,QAAhB,EAA0B,MAA1B,CAAiC,KAAjC,CAAP;AACD;AAzBH;;AAAA;AAAA;;AA4BA,IAAI,GAAG,GAAG,GAAN,CAAU,YAAV,CAAJ,EAA6B;AAC3B,EAAA,GAAG,GAAG,WAAN,CAAkB,SAAlB,EAA6B,IAAI,eAAJ,EAA7B,EAD2B,CAG3B;;AACA,MAAI;AACF,IAAA,yBAAyB,CAAC,eAA1B,CACI,mBAAmB,CAAC,UADxB,EACoC,IAAI,0BAAJ,EADpC;AAED,GAHD,CAGE,OAAO,GAAP,EAAY,CACb,CAR0B,CAU3B;;;AACA,MAAI;AACF,IAAA,yBAAyB,CAAC,eAA1B,CACI,gBAAgB,CAAC,UADrB,EACiC,IAAI,uBAAJ,EADjC;AAED,GAHD,CAGE,OAAO,GAAP,EAAY,CACb;AACF","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport '../flags';\nimport { env } from '../environment';\nimport { BrowserIndexedDB, BrowserIndexedDBManager } from '../io/indexed_db';\nimport { BrowserLocalStorage, BrowserLocalStorageManager } from '../io/local_storage';\nimport { ModelStoreManagerRegistry } from '../io/model_management';\nexport class PlatformBrowser {\n    fetch(path, init) {\n        return fetch(path, init);\n    }\n    now() {\n        return performance.now();\n    }\n    encode(text, encoding) {\n        if (encoding !== 'utf-8' && encoding !== 'utf8') {\n            throw new Error(`Browser's encoder only supports utf-8, but got ${encoding}`);\n        }\n        if (this.textEncoder == null) {\n            this.textEncoder = new TextEncoder();\n        }\n        return this.textEncoder.encode(text);\n    }\n    decode(bytes, encoding) {\n        return new TextDecoder(encoding).decode(bytes);\n    }\n}\nif (env().get('IS_BROWSER')) {\n    env().setPlatform('browser', new PlatformBrowser());\n    // Register LocalStorage IOHandler\n    try {\n        ModelStoreManagerRegistry.registerManager(BrowserLocalStorage.URL_SCHEME, new BrowserLocalStorageManager());\n    }\n    catch (err) {\n    }\n    // Register IndexedDB IOHandler\n    try {\n        ModelStoreManagerRegistry.registerManager(BrowserIndexedDB.URL_SCHEME, new BrowserIndexedDBManager());\n    }\n    catch (err) {\n    }\n}\n//# sourceMappingURL=platform_browser.js.map"]},"metadata":{},"sourceType":"module"}