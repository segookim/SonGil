{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport var ClipPackedProgram = /*#__PURE__*/function () {\n  function ClipPackedProgram(aShape) {\n    _classCallCheck(this, ClipPackedProgram);\n\n    this.variableNames = ['A'];\n    this.packedInputs = true;\n    this.packedOutput = true;\n    this.outputShape = aShape;\n    this.userCode = \"\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        vec4 value = getAAtOutCoords();\\n\\n        if (any(isnan(value))) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\\n      }\\n    \";\n  }\n\n  _createClass(ClipPackedProgram, [{\n    key: \"getCustomSetupFunc\",\n    value: function getCustomSetupFunc(min, max) {\n      var _this = this;\n\n      return function (gpgpu, webGLProgram) {\n        if (_this.minLoc == null) {\n          _this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n          _this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n        }\n\n        gpgpu.gl.uniform1f(_this.minLoc, min);\n        gpgpu.gl.uniform1f(_this.maxLoc, max);\n      };\n    }\n  }]);\n\n  return ClipPackedProgram;\n}();","map":{"version":3,"sources":["../src/clip_packed_gpu.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;;;;;;;AAeG;AAKH,WAAa,iBAAb;AAWE,6BAAY,MAAZ,EAA4B;AAAA;;AAV5B,SAAA,aAAA,GAAgB,CAAC,GAAD,CAAhB;AACA,SAAA,YAAA,GAAe,IAAf;AACA,SAAA,YAAA,GAAe,IAAf;AASE,SAAK,WAAL,GAAmB,MAAnB;AACA,SAAK,QAAL;AAeD;;AA5BH;AAAA;AAAA,WA8BE,4BAAmB,GAAnB,EAAgC,GAAhC,EAA2C;AAAA;;AACzC,aAAO,UAAC,KAAD,EAAsB,YAAtB,EAAoD;AACzD,YAAI,KAAI,CAAC,MAAL,IAAe,IAAnB,EAAyB;AACvB,UAAA,KAAI,CAAC,MAAL,GAAc,KAAK,CAAC,yBAAN,CAAgC,YAAhC,EAA8C,QAA9C,CAAd;AACA,UAAA,KAAI,CAAC,MAAL,GAAc,KAAK,CAAC,yBAAN,CAAgC,YAAhC,EAA8C,QAA9C,CAAd;AACD;;AACD,QAAA,KAAK,CAAC,EAAN,CAAS,SAAT,CAAmB,KAAI,CAAC,MAAxB,EAAgC,GAAhC;AACA,QAAA,KAAK,CAAC,EAAN,CAAS,SAAT,CAAmB,KAAI,CAAC,MAAxB,EAAgC,GAAhC;AACD,OAPD;AAQD;AAvCH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nexport class ClipPackedProgram {\n    constructor(aShape) {\n        this.variableNames = ['A'];\n        this.packedInputs = true;\n        this.packedOutput = true;\n        this.outputShape = aShape;\n        this.userCode = `\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    `;\n    }\n    getCustomSetupFunc(min, max) {\n        return (gpgpu, webGLProgram) => {\n            if (this.minLoc == null) {\n                this.minLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'minVal');\n                this.maxLoc = gpgpu.getUniformLocationNoThrow(webGLProgram, 'maxVal');\n            }\n            gpgpu.gl.uniform1f(this.minLoc, min);\n            gpgpu.gl.uniform1f(this.maxLoc, max);\n        };\n    }\n}\n//# sourceMappingURL=clip_packed_gpu.js.map"]},"metadata":{},"sourceType":"module"}