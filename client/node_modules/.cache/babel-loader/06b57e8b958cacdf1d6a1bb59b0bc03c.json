{"ast":null,"code":"import _classCallCheck from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"/Users/kimkiwoong/SonGil/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\n\n/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n\n/**\n * Equivalent of Python's AttributeError.\n */\nexport var AttributeError = /*#__PURE__*/function (_Error) {\n  _inherits(AttributeError, _Error);\n\n  var _super = _createSuper(AttributeError);\n\n  function AttributeError(message) {\n    var _this;\n\n    _classCallCheck(this, AttributeError);\n\n    _this = _super.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this), AttributeError.prototype);\n    return _this;\n  }\n\n  return AttributeError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's RuntimeError.\n */\n\nexport var RuntimeError = /*#__PURE__*/function (_Error2) {\n  _inherits(RuntimeError, _Error2);\n\n  var _super2 = _createSuper(RuntimeError);\n\n  function RuntimeError(message) {\n    var _this2;\n\n    _classCallCheck(this, RuntimeError);\n\n    _this2 = _super2.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this2), RuntimeError.prototype);\n    return _this2;\n  }\n\n  return RuntimeError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's ValueError.\n */\n\nexport var ValueError = /*#__PURE__*/function (_Error3) {\n  _inherits(ValueError, _Error3);\n\n  var _super3 = _createSuper(ValueError);\n\n  function ValueError(message) {\n    var _this3;\n\n    _classCallCheck(this, ValueError);\n\n    _this3 = _super3.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this3), ValueError.prototype);\n    return _this3;\n  }\n\n  return ValueError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's NotImplementedError.\n */\n\nexport var NotImplementedError = /*#__PURE__*/function (_Error4) {\n  _inherits(NotImplementedError, _Error4);\n\n  var _super4 = _createSuper(NotImplementedError);\n\n  function NotImplementedError(message) {\n    var _this4;\n\n    _classCallCheck(this, NotImplementedError);\n\n    _this4 = _super4.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this4), NotImplementedError.prototype);\n    return _this4;\n  }\n\n  return NotImplementedError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's AssertionError.\n */\n\nexport var AssertionError = /*#__PURE__*/function (_Error5) {\n  _inherits(AssertionError, _Error5);\n\n  var _super5 = _createSuper(AssertionError);\n\n  function AssertionError(message) {\n    var _this5;\n\n    _classCallCheck(this, AssertionError);\n\n    _this5 = _super5.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this5), AssertionError.prototype);\n    return _this5;\n  }\n\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Equivalent of Python's IndexError.\n */\n\nexport var IndexError = /*#__PURE__*/function (_Error6) {\n  _inherits(IndexError, _Error6);\n\n  var _super6 = _createSuper(IndexError);\n\n  function IndexError(message) {\n    var _this6;\n\n    _classCallCheck(this, IndexError);\n\n    _this6 = _super6.call(this, message); // Set the prototype explicitly.\n\n    Object.setPrototypeOf(_assertThisInitialized(_this6), IndexError.prototype);\n    return _this6;\n  }\n\n  return IndexError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));","map":{"version":3,"sources":["../src/errors.ts"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;AAQG;;AAEH;;;;;;;AAOG;AACH;;AAEA;;AAEG;AACH,WAAa,cAAb;AAAA;;AAAA;;AACE,0BAAY,OAAZ,EAA4B;AAAA;;AAAA;;AAC1B,8BAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,gCAA4B,cAAc,CAAC,SAA3C;AAH0B;AAI3B;;AALH;AAAA,iCAAoC,KAApC;AAQA;;AAEG;;AACH,WAAa,YAAb;AAAA;;AAAA;;AACE,wBAAY,OAAZ,EAA4B;AAAA;;AAAA;;AAC1B,gCAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,iCAA4B,YAAY,CAAC,SAAzC;AAH0B;AAI3B;;AALH;AAAA,iCAAkC,KAAlC;AAQA;;AAEG;;AACH,WAAa,UAAb;AAAA;;AAAA;;AACE,sBAAY,OAAZ,EAA4B;AAAA;;AAAA;;AAC1B,gCAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,iCAA4B,UAAU,CAAC,SAAvC;AAH0B;AAI3B;;AALH;AAAA,iCAAgC,KAAhC;AAQA;;AAEG;;AACH,WAAa,mBAAb;AAAA;;AAAA;;AACE,+BAAY,OAAZ,EAA4B;AAAA;;AAAA;;AAC1B,gCAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,iCAA4B,mBAAmB,CAAC,SAAhD;AAH0B;AAI3B;;AALH;AAAA,iCAAyC,KAAzC;AAQA;;AAEG;;AACH,WAAa,cAAb;AAAA;;AAAA;;AACE,0BAAY,OAAZ,EAA4B;AAAA;;AAAA;;AAC1B,gCAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,iCAA4B,cAAc,CAAC,SAA3C;AAH0B;AAI3B;;AALH;AAAA,iCAAoC,KAApC;AAQA;;AAEG;;AACH,WAAa,UAAb;AAAA;;AAAA;;AACE,sBAAY,OAAZ,EAA4B;AAAA;;AAAA;;AAC1B,gCAAM,OAAN,EAD0B,CAE1B;;AACA,IAAA,MAAM,CAAC,cAAP,iCAA4B,UAAU,CAAC,SAAvC;AAH0B;AAI3B;;AALH;AAAA,iCAAgC,KAAhC","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Use of this source code is governed by an MIT-style\n * license that can be found in the LICENSE file or at\n * https://opensource.org/licenses/MIT.\n * =============================================================================\n */\n/**\n * Explicit error types.\n *\n * See the following link for more information about why the code includes\n * calls to setPrototypeOf:\n *\n * https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n */\n// tslint:enable\n/**\n * Equivalent of Python's AttributeError.\n */\nexport class AttributeError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, AttributeError.prototype);\n    }\n}\n/**\n * Equivalent of Python's RuntimeError.\n */\nexport class RuntimeError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, RuntimeError.prototype);\n    }\n}\n/**\n * Equivalent of Python's ValueError.\n */\nexport class ValueError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, ValueError.prototype);\n    }\n}\n/**\n * Equivalent of Python's NotImplementedError.\n */\nexport class NotImplementedError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, NotImplementedError.prototype);\n    }\n}\n/**\n * Equivalent of Python's AssertionError.\n */\nexport class AssertionError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, AssertionError.prototype);\n    }\n}\n/**\n * Equivalent of Python's IndexError.\n */\nexport class IndexError extends Error {\n    constructor(message) {\n        super(message);\n        // Set the prototype explicitly.\n        Object.setPrototypeOf(this, IndexError.prototype);\n    }\n}\n//# sourceMappingURL=errors.js.map"]},"metadata":{},"sourceType":"module"}