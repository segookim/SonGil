{"ast":null,"code":"/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernels/Reshape';\nexport function meanImpl(x, reduceShape, outShape, backend) {\n  var inSize = util.sizeFromShape(reduceShape);\n  var xSize = util.sizeFromShape(x.shape);\n  var batchSize = xSize / inSize;\n  var reshapedInput = reshape({\n    inputs: {\n      x: x\n    },\n    attrs: {\n      shape: [batchSize, inSize]\n    },\n    backend: backend\n  });\n  var reduced = reduce(reshapedInput, 'float32', 'mean', backend);\n  var reshapedOutput = reshape({\n    inputs: {\n      x: reduced\n    },\n    attrs: {\n      shape: outShape\n    },\n    backend: backend\n  });\n  backend.disposeIntermediateTensorInfo(reshapedInput);\n  backend.disposeIntermediateTensorInfo(reduced);\n  return reshapedOutput;\n}","map":{"version":3,"sources":["../../src/kernels/Mean_impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;AAeG;AAEH,SAAoB,IAApB,QAA+B,uBAA/B;AAGA,SAAQ,MAAR,QAAqB,wBAArB;AACA,SAAQ,OAAR,QAAsB,oBAAtB;AAEA,OAAM,SAAU,QAAV,CACF,CADE,EACa,WADb,EACoC,QADpC,EAEF,OAFE,EAEuB;AAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,aAAL,CAAmB,WAAnB,CAAf;AACA,MAAM,KAAK,GAAG,IAAI,CAAC,aAAL,CAAmB,CAAC,CAAC,KAArB,CAAd;AACA,MAAM,SAAS,GAAG,KAAK,GAAG,MAA1B;AACA,MAAM,aAAa,GACf,OAAO,CAAC;AAAC,IAAA,MAAM,EAAE;AAAC,MAAA,CAAC,EAAD;AAAD,KAAT;AAAc,IAAA,KAAK,EAAE;AAAC,MAAA,KAAK,EAAE,CAAC,SAAD,EAAY,MAAZ;AAAR,KAArB;AAAmD,IAAA,OAAO,EAAP;AAAnD,GAAD,CADX;AAGA,MAAM,OAAO,GAAG,MAAM,CAAC,aAAD,EAAgB,SAAhB,EAA2B,MAA3B,EAAmC,OAAnC,CAAtB;AACA,MAAM,cAAc,GAChB,OAAO,CAAC;AAAC,IAAA,MAAM,EAAE;AAAC,MAAA,CAAC,EAAE;AAAJ,KAAT;AAAuB,IAAA,KAAK,EAAE;AAAC,MAAA,KAAK,EAAE;AAAR,KAA9B;AAAiD,IAAA,OAAO,EAAP;AAAjD,GAAD,CADX;AAGA,EAAA,OAAO,CAAC,6BAAR,CAAsC,aAAtC;AACA,EAAA,OAAO,CAAC,6BAAR,CAAsC,OAAtC;AAEA,SAAO,cAAP;AACD","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2020 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nimport { util } from '@tensorflow/tfjs-core';\nimport { reduce } from '../kernel_utils/reduce';\nimport { reshape } from '../kernels/Reshape';\nexport function meanImpl(x, reduceShape, outShape, backend) {\n    const inSize = util.sizeFromShape(reduceShape);\n    const xSize = util.sizeFromShape(x.shape);\n    const batchSize = xSize / inSize;\n    const reshapedInput = reshape({ inputs: { x }, attrs: { shape: [batchSize, inSize] }, backend });\n    const reduced = reduce(reshapedInput, 'float32', 'mean', backend);\n    const reshapedOutput = reshape({ inputs: { x: reduced }, attrs: { shape: outShape }, backend });\n    backend.disposeIntermediateTensorInfo(reshapedInput);\n    backend.disposeIntermediateTensorInfo(reduced);\n    return reshapedOutput;\n}\n//# sourceMappingURL=Mean_impl.js.map"]},"metadata":{},"sourceType":"module"}